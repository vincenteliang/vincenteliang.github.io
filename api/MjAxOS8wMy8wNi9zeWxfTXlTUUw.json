{"title":"MySQL基础篇","date":"2019-03-07T00:00:00.000Z","date_formatted":{"ll":"Mar 7, 2019","L":"03/07/2019","MM-DD":"03-07"},"thumbnail":"https://blog-1251959181.cos.accelerate.myqcloud.com/mysql.jpg","link":"2019/03/06/syl_MySQL","comments":true,"tags":["Note","SQL"],"categories":["Coding"],"updated":"2024-07-01T17:57:02.538Z","content":"<p><strong><a href=\"https://www.shiyanlou.com/\" target=\"_blank\">实验楼</a>课程笔记——<a href=\"https://www.shiyanlou.com/courses/9\" target=\"_blank\">MySQL 基础课程</a></strong></p>\n<h2 id=\"实验一-sql介绍及mysql安装\">实验一 SQL介绍及MySQL安装<a title=\"#实验一-sql介绍及mysql安装\" href=\"#实验一-sql介绍及mysql安装\"></a></h2>\n<p>结构化查询语言SQL(<code>Structured Query Language</code>)是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统，同时也是数据库脚本文件的扩展名。</p>\n<p>Ubuntu Linux 安装配置 MySQL</p>\n<blockquote>\n<p>安装 MySQL 服务端、核心程序：<code>sudo apt-get install mysql-server</code><br>\n安装 MySQL 客户端：<code>sudo apt-get install mysql-client</code><br>\n打开MySQL服务：<code>sudo service mysql start</code><br>\n使用root用户登陆：<code>mysql -u root</code>/<code>mysql -u root -p</code><br>\n查看数据库：<code>show databases;</code><br>\n连接数据库：<code>use &lt;数据库名&gt;</code>（本条指令可不加分号，其余指令要记得加）<br>\n查看表：<code>show tables;</code><br>\n退出：<code>quit</code></p>\n</blockquote>\n<h2 id=\"实验二-创建数据库并插入数据\">实验二 创建数据库并插入数据<a title=\"#实验二-创建数据库并插入数据\" href=\"#实验二-创建数据库并插入数据\"></a></h2>\n<h3 id=\"1、新建数据库\">1、新建数据库<a title=\"#1、新建数据库\" href=\"#1、新建数据库\"></a></h3>\n<p>创建一个名为mysql_shiyan的数据库：<code>create database shiyan</code></p>\n<blockquote>\n<p>在大多数系统中，SQL语句都是不区分大小写的，因此<code>CREATE DATABASE shiyan</code>也是合法的。但是处于严谨，而且便于区分保留字(reserved word)和变量名，我们把保留字大写，把变量和数据小写。</p>\n</blockquote>\n<h3 id=\"2、连接数据库\">2、连接数据库<a title=\"#2、连接数据库\" href=\"#2、连接数据库\"></a></h3>\n<p>连接数据库：<code>use &lt;数据库名&gt;</code><br>\n查看数据表：<code>show tables;</code></p>\n<h3 id=\"3、数据表\">3、数据表<a title=\"#3、数据表\" href=\"#3、数据表\"></a></h3>\n<p>数据表（<code>table</code>）简称表，它是数据库最重要的组成部分之一。数据库只是一个框架，表才是实质内容。<br>\n而一个数据库中一般会有多张表，这些各自独立的表通过建立关系被联接起来，才成为可以交叉查阅、一目了然的数据库。</p>\n<h3 id=\"4、新建数据表\">4、新建数据表<a title=\"#4、新建数据表\" href=\"#4、新建数据表\"></a></h3>\n<p>在数据库中新建一张表的语句格式为：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> 表的名字</span><br><span class=\"line\">(</span><br><span class=\"line\">    列名a 数据类型(数据长度),</span><br><span class=\"line\">    列名b 数据类型(数据长度),</span><br><span class=\"line\">    列名c 数据类型(数据长度)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>在<code>shiyan</code>中新建一张表<code>employee</code>，包含姓名，ID和电话信息：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> employee (id <span class=\"type\">int</span>(<span class=\"number\">10</span>), name <span class=\"type\">char</span>(<span class=\"number\">20</span>), phone <span class=\"type\">int</span>(<span class=\"number\">12</span>));</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> department</span><br><span class=\"line\">    (</span><br><span class=\"line\">        dpt_name <span class=\"type\">CHAR</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">        dpt_phone <span class=\"type\">INT</span>(<span class=\"number\">12</span>)</span><br><span class=\"line\">    );</span><br></pre></td></tr></table></figure>\n<h3 id=\"5、数据类型\">5、数据类型<a title=\"#5、数据类型\" href=\"#5、数据类型\"></a></h3>\n<p>MySQL 的数据类型和其他编程语言大同小异，下表是一些 MySQL 常用数据类型：</p>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"text-align:center\">数据类型</th>\n<th style=\"text-align:center\">大小（字节）</th>\n<th style=\"text-align:center\">用途</th>\n<th style=\"text-align:center\">格式</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">INT</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">整数</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FLOAT</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">单精度浮点数</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DOUBLE</td>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">双精度浮点数</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ENUM</td>\n<td style=\"text-align:center\">–</td>\n<td style=\"text-align:center\">单选</td>\n<td style=\"text-align:center\">ENUM(‘A’,‘B’,‘C’)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">SET</td>\n<td style=\"text-align:center\">–</td>\n<td style=\"text-align:center\">多选</td>\n<td style=\"text-align:center\">SET(‘1’,‘2’,‘3’)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DATE</td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">日期</td>\n<td style=\"text-align:center\">YYYY-MM-DD</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">TIME</td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">时间点或持续时间</td>\n<td style=\"text-align:center\">HH:MM:SS</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">YEAR</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">年份值</td>\n<td style=\"text-align:center\">YYYY</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">CHAR</td>\n<td style=\"text-align:center\">0~255</td>\n<td style=\"text-align:center\">定长字符串</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">VARCHAR</td>\n<td style=\"text-align:center\">0~255</td>\n<td style=\"text-align:center\">变长字符串</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">TEXT</td>\n<td style=\"text-align:center\">0~65535</td>\n<td style=\"text-align:center\">长文本数据</td>\n<td style=\"text-align:center\"></td>\n</tr>\n</tbody>\n</table></div></div><p>整数除了 INT 外，还有 TINYINT、SMALLINT、MEDIUMINT、BIGINT。<br>\n<strong>CHAR和VARCHAR的区别</strong>: CHAR 的长度是固定的，而 VARCHAR 的长度是可以变化的，比如，存储字符串 “abc&quot;，对于 CHAR(10)，表示存储的字符将占 10 个字节(包括 7 个空字符)，而同样的 VARCHAR(12) 则只占用4个字节的长度，增加一个额外字节来存储字符串本身的长度，12 只是最大值，当你存储的字符小于 12 时，按实际长度存储。<br>\n<strong>ENUM和SET的区别:</strong> ENUM 类型的数据的值，必须是定义时枚举的值的其中之一，即单选，而 SET 类型的值则可以多选。</p>\n<p>相关链接：</p>\n<ul>\n<li><a href=\"https://blog.csdn.net/anxpp/article/details/51284106#comments\" target=\"_blank\">MySQL 中的数据类型介绍</a></li>\n<li><a href=\"https://www.cnblogs.com/bukudekong/archive/2011/06/27/2091590.html\" target=\"_blank\">MySQL 数据类型</a></li>\n</ul>\n<h3 id=\"6、插入数据\">6、插入数据<a title=\"#6、插入数据\" href=\"#6、插入数据\"></a></h3>\n<p>通过<code>INSERT</code>语句向表中插入数据：<code>INSERT INTO 表的名字(列名a,列名b,列名c) VALUE(值1,值2,值3);</code><br>\n尝试向<code>employee</code>中加入<code>Tom、Jack</code>和<code>Rose</code>：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> employee(id,name,phone) <span class=\"keyword\">VALUES</span>(<span class=\"number\">01</span>,<span class=\"string\">&#x27;Tom&#x27;</span>,<span class=\"number\">110110110</span>);</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> employee <span class=\"keyword\">VALUES</span>(<span class=\"number\">02</span>,<span class=\"string\">&#x27;Jack&#x27;</span>,<span class=\"number\">119119119</span>);</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> employee(id,name) <span class=\"keyword\">VALUES</span>(<span class=\"number\">03</span>,<span class=\"string\">&#x27;Rose&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><code>CHAR,VARCHAR,TEXT,DATE,TIME,ENUM</code>等类型的数据需要单引号修饰，而<code>INT,FLOAT,DOUBLE</code>等则不需要。<br>\n第一条语句比第二条语句多了一部分：<code>(id,name,phone)</code>这个括号里列出的，是将要添加的数据<code>(01,'Tom',110110110)</code>其中每个值在表中对应的列。而第三条语句只添加了<code>(id,name)</code>两列的数据，所以在表中<code>Rose</code>的<code>phone</code>为<code>NULL</code>。</p>\n<h3 id=\"实验二总结\">实验二总结<a title=\"#实验二总结\" href=\"#实验二总结\"></a></h3>\n<p>经过本次实验，我们已经有了一个名为 shiyan 的数据库，其中有两张表，我们已经向其中插入了一些数据。务必完整地操作一遍，以熟练SQL语句的使用。下一节我们将进入 SQL 约束的学习。</p>\n<h2 id=\"实验三-sql的约束\">实验三 SQL的约束<a title=\"#实验三-sql的约束\" href=\"#实验三-sql的约束\"></a></h2>\n<ul>\n<li>SQL 约束</li>\n</ul>\n<h3 id=\"1、约束分类\">1、约束分类<a title=\"#1、约束分类\" href=\"#1、约束分类\"></a></h3>\n<p>约束是一种限制，通过对表的行或列的数据做出限制，来确保表的数据的完整性、唯一性。<br>\nMySQL中常见的约束：</p>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"text-align:center\">约束类型</th>\n<th style=\"text-align:center\">关键字</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">主键</td>\n<td style=\"text-align:center\">PRIMARY KEY</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">默认值</td>\n<td style=\"text-align:center\">DEFAULT</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">唯一</td>\n<td style=\"text-align:center\">UNIQUE</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">外键</td>\n<td style=\"text-align:center\">FOREIGN KEY</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">非空</td>\n<td style=\"text-align:center\">NOT NULL</td>\n</tr>\n</tbody>\n</table></div></div><h3 id=\"2、建立含约束的表\">2、建立含约束的表<a title=\"#2、建立含约束的表\" href=\"#2、建立含约束的表\"></a></h3>\n<p>使用 git 命令将需要的数据文件下载到本地文件夹：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/shiyanlou/SQL3.git</span><br></pre></td></tr></table></figure>\n<p>加载文件中的数据，需要在 MySQL 控制台中输入命令：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source <span class=\"operator\">/</span>home<span class=\"operator\">/</span>shiyanlou<span class=\"operator\">/</span>Desktop<span class=\"operator\">/</span>SQL3<span class=\"operator\">/</span>MySQL<span class=\"number\">-03</span><span class=\"number\">-01.</span><span class=\"keyword\">sql</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、主键primary-key\">3、主键<code>PRIMARY KEY</code><a title=\"#3、主键primary-key\" href=\"#3、主键primary-key\"></a></h3>\n<p>用于约束表中的一行，作为这一行的唯一标识符，在一张表中通过主键就能准确定位到一行，因此主键十分重要，主键不能有重复记录且不能为空。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> employee</span><br><span class=\"line\">(</span><br><span class=\"line\">    id <span class=\"type\">INT</span>(<span class=\"number\">10</span>) <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">    name <span class=\"type\">CHAR</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">    <span class=\"keyword\">CONSTRAINT</span> 主键名 <span class=\"keyword\">PRIMARY</span> KEY(id),</span><br><span class=\"line\">    <span class=\"keyword\">CONSTRAINT</span> 主键名 <span class=\"keyword\">PRIMARY</span> KEY(id,name) <span class=\"operator\">/</span><span class=\"operator\">/</span>复合主键</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、默认值约束default\">4、默认值约束<code>DEFAULT</code><a title=\"#4、默认值约束default\" href=\"#4、默认值约束default\"></a></h3>\n<p>当有<code>DEFAULT</code>约束的列插入数据为空时，将使用默认值。</p>\n<p><code>DEFAULT</code> 约束只会在使用 <code>INSERT</code> 语句时体现出来， <code>INSERT</code> 语句中，如果被 <code>DEFAULT</code> 约束的位置没有值，那么这个位置将会被 <code>DEFAULT</code> 的值填充</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> department</span><br><span class=\"line\">(</span><br><span class=\"line\">    dpt_name <span class=\"type\">CHAR</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">    people_num <span class=\"type\">INT</span>(<span class=\"number\">10</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;10&#x27;</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"> 正常插入数据</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> department(dpt_name,people_num) <span class=\"keyword\">VALUES</span>(<span class=\"string\">&#x27;dpt1&#x27;</span>,<span class=\"number\">11</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"> 插入新的数据，people_num 为空，使用默认值</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> department(dpt_name) <span class=\"keyword\">VALUES</span>(<span class=\"string\">&#x27;dpt2&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"5、唯一约束unique\">5、唯一约束<code>UNIQUE</code><a title=\"#5、唯一约束unique\" href=\"#5、唯一约束unique\"></a></h3>\n<p>规定一张表中指定的一列的值必须不能有重复值，即这一列每个值都是唯一的。<br>\n当 <code>INSERT</code> 语句新插入的数据和已有数据重复的时候，如果有 <code>UNIQUE</code> 约束，则 <code>INSERT</code> 失败。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UNIQUE</span>(phone)</span><br></pre></td></tr></table></figure>\n<h3 id=\"6、外键约束foreign-key\">6、外键约束<code>FOREIGN KEY</code><a title=\"#6、外键约束foreign-key\" href=\"#6、外键约束foreign-key\"></a></h3>\n<p>既能确保数据完整性，也能表现表之间的关系。</p>\n<p>比如，现在有用户表和文章表，给文章表中添加一个指向用户 <code>id</code> 的外键，表示这篇文章所属的用户 <code>id</code>，外键将确保这个外键指向的记录是存在的，如果你尝试删除一个用户，而这个用户还有文章存在于数据库中，那么操作将无法完成并报错。因为你删除了该用户过后，他发布的文章都没有所属用户了，而这样的情况是不被允许的。同理，你在创建一篇文章的时候也不能为它指定一个不存在的用户 <code>id</code>。</p>\n<p>一个表可以有多个外键，每个外键必须 <code>REFERENCES</code> (参考) 另一个表的主键，被外键约束的列，取值必须在它参考的列中有对应值。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> employee</span><br><span class=\"line\">(</span><br><span class=\"line\">    in_dpt <span class=\"type\">CHAR</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">    <span class=\"keyword\">CONSTRAINT</span> 外键名 <span class=\"keyword\">FOREIGN</span> KEY(in_dpt) <span class=\"keyword\">REFERENCES</span> department(dpt_name)</span><br><span class=\"line\">     外键in_dpt参考列为department表的dpt_name列</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<h3 id=\"7、非空约束not-null\">7、非空约束<code>NOT NULL</code><a title=\"#7、非空约束not-null\" href=\"#7、非空约束not-null\"></a></h3>\n<p>被非空约束的列，在插入值时必须非空。<br>\n在MySQL中违反非空约束，会报错。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">salary <span class=\"type\">INT</span>(<span class=\"number\">10</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"实验三总结\">实验三总结<a title=\"#实验三总结\" href=\"#实验三总结\"></a></h3>\n<p>本节实验中通过一个数据库实例了解了主键、默认值、外键、非空、唯一这几种约束的特性，这几种约束都是最常见的，需要仔细理解每种约束的含义及使用场景。</p>\n<h2 id=\"实验四-select语句详解\">实验四 SELECT语句详解<a title=\"#实验四-select语句详解\" href=\"#实验四-select语句详解\"></a></h2>\n<ul>\n<li>SELECT 基本语法</li>\n<li>数学符号条件</li>\n<li>AND OR IN</li>\n<li>通配符</li>\n<li>排序</li>\n<li>SQL 内置函数和计算</li>\n<li>子查询与连接查询</li>\n</ul>\n<h3 id=\"1、基本的select语句\">1、基本的<code>SELECT</code>语句<a title=\"#1、基本的select语句\" href=\"#1、基本的select语句\"></a></h3>\n<p><code>SELECT</code> 语句的基本格式为：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> 要查询的列名 <span class=\"keyword\">FROM</span> 表名字 <span class=\"keyword\">WHERE</span> 限制条件;</span><br></pre></td></tr></table></figure>\n<p>如果要查询表的所有内容，则用一个星号 * 号表示。<br>\n而大多数情况，我们只需要查看某个表的指定的列，比如要查看 <code>employee</code> 表的 <code>name</code> 和 <code>age</code>：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> employee;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> name,age <span class=\"keyword\">FROM</span> employee;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、数学符号条件\">2、数学符号条件<a title=\"#2、数学符号条件\" href=\"#2、数学符号条件\"></a></h3>\n<p><code>SELECT</code> 语句常常会有 <code>WHERE</code> 限制条件，用于达到更加精确的查询。<code>WHERE</code>限制条件可以有数学符号 (<code>=,&lt;,&gt;,&gt;=,&lt;=</code>)</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 筛选出 age 大于 <span class=\"number\">25</span> 的结果</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> name,age <span class=\"keyword\">FROM</span> employee <span class=\"keyword\">WHERE</span> age<span class=\"operator\">&gt;</span><span class=\"number\">25</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"> 查找一个名字为 Mary 的员工的 name,age 和 phone：</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> name,age,phone <span class=\"keyword\">FROM</span> employee <span class=\"keyword\">WHERE</span> name<span class=\"operator\">=</span><span class=\"string\">&#x27;Mary&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、and与or\">3、<code>and</code>与<code>or</code><a title=\"#3、and与or\" href=\"#3、and与or\"></a></h3>\n<p><code>WHERE</code> 后面可以有不止一条限制，而根据条件之间的逻辑关系，可以用[<code>条件一 OR 条件二</code>]和[<code>条件一 AND 条件二</code>]连接</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 筛选出 age 小于 <span class=\"number\">25</span>，或 age 大于 <span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> name,age <span class=\"keyword\">FROM</span> employee <span class=\"keyword\">WHERE</span> age<span class=\"operator\">&lt;</span><span class=\"number\">25</span> <span class=\"keyword\">OR</span> age<span class=\"operator\">&gt;</span><span class=\"number\">30</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"> 筛选出 age 大于 <span class=\"number\">25</span>，且 age 小于 <span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> name,age <span class=\"keyword\">FROM</span> employee <span class=\"keyword\">WHERE</span> age<span class=\"operator\">&gt;</span><span class=\"number\">25</span> <span class=\"keyword\">AND</span> age<span class=\"operator\">&lt;</span><span class=\"number\">30</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"> 筛选出 age 大于等于 <span class=\"number\">25</span>，且 age 小于等于 <span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> name,age <span class=\"keyword\">FROM</span> employee <span class=\"keyword\">WHERE</span> age <span class=\"keyword\">BETWEEN</span> <span class=\"number\">25</span> <span class=\"keyword\">AND</span> <span class=\"number\">30</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、in和not-in\">4、<code>in</code>和<code>not in</code><a title=\"#4、in和not-in\" href=\"#4、in和not-in\"></a></h3>\n<p>关键词 <code>IN</code> 和 <code>NOT IN</code> 用于筛选“在”或“不在”某个范围内的结果。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 查询在 dpt3 或 dpt4 的人</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> name,age,phone,in_dpt <span class=\"keyword\">FROM</span> employee <span class=\"keyword\">WHERE</span> in_dpt <span class=\"keyword\">IN</span> (<span class=\"string\">&#x27;dpt3&#x27;</span>,<span class=\"string\">&#x27;dpt4&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"> 查询不在 dpt1 也不在 dpt3 的人：</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> name,age,phone,in_dpt <span class=\"keyword\">FROM</span> employee <span class=\"keyword\">WHERE</span> in_dpt <span class=\"keyword\">NOT</span> <span class=\"keyword\">IN</span> (<span class=\"string\">&#x27;dpt1&#x27;</span>,<span class=\"string\">&#x27;dpt3&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"5、通配符-_-和-%\">5、通配符 <code>_</code> 和 <code>%</code><a title=\"#5、通配符-_-和-%\" href=\"#5、通配符-_-和-%\"></a></h3>\n<p>关键字 <code>LIKE</code> 可用于实现模糊查询，常见于搜索功能中。<br>\n和 <code>LIKE</code> 联用的通常还有通配符，代表未知字符。SQL中的通配符是 <code>_</code> 和 <code>%</code> 。<br>\n<code>_</code> 代表一个未指定字符，<code>%</code> 代表不定个未指定字符。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 查找 <span class=\"number\">1101</span> 开头的<span class=\"number\">6</span>位数电话号码</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> name,age,phone <span class=\"keyword\">FROM</span> employee <span class=\"keyword\">WHERE</span> phone <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;1101__&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"> 查找首字母为 J 的人</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> name,age,phone <span class=\"keyword\">FROM</span> employee <span class=\"keyword\">WHERE</span> name <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;J%&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"6、对结果排序order-by\">6、对结果排序<code>ORDER BY</code><a title=\"#6、对结果排序order-by\" href=\"#6、对结果排序order-by\"></a></h3>\n<p>默认情况下，<code>ORDER BY</code> 的结果是升序排列，而使用关键词 <code>ASC</code> 和 <code>DESC</code> 可指定升序或降序排序。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 按 salary 降序排列</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> name,age,salary,phone <span class=\"keyword\">FROM</span> employee <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> salary <span class=\"keyword\">DESC</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"7、sql内置函数和计算\">7、SQL内置函数和计算<a title=\"#7、sql内置函数和计算\" href=\"#7、sql内置函数和计算\"></a></h3>\n<p>SQL 允许对表中的数据进行计算。对此，SQL 有 5 个内置函数，这些函数都对 <code>SELECT</code> 的结果做操作：</p>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"text-align:center\">函数名</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">COUNT</td>\n<td style=\"text-align:center\">计数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">SUM</td>\n<td style=\"text-align:center\">求和</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">AVG</td>\n<td style=\"text-align:center\">求平均值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MAX</td>\n<td style=\"text-align:center\">最大值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MIN</td>\n<td style=\"text-align:center\">最小值</td>\n</tr>\n</tbody>\n</table></div></div><p>其中 <code>COUNT</code> 函数可用于任何数据类型(因为它只是计数)，而 <code>SUM</code> 、<code>AVG</code> 函数都只能对数字类数据类型做计算，<code>MAX</code> 和 <code>MIN</code> 可用于数值、字符串或是日期时间数据类型。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 计算出 salary 的最大、最小值</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">MAX</span>(salary) <span class=\"keyword\">AS</span> max_salary,<span class=\"built_in\">MIN</span>(salary) <span class=\"keyword\">FROM</span> employee;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用 <code>AS</code> 关键词可以给值重命名，比如最大值被命名为了 <code>max_salary</code></li>\n</ul>\n<h3 id=\"8、子查询\">8、子查询<a title=\"#8、子查询\" href=\"#8、子查询\"></a></h3>\n<p>有时必须处理多个表才能获得所需的信息。<br>\n例如：想要知道名为 “Tom” 的员工所在部门做了几个工程。员工信息储存在 <code>employee</code> 表中，但工程信息储存在 <code>project</code> 表中。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> of_dpt,<span class=\"built_in\">COUNT</span>(proj_name) <span class=\"keyword\">AS</span> count_project <span class=\"keyword\">FROM</span> project <span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> of_dpt <span class=\"keyword\">HAVING</span> of_dpt <span class=\"keyword\">IN</span>(<span class=\"keyword\">SELECT</span> in_dpt <span class=\"keyword\">FROM</span> employee <span class=\"keyword\">WHERE</span> name<span class=\"operator\">=</span><span class=\"string\">&#x27;Tom&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>上面代码包含两个 <code>SELECT</code> 语句，第二个 <code>SELECT</code> 语句将返回一个集合的数据形式，然后被第一个 <code>SELECT</code> 语句用 <code>in</code> 进行判断。</li>\n<li><code>HAVING</code> 关键字可以的作用和 <code>WHERE</code> 是一样的，都是说明接下来要进行条件筛选操作。区别在于 <code>HAVING</code> 用于对分组后的数据进行筛选</li>\n<li>\n<blockquote>\n<p>子查询还可以扩展到 3 层、4 层或更多层。</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"9、连接查询join\">9、连接查询<code>join</code><a title=\"#9、连接查询join\" href=\"#9、连接查询join\"></a></h3>\n<p>如果需要显示两个表或多个表中的数据，这时就必须使用连接 <code>join</code> 操作。<br>\n连接的基本思想是把两个或多个表当作一个新的表来操作。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 查询各员工所在部门的人数，其中员工的 id 和 name 来自 employee 表，people_num 来自 department 表</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> id,name,people_num <span class=\"keyword\">FROM</span> employee,department <span class=\"keyword\">WHERE</span> employee.in_dpt <span class=\"operator\">=</span> department.dpt_name <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> id;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> id,name,people_num <span class=\"keyword\">FROM</span> employee <span class=\"keyword\">JOIN</span> department <span class=\"keyword\">ON</span> employee.in_dpt <span class=\"operator\">=</span> department.dpt_name <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> id;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"实验四总结\">实验四总结<a title=\"#实验四总结\" href=\"#实验四总结\"></a></h3>\n<p>本节实验中学习了 <code>SELECT</code> 语句的常用方法</p>\n<h2 id=\"实验五-数据库及表的修改和删除\">实验五 数据库及表的修改和删除<a title=\"#实验五-数据库及表的修改和删除\" href=\"#实验五-数据库及表的修改和删除\"></a></h2>\n<ul>\n<li>数据库操作</li>\n<li>数据表操作</li>\n<li>更新和删除数据</li>\n</ul>\n<h3 id=\"1、删除数据库drop-database\">1、删除数据库<code>DROP DATABASE</code><a title=\"#1、删除数据库drop-database\" href=\"#1、删除数据库drop-database\"></a></h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 删除名为 test_01 的数据库：</span><br><span class=\"line\"><span class=\"keyword\">DROP</span> DATABASE test_01;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>关于修改数据库</strong><br>\n目前 Mysql 没有提供修改数据库名称的方法，因为这曾导致一系列安全问题。<br>\n在老版本中 <code>RENAME DATABASE</code> 可以修改数据库名称，这条命令在 MySQL 5.1.7 中被加入，但官方很快就发现这条命令所带来的危险，于是在 MySQL 5.1.23 中把这条命令移除。<br>\n事实上，数据库名几乎不会遇到必须修改的情况，如果你一定要这么做，比较安全的做法是重新建一个新库，然后将旧库中的数据转移到新库中，并且暂时不要删除旧的数据库，以防数据遗失。</p>\n</blockquote>\n<h3 id=\"2、对一张表的修改\">2、对一张表的修改<a title=\"#2、对一张表的修改\" href=\"#2、对一张表的修改\"></a></h3>\n<h4 id=\"1.重命名一张表rename\">1.重命名一张表<code>RENAME</code><a title=\"#1.重命名一张表rename\" href=\"#1.重命名一张表rename\"></a></h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RENAME <span class=\"keyword\">TABLE</span> 原名 <span class=\"keyword\">TO</span> 新名字;</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 原名 RENAME 新名;</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 原名 RENAME <span class=\"keyword\">TO</span> 新名;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2.删除一张表drop\">2.删除一张表<code>DROP</code><a title=\"#2.删除一张表drop\" href=\"#2.删除一张表drop\"></a></h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> 表名字;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、对一列的修改-/-对表结构的修改\">3、对一列的修改 / 对表结构的修改<a title=\"#3、对一列的修改-/-对表结构的修改\" href=\"#3、对一列的修改-/-对表结构的修改\"></a></h3>\n<p>对表结构的修改是难点，有时候一些小的错误会造成不可挽回的后果，所以请细心操作。<br>\n另外需要注意，非必要情况不要修改表结构。</p>\n<h4 id=\"1.增加一列add\">1.增加一列<code>ADD</code><a title=\"#1.增加一列add\" href=\"#1.增加一列add\"></a></h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 表名字 <span class=\"keyword\">ADD</span> <span class=\"keyword\">COLUMN</span> 列名字 数据类型 约束;</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 表名字 <span class=\"keyword\">ADD</span> 列名字 数据类型 约束;</span><br></pre></td></tr></table></figure>\n<p>新增加的列，被默认放置在这张表的最右边。如果要把增加的列插入在指定位置，则需要在语句的最后使用<code>AFTER</code>关键词(<code>AFTER 列1</code> 表示新增的列被放置在 “列1” 的后面)。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 新增一列 weight(体重) 放置在 age(年龄) 的后面</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> employee <span class=\"keyword\">ADD</span> weight <span class=\"type\">INT</span>(<span class=\"number\">4</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"number\">120</span> AFTER age;</span><br><span class=\"line\"></span><br><span class=\"line\"> 想放在第一列的位置，则使用 <span class=\"keyword\">FIRST</span> 关键词</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> employee <span class=\"keyword\">ADD</span> test <span class=\"type\">INT</span>(<span class=\"number\">10</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"number\">11</span> <span class=\"keyword\">FIRST</span>;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>提醒：语句中的 <code>INT(4)</code> 不是表示整数的字节数，而是表示该值的显示宽度，如果设置填充字符为 0，则 170 显示为 0170</p>\n</blockquote>\n<h4 id=\"2.删除一列drop\">2.删除一列<code>DROP</code><a title=\"#2.删除一列drop\" href=\"#2.删除一列drop\"></a></h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 表名字 <span class=\"keyword\">DROP</span> <span class=\"keyword\">COLUMN</span> 列名字;</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 表名字 <span class=\"keyword\">DROP</span> 列名字;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3.重命名一列change\">3.重命名一列<code>CHANGE</code><a title=\"#3.重命名一列change\" href=\"#3.重命名一列change\"></a></h4>\n<p>这条语句其实不只可用于重命名一列，准确地说，它是对一个列做修改。<br>\n当原列名和新列名相同的时候，指定新的数据类型或约束，就可以用于修改数据类型或约束。需要注意的是，修改数据类型可能会导致数据丢失，所以要慎重使用。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 将 “height” 一列重命名为汉语拼音 “shengao” ，效果如下：</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> employee CHANGE height shengao <span class=\"type\">INT</span>(<span class=\"number\">4</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"number\">170</span>;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：这条重命名语句后面的 “数据类型” 不能省略，否则重命名失败。</p>\n</blockquote>\n<h4 id=\"4.改变数据类型modify\">4.改变数据类型<code>MODIFY</code><a title=\"#4.改变数据类型modify\" href=\"#4.改变数据类型modify\"></a></h4>\n<p>要修改一列的数据类型，除了使用刚才的 <code>CHANGE</code> 语句外，还可以用这样的 <code>MODIFY</code> 语句：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 表名字 MODIFY 列名字 新数据类型;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>再次提醒，修改数据类型必须小心，因为这可能会导致数据丢失。在尝试修改数据类型之前，请慎重考虑。</p>\n</blockquote>\n<h3 id=\"4、对表的内容修改\">4、对表的内容修改<a title=\"#4、对表的内容修改\" href=\"#4、对表的内容修改\"></a></h3>\n<h4 id=\"1.修改表中某个值update\">1.修改表中某个值<code>UPDATE</code><a title=\"#1.修改表中某个值update\" href=\"#1.修改表中某个值update\"></a></h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> 表名字 <span class=\"keyword\">SET</span> 列<span class=\"number\">1</span><span class=\"operator\">=</span>值<span class=\"number\">1</span>,列<span class=\"number\">2</span><span class=\"operator\">=</span>值<span class=\"number\">2</span> <span class=\"keyword\">WHERE</span> 条件;</span><br><span class=\"line\"> 把 Tom 的 age 改为 <span class=\"number\">21</span>，salary 改为 <span class=\"number\">3000</span>：</span><br><span class=\"line\"><span class=\"keyword\">UPDATE</span> employee <span class=\"keyword\">SET</span> age<span class=\"operator\">=</span><span class=\"number\">21</span>,salary<span class=\"operator\">=</span><span class=\"number\">3000</span> <span class=\"keyword\">WHERE</span> name<span class=\"operator\">=</span><span class=\"string\">&#x27;Tom&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：一定要有 <code>WHERE</code> 条件，否则会出现你不想看到的后果</p>\n</blockquote>\n<h4 id=\"2.删除一行记录delete\">2.删除一行记录<code>DELETE</code><a title=\"#2.删除一行记录delete\" href=\"#2.删除一行记录delete\"></a></h4>\n<p>删除表中的一行数据，也必须加上 <code>WHERE</code> 条件，否则整列的数据都会被删除。删除语句：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DELETE</span> <span class=\"keyword\">FROM</span> 表名字 <span class=\"keyword\">WHERE</span> 条件;</span><br><span class=\"line\"> 把 Tom 的数据删除：</span><br><span class=\"line\"><span class=\"keyword\">DELETE</span> <span class=\"keyword\">FROM</span> employee <span class=\"keyword\">WHERE</span> name<span class=\"operator\">=</span><span class=\"string\">&#x27;Tom&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"实验五总结\">实验五总结<a title=\"#实验五总结\" href=\"#实验五总结\"></a></h3>\n<p>本节实验中我们学习了对数据库、数据库表、数据库表项及记录的修改和删除方法。</p>\n<h2 id=\"实验六-其他基本操作\">实验六 其他基本操作<a title=\"#实验六-其他基本操作\" href=\"#实验六-其他基本操作\"></a></h2>\n<ul>\n<li>索引</li>\n<li>视图</li>\n<li>导入和导出</li>\n<li>备份和恢复</li>\n</ul>\n<h3 id=\"1、索引index\">1、索引<code>INDEX</code><a title=\"#1、索引index\" href=\"#1、索引index\"></a></h3>\n<p>索引是一种与表有关的结构，它的作用相当于书的目录，可以根据目录中的页码快速找到所需的内容。<br>\n当表中有大量记录时，若要对表进行查询，没有索引的情况是全表搜索：将所有记录一一取出，和查询条件进行一一对比，然后返回满足条件的记录。这样做会消耗大量数据库系统时间，并造成大量磁盘 I/O 操作。<br>\n而如果在表中已建立索引，在索引中找到符合查询条件的索引值，通过索引值就可以快速找到表中的数据，可以大大<strong>加快查询速度</strong>。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 表名字 <span class=\"keyword\">ADD</span> INDEX 索引名 (列名);</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> INDEX 索引名 <span class=\"keyword\">ON</span> 表名字 (列名);</span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> INDEX <span class=\"keyword\">FROM</span> 表名字;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在使用 <code>SELECT</code> 语句查询的时候，语句中 <code>WHERE</code> 里面的条件，会自动判断有没有可用的索引。<br>\n这时候，如果你要查找某一用户，使用语句 <code>select * from user where username=?</code> 和 <code>select * from user where note=?</code> 性能是有很大差距的，对建立了索引的用户名进行条件查询会比没有索引的个性签名条件查询快几倍，在数据量大的时候，这个差距只会更大。<br>\n一些字段不适合创建索引，比如性别，这个字段存在大量的重复记录无法享受索引带来的速度加成，甚至会拖累数据库，导致数据冗余和额外的 CPU 开销。</p>\n</blockquote>\n<h3 id=\"2、视图view\">2、视图<code>VIEW</code><a title=\"#2、视图view\" href=\"#2、视图view\"></a></h3>\n<p>视图是从一个或多个表中导出来的表，是一种虚拟存在的表。</p>\n<blockquote>\n<p>注意理解视图是虚拟的表：</p>\n<ul>\n<li>数据库中只存放了视图的定义，而没有存放视图中的数据，这些数据存放在原来的表中；</li>\n<li>使用视图查询数据时，数据库系统会从原来的表中取出对应的数据；</li>\n<li>视图中的数据依赖于原来表中的数据，一旦表中数据发生改变，显示在视图中的数据也会发生改变；</li>\n<li>在使用视图的时候，可以把它当作一张表。</li>\n</ul>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 创建视图</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span> 视图名(列a,列b,列c) <span class=\"keyword\">AS</span> <span class=\"keyword\">SELECT</span> 列<span class=\"number\">1</span>,列<span class=\"number\">2</span>,列<span class=\"number\">3</span> <span class=\"keyword\">FROM</span> 表名字;</span><br><span class=\"line\"></span><br><span class=\"line\"> 创建一个视图，名为 v_emp，包含v_name，v_age，v_phone三个列</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span> v_emp (v_name,v_age,v_phone) <span class=\"keyword\">AS</span> <span class=\"keyword\">SELECT</span> name,age,phone <span class=\"keyword\">FROM</span> employee;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>创建视图的语句后半句是一个 <code>SELECT</code> 查询语句，所以视图也可以建立在多张表上，只需在 <code>SELECT</code> 语句中使用子查询或连接查询，这些在之前的实验已经进行过。</p>\n</blockquote>\n<h3 id=\"3、导入load\">3、导入<code>LOAD</code><a title=\"#3、导入load\" href=\"#3、导入load\"></a></h3>\n<p>由于导入导出大量数据都属于敏感操作，根据 mysql 的安全策略，导入导出的文件都必须在指定的路径下进行。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 查看安全路径变量</span><br><span class=\"line\"><span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%secure%&#x27;</span>;</span><br><span class=\"line\"> 导入纯数据文件</span><br><span class=\"line\">LOAD DATA INFILE <span class=\"string\">&#x27;文件路径和文件名&#x27;</span> <span class=\"keyword\">INTO</span> <span class=\"keyword\">TABLE</span> 表名字;</span><br><span class=\"line\"> 导入<span class=\"keyword\">SQL</span>语句文件</span><br><span class=\"line\">source <span class=\"operator\">*</span>.<span class=\"keyword\">sql</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4、导出\">4、导出<a title=\"#4、导出\" href=\"#4、导出\"></a></h3>\n<p>导出与导入是相反的过程，是把数据库某个表中的数据保存到一个文件之中。导出语句基本格式为：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> 列<span class=\"number\">1</span>，列<span class=\"number\">2</span> <span class=\"keyword\">INTO</span> OUTFILE <span class=\"string\">&#x27;文件路径和文件名&#x27;</span> <span class=\"keyword\">FROM</span> 表名字;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：语句中 “文件路径” 之下不能已经有同名文件</p>\n</blockquote>\n<h3 id=\"5、备份mysqldump\">5、备份<code>mysqldump</code><a title=\"#5、备份mysqldump\" href=\"#5、备份mysqldump\"></a></h3>\n<p>数据库中的数据十分重要，出于安全性考虑，在数据库的使用中，应该注意使用备份功能。<br>\n<code>mysqldump</code> 是 MySQL 用于备份数据库的实用程序。它主要产生一个 SQL 脚本文件，其中包含从头重新创建数据库所必需的命令 <code>CREATE TABLE INSERT</code> 等。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 使用 mysqldump 备份的语句：</span><br><span class=\"line\">mysqldump -u root 数据库名&gt;备份文件名;   #备份整个数据库</span><br><span class=\"line\">mysqldump -u root 数据库名 表名字&gt;备份文件名;  #备份整个表</span><br><span class=\"line\"></span><br><span class=\"line\"> 备份整个数据库 mysql_shiyan，将备份文件命名为 bak.sql</span><br><span class=\"line\">cd /home/shiyanlou/</span><br><span class=\"line\">mysqldump -u root mysql_shiyan &gt; bak.sql;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>备份与导出的区别：导出的文件只是保存数据库中的数据；而备份，则是把数据库的结构，包括数据、约束、索引、视图等全部另存为一个文件。</p>\n</blockquote>\n<h3 id=\"6、恢复\">6、恢复<a title=\"#6、恢复\" href=\"#6、恢复\"></a></h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> 把 <span class=\"keyword\">SQL</span><span class=\"number\">-06.</span><span class=\"keyword\">sql</span> 文件中保存的 mysql_shiyan 数据库恢复。</span><br><span class=\"line\">source <span class=\"operator\">/</span>tmp<span class=\"operator\">/</span>SQL6<span class=\"operator\">/</span>MySQL<span class=\"number\">-06.</span><span class=\"keyword\">sql</span></span><br><span class=\"line\"></span><br><span class=\"line\"> 新建一个名为test的数据库</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> DATABASE test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\">^</span>Z</span><br><span class=\"line\"></span><br><span class=\"line\"> 把备份的 bak.sql 恢复到 test 数据库</span><br><span class=\"line\">mysql <span class=\"operator\">-</span>u root test <span class=\"operator\">&lt;</span> bak.sql</span><br></pre></td></tr></table></figure>\n<h3 id=\"实验六总结\">实验六总结<a title=\"#实验六总结\" href=\"#实验六总结\"></a></h3>\n<p>在本实验中，我们实践了下面几个基本概念：</p>\n<ol>\n<li>索引：可以加快查询速度</li>\n<li>视图：是一种虚拟存在的表</li>\n<li>导入：从文件中导入数据到表</li>\n<li>导出：从表中导出到文件中</li>\n<li>备份：mysqldump 备份数据库到文件</li>\n<li>恢复：从文件恢复数据库</li>\n</ol>\n","prev":{"title":"24个CSS高级技巧合集","link":"2019/03/13/syl_CSS_skill_24"},"next":{"title":"Stay Hungry. Stay Foolish.","link":"2019/01/14/share_Jobs"},"plink":"https://vincenteliang.com/2019/03/06/syl_MySQL/","toc":[{"id":"实验一-sql介绍及mysql安装","title":"实验一 SQL介绍及MySQL安装","index":"1"},{"id":"实验二-创建数据库并插入数据","title":"实验二 创建数据库并插入数据","index":"2","children":[{"id":"1、新建数据库","title":"1、新建数据库","index":"2.1"},{"id":"2、连接数据库","title":"2、连接数据库","index":"2.2"},{"id":"3、数据表","title":"3、数据表","index":"2.3"},{"id":"4、新建数据表","title":"4、新建数据表","index":"2.4"},{"id":"5、数据类型","title":"5、数据类型","index":"2.5"},{"id":"6、插入数据","title":"6、插入数据","index":"2.6"},{"id":"实验二总结","title":"实验二总结","index":"2.7"}]},{"id":"实验三-sql的约束","title":"实验三 SQL的约束","index":"3","children":[{"id":"1、约束分类","title":"1、约束分类","index":"3.1"},{"id":"2、建立含约束的表","title":"2、建立含约束的表","index":"3.2"},{"id":"3、主键primary-key","title":"3、主键PRIMARY KEY","index":"3.3"},{"id":"4、默认值约束default","title":"4、默认值约束DEFAULT","index":"3.4"},{"id":"5、唯一约束unique","title":"5、唯一约束UNIQUE","index":"3.5"},{"id":"6、外键约束foreign-key","title":"6、外键约束FOREIGN KEY","index":"3.6"},{"id":"7、非空约束not-null","title":"7、非空约束NOT NULL","index":"3.7"},{"id":"实验三总结","title":"实验三总结","index":"3.8"}]},{"id":"实验四-select语句详解","title":"实验四 SELECT语句详解","index":"4","children":[{"id":"1、基本的select语句","title":"1、基本的SELECT语句","index":"4.1"},{"id":"2、数学符号条件","title":"2、数学符号条件","index":"4.2"},{"id":"3、and与or","title":"3、and与or","index":"4.3"},{"id":"4、in和not-in","title":"4、in和not in","index":"4.4"},{"id":"5、通配符-_-和-%","title":"5、通配符 _ 和 %","index":"4.5"},{"id":"6、对结果排序order-by","title":"6、对结果排序ORDER BY","index":"4.6"},{"id":"7、sql内置函数和计算","title":"7、SQL内置函数和计算","index":"4.7"},{"id":"8、子查询","title":"8、子查询","index":"4.8"},{"id":"9、连接查询join","title":"9、连接查询join","index":"4.9"},{"id":"实验四总结","title":"实验四总结","index":"4.10"}]},{"id":"实验五-数据库及表的修改和删除","title":"实验五 数据库及表的修改和删除","index":"5","children":[{"id":"1、删除数据库drop-database","title":"1、删除数据库DROP DATABASE","index":"5.1"},{"id":"2、对一张表的修改","title":"2、对一张表的修改","index":"5.2"},{"id":"3、对一列的修改-/-对表结构的修改","title":"3、对一列的修改 &#x2F; 对表结构的修改","index":"5.3"},{"id":"4、对表的内容修改","title":"4、对表的内容修改","index":"5.4"},{"id":"实验五总结","title":"实验五总结","index":"5.5"}]},{"id":"实验六-其他基本操作","title":"实验六 其他基本操作","index":"6","children":[{"id":"1、索引index","title":"1、索引INDEX","index":"6.1"},{"id":"2、视图view","title":"2、视图VIEW","index":"6.2"},{"id":"3、导入load","title":"3、导入LOAD","index":"6.3"},{"id":"4、导出","title":"4、导出","index":"6.4"},{"id":"5、备份mysqldump","title":"5、备份mysqldump","index":"6.5"},{"id":"6、恢复","title":"6、恢复","index":"6.6"},{"id":"实验六总结","title":"实验六总结","index":"6.7"}]}],"reward":true,"copyright":{"author":"Vincente Liang","link":"<a href=\"https://vincenteliang.com/2019/03/06/syl_MySQL/\" title=\"MySQL基础篇\">https://vincenteliang.com/2019/03/06/syl_MySQL/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"March 7, 2019","updated":"July 1, 2024"},"reading_time":"5370 words in 36 min"}