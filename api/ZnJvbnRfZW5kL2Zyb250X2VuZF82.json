{"title":"团队协作-文档与版本管理","date":"2020-04-13T00:00:00.000Z","date_formatted":{"ll":"Apr 13, 2020","L":"04/13/2020","MM-DD":"04-13"},"updated":"2024-07-01T17:57:02.542Z","content":"<p><strong><a href=\"https://www.imooc.com/\" target=\"_blank\">慕课网</a>实战课程笔记 —— <a href=\"https://class.imooc.com/sc/70/learn\" target=\"_blank\">大前端：前端全栈加强版！前端全栈+全周期+多端（升级Vue3.0）</a></strong></p>\n<h2 id=\"课程介绍\">课程介绍<a title=\"#课程介绍\" href=\"#课程介绍\"></a></h2>\n<p>项目开发过程中，少不了团队协作，那团队协作有哪些可以提升效率？团队协作第一弹：从文档管理、版本控制开始，我们了解Git flow和文档的管理办法，搭建团队的文档管理工具，提升工作效率。</p>\n<h2 id=\"第1章-项目开发团队协作——文档管理\">第1章 项目开发团队协作——文档管理<a title=\"#第1章-项目开发团队协作——文档管理\" href=\"#第1章-项目开发团队协作——文档管理\"></a></h2>\n<h3 id=\"1-1-章导读（敏捷流程之文档管理宝鉴）\">1-1 章导读（敏捷流程之文档管理宝鉴）<a title=\"#1-1-章导读（敏捷流程之文档管理宝鉴）\" href=\"#1-1-章导读（敏捷流程之文档管理宝鉴）\"></a></h3>\n<h3 id=\"1-2-markdown简介\">1-2 Markdown简介<a title=\"#1-2-markdown简介\" href=\"#1-2-markdown简介\"></a></h3>\n<h3 id=\"1-3-typora一款跨端的markdown实时编辑预览编辑器\">1-3 Typora一款跨端的Markdown实时编辑预览编辑器<a title=\"#1-3-typora一款跨端的markdown实时编辑预览编辑器\" href=\"#1-3-typora一款跨端的markdown实时编辑预览编辑器\"></a></h3>\n<h3 id=\"1-4-markdown常用语法\">1-4 Markdown常用语法<a title=\"#1-4-markdown常用语法\" href=\"#1-4-markdown常用语法\"></a></h3>\n<h3 id=\"1-5-typora主题及markdown输出样式自定义\">1-5 Typora主题及Markdown输出样式自定义<a title=\"#1-5-typora主题及markdown输出样式自定义\" href=\"#1-5-typora主题及markdown输出样式自定义\"></a></h3>\n<h3 id=\"1-7-4-款文档管理工具介绍（思想决定视野，工具提升效率）\">1-7 4 款文档管理工具介绍（思想决定视野，工具提升效率）<a title=\"#1-7-4-款文档管理工具介绍（思想决定视野，工具提升效率）\" href=\"#1-7-4-款文档管理工具介绍（思想决定视野，工具提升效率）\"></a></h3>\n<h3 id=\"1-8-showdoc的本地化安装\">1-8 ShowDoc的本地化安装<a title=\"#1-8-showdoc的本地化安装\" href=\"#1-8-showdoc的本地化安装\"></a></h3>\n<p><a href=\"https://www.showdoc.cc/help?page_id=65610\" target=\"_blank\">官方文档-Docker方式安装</a></p>\n<p>使用docker安装showdoc</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull star7th/showdoc</span><br><span class=\"line\">mkdir /showdoc_data</span><br><span class=\"line\">mkdir /showdoc_data/html</span><br><span class=\"line\">chmod -R 777 /showdoc_data/</span><br><span class=\"line\">docker run -d --name showdoc_test -p 13500:80 -v /showdoc_data/html/:/var/www/html/ star7th/showdoc</span><br><span class=\"line\">docker ps |grep showdoc_test</span><br><span class=\"line\">docker exec showdoc_test \\cp -fr /showdoc_data/html/ /var/www</span><br><span class=\"line\">firewall-cmd --add-port=13500/tcp --permanent</span><br><span class=\"line\">firewall-cmd --reload</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-9-showdoc工作流及配置\">1-9 ShowDoc工作流及配置<a title=\"#1-9-showdoc工作流及配置\" href=\"#1-9-showdoc工作流及配置\"></a></h3>\n<h3 id=\"1-10-云笔记&amp;个人笔记使用指北（勤练习才能写好文档）\">1-10 云笔记&amp;个人笔记使用指北（勤练习才能写好文档）<a title=\"#1-10-云笔记&amp;个人笔记使用指北（勤练习才能写好文档）\" href=\"#1-10-云笔记&amp;个人笔记使用指北（勤练习才能写好文档）\"></a></h3>\n<h3 id=\"1-11-hexo+github-pages自建博客（markdown的另类玩法）\">1-11 hexo+github pages自建博客（Markdown的另类玩法）<a title=\"#1-11-hexo+github-pages自建博客（markdown的另类玩法）\" href=\"#1-11-hexo+github-pages自建博客（markdown的另类玩法）\"></a></h3>\n<h3 id=\"1-12-章小结（文档管理工具按需取用）\">1-12 章小结（文档管理工具按需取用）<a title=\"#1-12-章小结（文档管理工具按需取用）\" href=\"#1-12-章小结（文档管理工具按需取用）\"></a></h3>\n<h2 id=\"第2章-项目开发团队协作——版本管理\">第2章 项目开发团队协作——版本管理<a title=\"#第2章-项目开发团队协作——版本管理\" href=\"#第2章-项目开发团队协作——版本管理\"></a></h2>\n<h3 id=\"2-1-章导学（敏捷流程之版本控制宝鉴）\">2-1 章导学（敏捷流程之版本控制宝鉴）<a title=\"#2-1-章导学（敏捷流程之版本控制宝鉴）\" href=\"#2-1-章导学（敏捷流程之版本控制宝鉴）\"></a></h3>\n<h3 id=\"2-2-语义化版本semantic-versioning（版本控制基础）\">2-2 语义化版本Semantic Versioning（版本控制基础）<a title=\"#2-2-语义化版本semantic-versioning（版本控制基础）\" href=\"#2-2-语义化版本semantic-versioning（版本控制基础）\"></a></h3>\n<p>语义化版本<br>\nsemver是语义化版本( Semantic Versioning )规范的一个实现，目前是由npm的团队维护，实现了版本和版本范围的解析、计算、比较。</p>\n<ul>\n<li><strong>alpha</strong> 内部测试版本，除非是内部测试人员，否则不推荐使用，有很多bug</li>\n<li><strong>beta</strong> 公测版本,消除了严重错误,还是会有缺陷,这个阶段还会持续加入新的功能</li>\n<li><strong>rc</strong> Release Candidate ,发行侯选版本。这个版本不会加入新的功能,主要是排错，修改Bug</li>\n<li><strong>release</strong></li>\n</ul>\n<h3 id=\"2-4-git工具导学&amp;git-vs-svn&amp;git多密钥管理\">2-4 git工具导学&amp;git vs svn&amp;git多密钥管理<a title=\"#2-4-git工具导学&amp;git-vs-svn&amp;git多密钥管理\" href=\"#2-4-git工具导学&amp;git-vs-svn&amp;git多密钥管理\"></a></h3>\n<h3 id=\"2-7-从零配置github到ssh秘钥克隆仓库（版本控制工具git）\">2-7 从零配置github到SSH秘钥克隆仓库（版本控制工具git）<a title=\"#2-7-从零配置github到ssh秘钥克隆仓库（版本控制工具git）\" href=\"#2-7-从零配置github到ssh秘钥克隆仓库（版本控制工具git）\"></a></h3>\n<h3 id=\"2-9-情景一：空仓库&amp;创建仓库提交代码（版本控制工具git）\">2-9 情景一：空仓库&amp;创建仓库提交代码（版本控制工具git）<a title=\"#2-9-情景一：空仓库&amp;创建仓库提交代码（版本控制工具git）\" href=\"#2-9-情景一：空仓库&amp;创建仓库提交代码（版本控制工具git）\"></a></h3>\n<h3 id=\"2-10-情境二：推送代码到多个仓库（版本控制工具git）\">2-10 情境二：推送代码到多个仓库（版本控制工具git）<a title=\"#2-10-情境二：推送代码到多个仓库（版本控制工具git）\" href=\"#2-10-情境二：推送代码到多个仓库（版本控制工具git）\"></a></h3>\n<h3 id=\"2-11-github仓库settings介绍（版本控制工具git）\">2-11 github仓库settings介绍（版本控制工具git）<a title=\"#2-11-github仓库settings介绍（版本控制工具git）\" href=\"#2-11-github仓库settings介绍（版本控制工具git）\"></a></h3>\n<h3 id=\"2-13-深入理解git工作原理——快照管理（版本控制工具git）\">2-13 深入理解git工作原理——快照管理（版本控制工具git）<a title=\"#2-13-深入理解git工作原理——快照管理（版本控制工具git）\" href=\"#2-13-深入理解git工作原理——快照管理（版本控制工具git）\"></a></h3>\n<ul>\n<li>工作区\n<ul>\n<li>git clone</li>\n<li>git init</li>\n<li>git add</li>\n<li>git fetch</li>\n<li>git pull / push</li>\n<li>git checkout</li>\n<li>git log / reflog</li>\n<li>git config / status</li>\n</ul>\n</li>\n<li>git版本库\n<ul>\n<li>stage\n<ul>\n<li>git reset</li>\n<li>git checkout</li>\n<li>git stash &amp; apply</li>\n<li>git rm</li>\n<li>git status</li>\n</ul>\n</li>\n<li>master\n<ul>\n<li>git branch</li>\n<li>git merge</li>\n<li>git diff</li>\n<li>git remote</li>\n<li>git rebase</li>\n<li>git reset</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-15-两种应用场景下的git-flow模型（多人协作git-flow工作流）\">2-15 两种应用场景下的git flow模型（多人协作git flow工作流）<a title=\"#2-15-两种应用场景下的git-flow模型（多人协作git-flow工作流）\" href=\"#2-15-两种应用场景下的git-flow模型（多人协作git-flow工作流）\"></a></h3>\n<h3 id=\"2-18-分支管理的基础命令介绍（多人协作之分支管理）\">2-18 分支管理的基础命令介绍（多人协作之分支管理）<a title=\"#2-18-分支管理的基础命令介绍（多人协作之分支管理）\" href=\"#2-18-分支管理的基础命令介绍（多人协作之分支管理）\"></a></h3>\n<p>经典模型</p>\n<p>master pre-production production</p>\n<h3 id=\"2-20-实操git-flow&amp;常见问题（多人协作之分支管理）\">2-20 实操git flow&amp;常见问题（多人协作之分支管理）<a title=\"#2-20-实操git-flow&amp;常见问题（多人协作之分支管理）\" href=\"#2-20-实操git-flow&amp;常见问题（多人协作之分支管理）\"></a></h3>\n<p>git-flow的重要意义</p>\n<ul>\n<li>多人协作，权限控制</li>\n<li>解决冲突</li>\n<li>溯源，问题issue</li>\n</ul>\n<p>branch创建原则</p>\n<ul>\n<li>按需创建</li>\n<li>重要的版本管理（版本历史）</li>\n<li>学会使用tags</li>\n</ul>\n<h3 id=\"2-22-docker-run搭建gitlab平台\">2-22 docker run搭建gitlab平台<a title=\"#2-22-docker-run搭建gitlab平台\" href=\"#2-22-docker-run搭建gitlab平台\"></a></h3>\n<h3 id=\"2-23-docker-compose搭建gitlab平台（自动动手）\">2-23 docker-compose搭建gitlab平台（自动动手）<a title=\"#2-23-docker-compose搭建gitlab平台（自动动手）\" href=\"#2-23-docker-compose搭建gitlab平台（自动动手）\"></a></h3>\n<h3 id=\"2-24-docker-compose运维gitlab平台：备份&amp;恢复（自动动手）\">2-24 docker-compose运维gitlab平台：备份&amp;恢复（自动动手）<a title=\"#2-24-docker-compose运维gitlab平台：备份&amp;恢复（自动动手）\" href=\"#2-24-docker-compose运维gitlab平台：备份&amp;恢复（自动动手）\"></a></h3>\n<h3 id=\"2-25-gitlab的权限介绍&amp;组权限控制&amp;分支保护\">2-25 gitlab的权限介绍&amp;组权限控制&amp;分支保护<a title=\"#2-25-gitlab的权限介绍&amp;组权限控制&amp;分支保护\" href=\"#2-25-gitlab的权限介绍&amp;组权限控制&amp;分支保护\"></a></h3>\n<h3 id=\"2-26-三种方法产生.gitignore文件（git必备知识）\">2-26 三种方法产生.gitignore文件（git必备知识）<a title=\"#2-26-三种方法产生.gitignore文件（git必备知识）\" href=\"#2-26-三种方法产生.gitignore文件（git必备知识）\"></a></h3>\n<h3 id=\"2-27-git的gui工具使用简介\">2-27 Git的GUI工具使用简介<a title=\"#2-27-git的gui工具使用简介\" href=\"#2-27-git的gui工具使用简介\"></a></h3>\n<h3 id=\"2-28-【温故知新】章总结\">2-28 【温故知新】章总结<a title=\"#2-28-【温故知新】章总结\" href=\"#2-28-【温故知新】章总结\"></a></h3>\n","link":"front_end/front_end_6","comments":true,"plink":"https://vincenteliang.com/front_end/front_end_6/","toc":[{"id":"课程介绍","title":"课程介绍","index":"1"},{"id":"第1章-项目开发团队协作——文档管理","title":"第1章 项目开发团队协作——文档管理","index":"2","children":[{"id":"1-1-章导读（敏捷流程之文档管理宝鉴）","title":"1-1 章导读（敏捷流程之文档管理宝鉴）","index":"2.1"},{"id":"1-2-markdown简介","title":"1-2 Markdown简介","index":"2.2"},{"id":"1-3-typora一款跨端的markdown实时编辑预览编辑器","title":"1-3 Typora一款跨端的Markdown实时编辑预览编辑器","index":"2.3"},{"id":"1-4-markdown常用语法","title":"1-4 Markdown常用语法","index":"2.4"},{"id":"1-5-typora主题及markdown输出样式自定义","title":"1-5 Typora主题及Markdown输出样式自定义","index":"2.5"},{"id":"1-7-4-款文档管理工具介绍（思想决定视野，工具提升效率）","title":"1-7 4 款文档管理工具介绍（思想决定视野，工具提升效率）","index":"2.6"},{"id":"1-8-showdoc的本地化安装","title":"1-8 ShowDoc的本地化安装","index":"2.7"},{"id":"1-9-showdoc工作流及配置","title":"1-9 ShowDoc工作流及配置","index":"2.8"},{"id":"1-10-云笔记&个人笔记使用指北（勤练习才能写好文档）","title":"1-10 云笔记&amp;个人笔记使用指北（勤练习才能写好文档）","index":"2.9"},{"id":"1-11-hexo+github-pages自建博客（markdown的另类玩法）","title":"1-11 hexo+github pages自建博客（Markdown的另类玩法）","index":"2.10"},{"id":"1-12-章小结（文档管理工具按需取用）","title":"1-12 章小结（文档管理工具按需取用）","index":"2.11"}]},{"id":"第2章-项目开发团队协作——版本管理","title":"第2章 项目开发团队协作——版本管理","index":"3","children":[{"id":"2-1-章导学（敏捷流程之版本控制宝鉴）","title":"2-1 章导学（敏捷流程之版本控制宝鉴）","index":"3.1"},{"id":"2-2-语义化版本semantic-versioning（版本控制基础）","title":"2-2 语义化版本Semantic Versioning（版本控制基础）","index":"3.2"},{"id":"2-4-git工具导学&git-vs-svn&git多密钥管理","title":"2-4 git工具导学&amp;git vs svn&amp;git多密钥管理","index":"3.3"},{"id":"2-7-从零配置github到ssh秘钥克隆仓库（版本控制工具git）","title":"2-7 从零配置github到SSH秘钥克隆仓库（版本控制工具git）","index":"3.4"},{"id":"2-9-情景一：空仓库&创建仓库提交代码（版本控制工具git）","title":"2-9 情景一：空仓库&amp;创建仓库提交代码（版本控制工具git）","index":"3.5"},{"id":"2-10-情境二：推送代码到多个仓库（版本控制工具git）","title":"2-10 情境二：推送代码到多个仓库（版本控制工具git）","index":"3.6"},{"id":"2-11-github仓库settings介绍（版本控制工具git）","title":"2-11 github仓库settings介绍（版本控制工具git）","index":"3.7"},{"id":"2-13-深入理解git工作原理——快照管理（版本控制工具git）","title":"2-13 深入理解git工作原理——快照管理（版本控制工具git）","index":"3.8"},{"id":"2-15-两种应用场景下的git-flow模型（多人协作git-flow工作流）","title":"2-15 两种应用场景下的git flow模型（多人协作git flow工作流）","index":"3.9"},{"id":"2-18-分支管理的基础命令介绍（多人协作之分支管理）","title":"2-18 分支管理的基础命令介绍（多人协作之分支管理）","index":"3.10"},{"id":"2-20-实操git-flow&常见问题（多人协作之分支管理）","title":"2-20 实操git flow&amp;常见问题（多人协作之分支管理）","index":"3.11"},{"id":"2-22-docker-run搭建gitlab平台","title":"2-22 docker run搭建gitlab平台","index":"3.12"},{"id":"2-23-docker-compose搭建gitlab平台（自动动手）","title":"2-23 docker-compose搭建gitlab平台（自动动手）","index":"3.13"},{"id":"2-24-docker-compose运维gitlab平台：备份&恢复（自动动手）","title":"2-24 docker-compose运维gitlab平台：备份&amp;恢复（自动动手）","index":"3.14"},{"id":"2-25-gitlab的权限介绍&组权限控制&分支保护","title":"2-25 gitlab的权限介绍&amp;组权限控制&amp;分支保护","index":"3.15"},{"id":"2-26-三种方法产生.gitignore文件（git必备知识）","title":"2-26 三种方法产生.gitignore文件（git必备知识）","index":"3.16"},{"id":"2-27-git的gui工具使用简介","title":"2-27 Git的GUI工具使用简介","index":"3.17"},{"id":"2-28-【温故知新】章总结","title":"2-28 【温故知新】章总结","index":"3.18"}]}],"reward":true,"copyright":{"author":"Vincente Liang","link":"<a href=\"https://vincenteliang.com/front_end/front_end_6/\" title=\"团队协作-文档与版本管理\">https://vincenteliang.com/front_end/front_end_6/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"April 13, 2020","updated":"July 1, 2024"}}