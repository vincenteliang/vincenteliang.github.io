{"title":"“平安报”提醒服务自动化折腾日记","date":"2020-05-14T00:00:00.000Z","date_formatted":{"ll":"May 14, 2020","L":"05/14/2020","MM-DD":"05-14"},"thumbnail":"https://blog-1251959181.cos.accelerate.myqcloud.com/ricecake_girl.jpg","link":"2020/05/13/ustb_checkIn","comments":true,"tags":["Note","Original Content"],"categories":["USTB"],"updated":"2024-07-01T17:57:02.538Z","content":"<div class=\"x-sign\" style='width:100%;text-align:center;'>\n    <div>人生最贵是闲暇</div>\n    <div>by 我的发小 Mr.Huyan</div>\n</div>\n<hr>\n<p>⚠️ <strong>注意，是把链接发群里提醒大家打卡，不是<a href=\"/2020/06/01/checkIn_auto\">自动打卡</a></strong></p>\n<h2 id=\"概述\">概述<a title=\"#概述\" href=\"#概述\"></a></h2>\n<h3 id=\"系统环境\">系统环境<a title=\"#系统环境\" href=\"#系统环境\"></a></h3>\n<ul>\n<li>MacBook Air (Retina, 13-inch, 2018)</li>\n<li>macOS Catalina 10.15.4</li>\n<li>Alfred 4.0.9</li>\n</ul>\n<h3 id=\"实现思路\">实现思路<a title=\"#实现思路\" href=\"#实现思路\"></a></h3>\n<p>首先要完成发送微信消息的功能，然后再加上定时:</p>\n<ul>\n<li>微信消息: <a href=\"https://github.com/MustangYM/WeChatExtension-ForMac\" target=\"_blank\">WeChatExtension-ForMac</a></li>\n<li>定时功能: <a href=\"https://www.jianshu.com/p/4addd9b455f2\" target=\"_blank\">launchctl</a></li>\n</ul>\n<hr>\n<h2 id=\"发送微信消息\">发送微信消息<a title=\"#发送微信消息\" href=\"#发送微信消息\"></a></h2>\n<h3 id=\"一些其他尝试\">一些其他尝试<a title=\"#一些其他尝试\" href=\"#一些其他尝试\"></a></h3>\n<p>在全球最大同性交友网站 <a href=\"https://github.com\" target=\"_blank\">GitHub</a> 上很容易找到微信机器人的实现，大多是基于<code>python</code>的实现，比如这些：</p>\n<ul>\n<li><a href=\"https://github.com/littlecodersh/ItChat\" target=\"_blank\">itchat</a></li>\n<li><a href=\"https://github.com/youfou/wxpy\" target=\"_blank\">可能是最优雅的微信个人号 API</a></li>\n</ul>\n<p>不过作为一名<s>前端开发工程师</s>，我当然是想要用<code>JavaScript</code>来写，还真找到了：</p>\n<ul>\n<li><a href=\"https://github.com/maiff/Itchat\" target=\"_blank\">Itchat的nodejs版本</a></li>\n<li><a href=\"https://github.com/wechaty/wechaty\" target=\"_blank\">Wechaty NPM Version</a></li>\n</ul>\n<p>其实网页微信是更好的解决办法，但腾讯对于网页版微信的管制越来越严格。我微信小号注册的晚，被官方禁用了网页微信。以下是尝试登陆网页微信时的返回信息。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">error</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ret</span>&gt;</span>1203<span class=\"tag\">&lt;/<span class=\"name\">ret</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">message</span>&gt;</span></span><br><span class=\"line\">        为了你的帐号安全，此微信号已不允许登录网页微信。</span><br><span class=\"line\">        你可以使用Windows微信或Mac微信在电脑端登录。</span><br><span class=\"line\">        Windows微信下载地址：https://pc.weixin.qq.com </span><br><span class=\"line\">        Mac微信下载地址：https://mac.weixin.qq.com</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">message</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">error</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>看来只能使用电脑端微信了。</p>\n<h3 id=\"具体实现\">具体实现<a title=\"#具体实现\" href=\"#具体实现\"></a></h3>\n<p>要使用 MacBook 发送微信消息需要如下步骤：</p>\n<ol>\n<li>打开微信</li>\n<li>找到好友/群</li>\n<li>输入消息发送</li>\n</ol>\n<h4 id=\"使用插件\">使用插件<a title=\"#使用插件\" href=\"#使用插件\"></a></h4>\n<p>首先感谢大神<a href=\"https://github.com/MustangYM\" target=\"_blank\">MustangYM</a>写的微信小助手，其中提供了为<code>Alfred</code>开发的<code>workflow</code>脚本。该脚本实现了调起<code>Alfred</code>输入名字和消息即可发送的功能，所以我们只需要把后面输入名字和消息的部分模拟一下就好了。</p>\n<h4 id=\"编写脚本\">编写脚本<a title=\"#编写脚本\" href=\"#编写脚本\"></a></h4>\n<p><code>macOS</code>的自动化操作可以由<code>AppleScript</code>实现，我找到的比较好的教程：<a href=\"https://sspai.com/post/43758\" target=\"_blank\">手把手教你用 AppleScript 模拟鼠标键盘操作，实现 macOS 系统的自动化操作</a></p>\n<p>要使用脚本调用<code>Alfred</code>的<code>workflow</code>需要在工作流的最前面添加标识符：</p>\n<!-- ![workflow 全貌]() -->\n<img src=\"https://blog-1251959181.file.myqcloud.com/check-in/1.jpg\">\n<p>脚本如下：</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">tell</span> <span class=\"built_in\">application</span> <span class=\"string\">&quot;System Events&quot;</span></span><br><span class=\"line\">\t<span class=\"keyword\">tell</span> <span class=\"built_in\">application</span> <span class=\"built_in\">id</span> <span class=\"string\">&quot;com.runningwithcrayons.Alfred&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">run</span> trigger <span class=\"string\">&quot;wx&quot;</span> <span class=\"keyword\">in</span> workflow <span class=\"string\">&quot;tkkk.wechatPlugin&quot;</span> <span class=\"keyword\">with</span> argument <span class=\"string\">&quot;dakatest&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br><span class=\"line\"><span class=\"keyword\">end</span> <span class=\"keyword\">tell</span></span><br></pre></td></tr></table></figure>\n<p>以上脚本可以唤起<code>Alfred</code>并向<code>workflow</code>中传递参数<code>dakatest</code>，顾名思义这是测试群的群名</p>\n<p>测试通过后，我们加入模拟键盘发送消息的部分，完整的脚本如下：</p>\n<figure class=\"highlight as\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tell application <span class=\"string\">&quot;System Events&quot;</span></span><br><span class=\"line\">\ttell application id <span class=\"string\">&quot;com.runningwithcrayons.Alfred&quot;</span> to run trigger <span class=\"string\">&quot;wx&quot;</span> <span class=\"keyword\">in</span> workflow <span class=\"string\">&quot;tkkk.wechatPlugin&quot;</span> <span class=\"keyword\">with</span> argument <span class=\"string\">&quot;dakatest&quot;</span></span><br><span class=\"line\">\tdelay <span class=\"number\">5</span> -- 确保搜索结果出现</span><br><span class=\"line\">\tkey code <span class=\"number\">18</span> using (command down) -- command + <span class=\"number\">1</span></span><br><span class=\"line\">\tdelay <span class=\"number\">2</span> -- 延迟<span class=\"number\">2</span>s</span><br><span class=\"line\">\tkeystroke <span class=\"string\">&quot;https://blog.vincenteliang.cn&quot;</span></span><br><span class=\"line\">\tdelay <span class=\"number\">5</span> -- 确保内容输入完成</span><br><span class=\"line\">\tkey code <span class=\"number\">36</span> -- 回车，中文输入法则为确认</span><br><span class=\"line\">\tkey code <span class=\"number\">36</span> -- 再次回车</span><br><span class=\"line\">end tell</span><br></pre></td></tr></table></figure>\n<p>至此，我们已经可以通过脚本将消息发送到微信群里，导出为脚本并放到某文件夹中备用</p>\n<hr>\n<h2 id=\"定时\">定时<a title=\"#定时\" href=\"#定时\"></a></h2>\n<p>使用<code>launchctl</code>定时启动脚本，比较好的教程：<a href=\"https://www.jianshu.com/p/4addd9b455f2\" target=\"_blank\">Mac中的定时任务利器：launchctl</a></p>\n<p>我们需要在每天凌晨运行这个脚本，编写<code>plist</code>文件如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">plist</span> <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//Apple//DTD PLIST 1.0//EN&quot;</span> <span class=\"string\">&quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">plist</span> <span class=\"attr\">version</span>=<span class=\"string\">&quot;1.0&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dict</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 名称，要全局唯一 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>Label<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>com.checkIn<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 命令， 第一个为命令，其它为参数--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 指定要运行的脚本 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>ProgramArguments<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">array</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>osascript<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>/Users/vincente/daka/checkIn.scpt<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">array</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 运行时间 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>StartCalendarInterval<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dict</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>Minute<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">integer</span>&gt;</span>00<span class=\"tag\">&lt;/<span class=\"name\">integer</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>Hour<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">integer</span>&gt;</span>00<span class=\"tag\">&lt;/<span class=\"name\">integer</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dict</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 标准输入文件 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>StandardInPath<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>/Users/vincente/daka/check-in.log<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 标准输出文件 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>StandardOutPath<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>/Users/vincente/daka/check-in.log<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 标准错误输出文件 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>StandardErrorPath<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">string</span>&gt;</span>/Users/vincente/daka/check-in.log<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dict</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">plist</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>编写好如下代码后，我们打开控制台，在<code>plist</code>文件所在目录执行以下命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">删除任务，如果是第一次，则不需要</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">launchctl unload -w com.checkIn.plist</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">加载任务</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">launchctl load -w com.checkIn.plist</span></span><br></pre></td></tr></table></figure>\n<p>加载任务后，脚本便会定时执行，在微信群里发送消息</p>\n<h2 id=\"优化\">优化<a title=\"#优化\" href=\"#优化\"></a></h2>\n<p>由于需求十分独特，我放弃了部分灵活性，对脚本进行了优化。</p>\n<p>上面的方案存在一个问题：键盘输入必须在登入状态下，如果电脑在锁定状态可以唤起<code>Alfred</code>，不能输入信息，也就是说我们需要把键盘输入这部分功能挪到脚本内部去。</p>\n<p>这样做同时也带来了另一个好处，以上方案虽然做到了定时，但对于电脑的使用者来说却并不是静默的，在脚本唤起并输入内容的这段时间我并不能正常的操作电脑，万一哪天半夜正在和室友开黑他突然跳出来我的操作就中断了，而我的任何操作又会打扰脚本的执行，最后很可能是打卡链接被发到了聊天框里……</p>\n<!-- ![真的发出去了（假的）]() -->\n<p>这就需要我们修改<code>Alfred</code>的<code>workflow</code>了，不过由于是图形化操作这并不难，观察<a href=\"https://github.com/MustangYM\" target=\"_blank\">MustangYM</a>大神的插件我们可以发现其文件结构如下：</p>\n<div class=\"φbu φbx\">\n<details>\n<summary>/user.workflow</summary>\n<ul>\n<li>/images</li>\n<li>/workflow</li>\n<li><a href=\"http://convert.py\">convert.py</a></li>\n<li><a href=\"http://openSession.py\">openSession.py</a></li>\n<li><a href=\"http://search.py\">search.py</a></li>\n<li><a href=\"http://sendMsg.py\">sendMsg.py</a></li>\n<li><a href=\"http://userChatLog.py\">userChatLog.py</a></li>\n<li>icon.png</li>\n<li>info.plist</li>\n<li>version</li>\n</details>\n</li>\n</ul>\n</div><p>而发送消息的文件名为<code>sendMsg.py</code>，我们只需要将这步直接连到最前面，也就是触发后立即执行。</p>\n<img src=\"https://blog-1251959181.file.myqcloud.com/check-in/2.jpg\">\n<!-- ![修改后的 workflow]() -->\n<p>还要修改<code>python</code>文件，把找好友的相关功能加上，这里省略<s>亿点点</s>一点点分析与调试过程，改装好的代码是这样的：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding:utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys,os,json,time</span><br><span class=\"line\"><span class=\"keyword\">from</span> workflow <span class=\"keyword\">import</span> Workflow, web</span><br><span class=\"line\"></span><br><span class=\"line\">reload(sys)</span><br><span class=\"line\">sys.setdefaultencoding(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>(<span class=\"params\">wf</span>):</span><br><span class=\"line\">    query = sys.argv[<span class=\"number\">1</span>]</span><br><span class=\"line\">    baseUrl = os.getenv(<span class=\"string\">&#x27;baseUrl&#x27;</span>)</span><br><span class=\"line\">    url = baseUrl + <span class=\"string\">&#x27;user?keyword=&#x27;</span> + query</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        result = web.get(url=url)</span><br><span class=\"line\">        result.raise_for_status()</span><br><span class=\"line\">        resp = result.text</span><br><span class=\"line\">        userList = json.loads(resp)</span><br><span class=\"line\">        userId = userList[<span class=\"number\">0</span>][<span class=\"string\">&#x27;userId&#x27;</span>]</span><br><span class=\"line\">        msgContent = time.strftime(<span class=\"string\">&quot;%m&quot;</span>) + <span class=\"string\">&quot;月&quot;</span> + time.strftime(<span class=\"string\">&quot;%d&quot;</span>) + <span class=\"string\">&quot;日打卡:\\nhttps://isport.ustb.edu.cn/app.RSPWxClient/index.jsp?m=yqinfo&amp;c=index&amp;a=init&quot;</span></span><br><span class=\"line\">        url1 = baseUrl + <span class=\"string\">&#x27;send-message&#x27;</span></span><br><span class=\"line\">        data = &#123;<span class=\"string\">&#x27;userId&#x27;</span>: userId, <span class=\"string\">&#x27;content&#x27;</span>: msgContent&#125;</span><br><span class=\"line\">        r = web.post(url=url1,data=data)</span><br><span class=\"line\">        r.raise_for_status()</span><br><span class=\"line\">        wf.send_feedback()</span><br><span class=\"line\">    <span class=\"keyword\">except</span> IOError:</span><br><span class=\"line\">        wf.add_item(title=<span class=\"string\">&#x27;请先启动微信 &amp; 登录…&#x27;</span>,subtitle=<span class=\"string\">&#x27;并确保安装微信小助手&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    wf = Workflow()</span><br><span class=\"line\">    sys.exit(wf.run(main))</span><br></pre></td></tr></table></figure>\n<p>至此就可以实现静默发送了，也可以在电脑锁屏的状态下发送出去。</p>\n<p><code>macOS</code>的工作机制是合上盖子就休眠，下载<a href=\"https://www.macbl.com/app/system/insomniax\" target=\"_blank\">InsomniaX</a>软件即可禁用合盖休眠</p>\n<p>至此，我们只需在睡前给<code>MacBook</code>插上电源，合上盖子，打卡消息就会自动发送啦~</p>\n<hr>\n<h2 id=\"参考资料\">参考资料<a title=\"#参考资料\" href=\"#参考资料\"></a></h2>\n<ul>\n<li><a href=\"https://sspai.com/post/43758\" target=\"_blank\">手把手教你用 AppleScript 模拟鼠标键盘操作，实现 macOS 系统的自动化操作</a></li>\n<li><a href=\"https://eastmanreference.com/complete-list-of-applescript-key-codes\" target=\"_blank\">Complete List of AppleScript Key Codes</a></li>\n<li><a href=\"https://www.cnblogs.com/ficow/p/5574882.html\" target=\"_blank\">Mac AppleScript 自动完成按键</a></li>\n<li><a href=\"https://www.jianshu.com/p/4addd9b455f2\" target=\"_blank\">Mac中的定时任务利器：launchctl</a></li>\n<li><a href=\"https://www.cnblogs.com/hanlingzhi/p/6505967.html\" target=\"_blank\">MAC本如何优雅的创建定时任务</a></li>\n<li><a href=\"https://www.52pojie.cn/thread-1023823-1-1.html\" target=\"_blank\">使用AppleScript进行定时提醒</a></li>\n<li><a href=\"https://www.cnblogs.com/wisir/p/10199759.html\" target=\"_blank\">python获取当前日期时间</a></li>\n</ul>\n<script>var signs=document.querySelectorAll(\"x-sign\"),randomIn=function(n,t){return Math.floor(Math.random()*(t-n+1)+n)},mixupInterval=function(n){var t=randomIn(2e3,4e3);n.style.setProperty(\"--interval\",t+\"ms\")};signs.forEach((function(n){mixupInterval(n),n.addEventListener(\"webkitAnimationIteration\",(function(){mixupInterval(n)}))}));</script>","prev":{"title":"Git 学习笔记","link":"2020/05/22/imooc_r_51"},"next":{"title":"开发环境与运行环境","link":"2020/03/30/imooc_115_3_new"},"plink":"https://vincenteliang.com/2020/05/13/ustb_checkIn/","toc":[{"id":"概述","title":"概述","index":"1","children":[{"id":"系统环境","title":"系统环境","index":"1.1"},{"id":"实现思路","title":"实现思路","index":"1.2"}]},{"id":"发送微信消息","title":"发送微信消息","index":"2","children":[{"id":"一些其他尝试","title":"一些其他尝试","index":"2.1"},{"id":"具体实现","title":"具体实现","index":"2.2"}]},{"id":"定时","title":"定时","index":"3"},{"id":"优化","title":"优化","index":"4"},{"id":"参考资料","title":"参考资料","index":"5"}],"reward":true,"copyright":{"author":"Vincente Liang","link":"<a href=\"https://vincenteliang.com/2020/05/13/ustb_checkIn/\" title=\"“平安报”提醒服务自动化折腾日记\">https://vincenteliang.com/2020/05/13/ustb_checkIn/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"May 14, 2020","updated":"July 1, 2024"},"reading_time":"1819 words in 12 min"}