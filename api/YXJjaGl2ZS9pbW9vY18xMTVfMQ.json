{"title":"JS基础知识","date":"2019-07-16T00:00:00.000Z","date_formatted":{"ll":"Jul 16, 2019","L":"07/16/2019","MM-DD":"07-16"},"updated":"2024-07-01T17:57:02.542Z","content":"<p><strong><a href=\"https://www.imooc.com/\" target=\"_blank\">慕课网</a>实战课程笔记 —— <a href=\"https://coding.imooc.com/class/115.html\" target=\"_blank\">前端JavaScript面试技巧</a></strong></p>\n<h2 id=\"一、变量类型和计算\">一、变量类型和计算<a title=\"#一、变量类型和计算\" href=\"#一、变量类型和计算\"></a></h2>\n<h3 id=\"0、面试题-1---1\">0、面试题 1 - 1<a title=\"#0、面试题-1---1\" href=\"#0、面试题-1---1\"></a></h3>\n<ol>\n<li><strong>JS 中使用 typeof 能得到那些类型</strong><br>\n详见知识点讲解</li>\n<li><strong>何时使用 === 何时使用 ==</strong></li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (obj.<span class=\"property\">a</span> == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// obj.a === null || obj.a === undefined 的简写</span></span><br><span class=\"line\">    <span class=\"comment\">// jquery源码中写法，其他一律用 ===</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><strong>JS 中有哪些内置函数</strong><br>\nObject, Array, Boolean, Number, String, Function, Date, RegExp, Error</li>\n<li><strong>JS 变量按照存储方式区分为哪些类型，并描述其特点</strong><br>\n值类型和引用类型</li>\n<li><strong>如何理解 JSON</strong><br>\n一个 JS 对象 / 数据格式</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(&#123;<span class=\"attr\">a</span>:<span class=\"number\">10</span>, <span class=\"attr\">b</span>:<span class=\"number\">20</span>&#125;)</span><br><span class=\"line\"><span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"string\">&#x27;&#123;&quot;a&quot;:10,&quot;b&quot;:20&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"1、变量类型:值类型-vs-引用类型\">1、变量类型:值类型 vs 引用类型<a title=\"#1、变量类型:值类型-vs-引用类型\" href=\"#1、变量类型:值类型-vs-引用类型\"></a></h3>\n<h4 id=\"值类型：数字、布尔值、字符串，占用内存较小\">值类型：数字、布尔值、字符串，占用内存较小<a title=\"#值类型：数字、布尔值、字符串，占用内存较小\" href=\"#值类型：数字、布尔值、字符串，占用内存较小\"></a></h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">100</span>     <span class=\"comment\">// a的内存地址被写入100</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a       <span class=\"comment\">// b的内存地址被写入100</span></span><br><span class=\"line\">a = <span class=\"number\">200</span>         <span class=\"comment\">// 更改a的值并不影响b</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(b)  <span class=\"comment\">// 100</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"引用类型：对象、数组、函数，占用内存较大\">引用类型：对象、数组、函数，占用内存较大<a title=\"#引用类型：对象、数组、函数，占用内存较大\" href=\"#引用类型：对象、数组、函数，占用内存较大\"></a></h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = &#123;<span class=\"attr\">age</span>:<span class=\"number\">20</span>&#125;    <span class=\"comment\">// 对象被单独存储，a中存放指向对象的指针</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a           <span class=\"comment\">// 将指针赋给b，a、b同时指向对象的内存地址</span></span><br><span class=\"line\">b.<span class=\"property\">age</span> = <span class=\"number\">21</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a.<span class=\"property\">age</span>)  <span class=\"comment\">// 21</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"typeof-运算符详解\">typeof 运算符详解<a title=\"#typeof-运算符详解\" href=\"#typeof-运算符详解\"></a></h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// TODO Symbol</span></span><br><span class=\"line\"><span class=\"comment\">// 值类型</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"literal\">undefined</span>    <span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"string\">&#x27;abc&#x27;</span>        <span class=\"comment\">// string</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"number\">123</span>          <span class=\"comment\">// number</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"literal\">true</span>         <span class=\"comment\">// boolean</span></span><br><span class=\"line\"><span class=\"comment\">// 引用类型</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> &#123;&#125;           <span class=\"comment\">// object</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> []           <span class=\"comment\">// object</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"literal\">null</span>         <span class=\"comment\">// object 注意</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"variable language_\">console</span>.<span class=\"property\">log</span>  <span class=\"comment\">// function</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2、变量计算\">2、变量计算<a title=\"#2、变量计算\" href=\"#2、变量计算\"></a></h3>\n<h4 id=\"强制类型转换\">强制类型转换<a title=\"#强制类型转换\" href=\"#强制类型转换\"></a></h4>\n<ul>\n<li>字符串拼接\n<ul>\n<li><code>var a = 100 + '10' // '10010'</code></li>\n</ul>\n</li>\n<li>== 运算符</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">100</span> == <span class=\"string\">&#x27;100&#x27;</span>        <span class=\"comment\">// true &#x27;100&#x27; == &#x27;100&#x27;</span></span><br><span class=\"line\"><span class=\"number\">0</span> == <span class=\"literal\">null</span>           <span class=\"comment\">// true false == false</span></span><br><span class=\"line\"><span class=\"literal\">null</span> == <span class=\"literal\">undefined</span>   <span class=\"comment\">// true false == false</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>if 语句: 布尔类型转换<br>\n: 0, NaN, ‘’, null, undefined 会被转换为 false</li>\n<li>逻辑运算符</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">10</span> &amp;&amp; <span class=\"number\">0</span>)        <span class=\"comment\">// 0</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;&#x27;</span> || <span class=\"string\">&#x27;abc&#x27;</span>)    <span class=\"comment\">// &#x27;abc&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(!<span class=\"variable language_\">window</span>.<span class=\"property\">abc</span>)    <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"二、原型和原型链\">二、原型和原型链<a title=\"#二、原型和原型链\" href=\"#二、原型和原型链\"></a></h2>\n<h3 id=\"0、面试题-1---2\">0、面试题 1 - 2<a title=\"#0、面试题-1---2\" href=\"#0、面试题-1---2\"></a></h3>\n<ol>\n<li><strong>如何准确判断一个变量是数组类型</strong></li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = []</span><br><span class=\"line\">arr <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Array</span>    <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>\n<p><strong>写一个原型链继承的例子</strong></p>\n<p>封装 DOM 查询</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Elem</span> (id) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">elem</span> = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(id)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Elem</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">html</span> = <span class=\"keyword\">function</span> (<span class=\"params\">val</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> elem = <span class=\"variable language_\">this</span>.<span class=\"property\">elem</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (val) &#123;</span><br><span class=\"line\">        elem.<span class=\"property\">innerHTML</span> = val</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>     <span class=\"comment\">// 链式操作</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> elem.<span class=\"property\">innerHTML</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Elem</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">on</span> = <span class=\"keyword\">function</span> (<span class=\"params\">type, fn</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> elem = <span class=\"variable language_\">this</span>.<span class=\"property\">elem</span></span><br><span class=\"line\">    elem.<span class=\"title function_\">addEventListener</span>(type, fn)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> div1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Elem</span>(<span class=\"string\">&#x27;div1&#x27;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(div1.<span class=\"title function_\">html</span>())</span><br><span class=\"line\">div1.<span class=\"title function_\">html</span>(<span class=\"string\">&#x27;&lt;p&gt;hello world&lt;/p&gt;&#x27;</span>)</span><br><span class=\"line\">div1.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;clicked&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 链式操作写法</span></span><br><span class=\"line\">div1.<span class=\"title function_\">html</span>(<span class=\"string\">&#x27;&lt;p&gt;hello world&lt;/p&gt;&#x27;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;clicked&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>\n<p><strong>描述 new 一个对象的过程</strong></p>\n<ul>\n<li>创建一个新对象</li>\n<li>this 指向这个新对象</li>\n<li>执行代码，对 this 进行赋值</li>\n<li>返回 this</li>\n</ul>\n</li>\n<li>\n<p><strong>zepto 源码中如何使用原型链</strong></p>\n<p>课程：zepto设计和源码分析</p>\n</li>\n</ol>\n<h3 id=\"1、构造函数\">1、构造函数<a title=\"#1、构造函数\" href=\"#1、构造函数\"></a></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Foo</span>(<span class=\"params\">name, age</span>) &#123;   <span class=\"comment\">// 构造函数首字母大写</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = age</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">class</span> = <span class=\"string\">&#x27;class-1&#x27;</span></span><br><span class=\"line\">    <span class=\"comment\">// return this  // 默认有这一行</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> f = <span class=\"keyword\">new</span> <span class=\"title class_\">Foo</span>(<span class=\"string\">&#x27;Vincente&#x27;</span>, <span class=\"number\">21</span>)</span><br><span class=\"line\"><span class=\"comment\">// var f1 = new Foo(&#x27;girlfriend&#x27;, 20)  // 创建多个对象</span></span><br></pre></td></tr></table></figure>\n<ol>\n<li>传参</li>\n<li>this 为空对象</li>\n<li>赋值</li>\n</ol>\n<h3 id=\"2、构造函数---扩展\">2、构造函数 - 扩展<a title=\"#2、构造函数---扩展\" href=\"#2、构造函数---扩展\"></a></h3>\n<ul>\n<li><code>var a = &#123;&#125;</code> 其实是 <code>var a = new Object()</code> 的语法糖           // 相当于构造函数是 Object()</li>\n<li><code>var a = []</code> 其实是 <code>var a = new Array()</code> 的语法糖            // 相当于构造函数是 Array()</li>\n<li><code>function Foo()&#123;...&#125;</code> 其实是 <code>var Foo = new Function(...)</code>   // 相当于构造函数是 Function(), 以上三行推荐使用前面的写法</li>\n<li>使用 instanceof 判断一个函数是否是一个变量的构造函数</li>\n</ul>\n<h3 id=\"3、原型规则和示例\">3、原型规则和示例<a title=\"#3、原型规则和示例\" href=\"#3、原型规则和示例\"></a></h3>\n<p>5条原型规则（<strong>原型规则</strong>是学习<strong>原型链</strong>的基础）</p>\n<ol>\n<li>所有的引用类型（数组、对象、函数），都具有对象特性，即可自由扩展性（除了“null”以外）</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;&#125;; obj.<span class=\"property\">a</span> = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = []; arr.<span class=\"property\">a</span> = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span> () &#123;&#125;</span><br><span class=\"line\">fn.<span class=\"property\">a</span> = <span class=\"number\">100</span>;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>所有的引用类型（数组、对象、函数），都有一个 <code>__proto__</code> 属性，属性值是一个普通的对象（<code>__proto__</code>称为隐式原型）</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj.<span class=\"property\">__proto__</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr.<span class=\"property\">__proto__</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(fn.<span class=\"property\">__proto__</span>);、</span><br><span class=\"line\">&lt;!-- <span class=\"variable constant_\">TODO</span> 实现以上代码查看内容 --&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>所有的函数，都有一个 <code>prototype</code> 属性，属性值也是一个普通的对象（<code>prototype</code>称为隐式原型）</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(fn.<span class=\"property\"><span class=\"keyword\">prototype</span></span>);</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>所有的引用类型（数组、对象、函数），<code>__proto__</code> 属性值指向它的构造函数的 <code>prototype</code> 、属性值</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(obj.<span class=\"property\">__proto__</span> === <span class=\"title class_\">Object</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>);</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>当试图得到一个对象的某个属性时，如果这个对象本身没有这个属性，那么会去它的 <code>__proto__</code> 中寻找</li>\n</ol>\n<h3 id=\"4、原型链\">4、原型链<a title=\"#4、原型链\" href=\"#4、原型链\"></a></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 构造函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Foo</span>(<span class=\"params\">name, age</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Foo</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">alertName</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 创建实例</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> f = <span class=\"keyword\">new</span> <span class=\"title class_\">Foo</span>(<span class=\"string\">&#x27;Vincente&#x27;</span>)</span><br><span class=\"line\">f.<span class=\"property\">printName</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 测试</span></span><br><span class=\"line\">f.<span class=\"title function_\">printName</span>()</span><br><span class=\"line\">f.<span class=\"title function_\">alertName</span>()</span><br><span class=\"line\"><span class=\"comment\">// 原型链</span></span><br><span class=\"line\">f.<span class=\"title function_\">toString</span>()    <span class=\"comment\">// 要去 f.__proto__.__proto__ 中查找，Object.prototype.__proto__ 为 null，避免死循环</span></span><br><span class=\"line\"><span class=\"comment\">// 遍历</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> item</span><br><span class=\"line\"><span class=\"keyword\">for</span> (item <span class=\"keyword\">in</span> f) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 高级浏览器已经在 for in 中屏蔽了来自原型的属性</span></span><br><span class=\"line\">    <span class=\"comment\">// 建议加上这个判断以保证程序的健壮性</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (f.<span class=\"title function_\">hasOwnProperty</span>(item)) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(item)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5、instanceof\">5、instanceof<a title=\"#5、instanceof\" href=\"#5、instanceof\"></a></h3>\n<h3 id=\"0、面试题-1---5\">0、面试题 1 - 5<a title=\"#0、面试题-1---5\" href=\"#0、面试题-1---5\"></a></h3>\n<ol>\n<li>获取 2017-06-10 格式的日期</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> formatDate &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!dt) &#123;</span><br><span class=\"line\">        dt = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> year = dt.<span class=\"title function_\">getFullYear</span>()</span><br><span class=\"line\">    <span class=\"keyword\">var</span> month = dt.<span class=\"title function_\">getMonth</span>() + <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = dt.<span class=\"title function_\">getDate</span>()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (month &lt; <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">        month = <span class=\"string\">&#x27;0&#x27;</span> + month</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (date &lt; <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">        date = <span class=\"string\">&#x27;0&#x27;</span> + date</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> year + <span class=\"string\">&#x27;-&#x27;</span> + month + <span class=\"string\">&#x27;-&#x27;</span> + date</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> dt = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()</span><br><span class=\"line\"><span class=\"keyword\">var</span> formatDate = <span class=\"title function_\">formatDate</span>(dt)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(formatDate)</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>获取随机数，要求是长度一致的字符串格式</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> random = <span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>()</span><br><span class=\"line\"><span class=\"keyword\">var</span> random = random + <span class=\"string\">&#x27;0000000000&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> random = random.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(random)</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>写一个能遍历对象的数组的通用 forEach 函数</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">forEach</span> (obj, fn) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> key</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (obj <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Array</span>) &#123;</span><br><span class=\"line\">        obj.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span> (<span class=\"params\">item, index</span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">fn</span>(index, item)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">fn</span>(key, obj[key])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"title function_\">forEach</span>(arr, <span class=\"keyword\">function</span> (<span class=\"params\">index,item</span>) &#123; <span class=\"comment\">// 为了和key，value保持一致更换了参数顺序</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(index, item)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;<span class=\"attr\">x</span>: <span class=\"number\">100</span>, <span class=\"attr\">y</span>: <span class=\"number\">200</span>&#125;</span><br><span class=\"line\"><span class=\"title function_\">forEach</span>(arr, <span class=\"keyword\">function</span> (<span class=\"params\">index,item</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(key, value)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"1、日期\">1、日期<a title=\"#1、日期\" href=\"#1、日期\"></a></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>()          <span class=\"comment\">// 获取当前时间毫秒数</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> dt = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()</span><br><span class=\"line\">dt.<span class=\"title function_\">getTime</span>()        <span class=\"comment\">// 获取 new 时的毫秒数</span></span><br><span class=\"line\">dt.<span class=\"title function_\">getFullYear</span>()    <span class=\"comment\">// 年</span></span><br><span class=\"line\">dt.<span class=\"title function_\">getMonth</span>()       <span class=\"comment\">// 月（0 - 11）</span></span><br><span class=\"line\">dt.<span class=\"title function_\">getDate</span>()        <span class=\"comment\">// 日（0 - 31）</span></span><br><span class=\"line\">dt.<span class=\"title function_\">getHours</span>()       <span class=\"comment\">// 小时（0 - 23）</span></span><br><span class=\"line\">dt.<span class=\"title function_\">getMinutes</span>()     <span class=\"comment\">// 分钟（0 - 59）</span></span><br><span class=\"line\">dt.<span class=\"title function_\">getSeconds</span>()     <span class=\"comment\">// 秒（0 - 59）</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2、math\">2、Math<a title=\"#2、math\" href=\"#2、math\"></a></h3>\n<p>Math.random 获取 0 - 1 之间的随机数, 长度不定</p>\n<h3 id=\"3、数组api\">3、数组API<a title=\"#3、数组api\" href=\"#3、数组api\"></a></h3>\n<ul>\n<li>forEach: 遍历所有元素</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">arr.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span> (<span class=\"params\">item, index</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(index, item)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//0 1 \\n 12 \\n 2 3</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>every: 判断所有元素是否都符合条件</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> result = arr.<span class=\"title function_\">every</span>(<span class=\"keyword\">function</span> (<span class=\"params\">item, index</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item &lt; <span class=\"number\">4</span> ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ture</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>some: 判断是否至少有一个元素符合条件</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> result = arr.<span class=\"title function_\">some</span>(<span class=\"keyword\">function</span> (<span class=\"params\">item, index</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item &lt; <span class=\"number\">2</span> ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ture</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>sort: 排序</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1 = arr.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a - b    <span class=\"comment\">// 从小到大排序</span></span><br><span class=\"line\">    <span class=\"comment\">// return b - a    // 从大到小排序</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr)    <span class=\"comment\">// [1, 2, 3, 4, 5]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr1)   <span class=\"comment\">// [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>map: 对元素重新组装，生成新数组</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1 = arr.<span class=\"title function_\">map</span>(<span class=\"keyword\">function</span> (<span class=\"params\">item, index</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&lt;b&gt;&#x27;</span> + item + <span class=\"string\">&#x27;&lt;/b&gt;&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr1)</span><br><span class=\"line\"><span class=\"comment\">// [&quot;&lt;b&gt;1&lt;/b&gt;&quot;, &quot;&lt;b&gt;2&lt;/b&gt;&quot;, &quot;&lt;b&gt;3&lt;/b&gt;&quot;]</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>filter: 过滤符合条件对元素</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1 = arr.<span class=\"title function_\">filter</span>(<span class=\"keyword\">function</span> (<span class=\"params\">item, index</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item &gt;= <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr1)</span><br><span class=\"line\"><span class=\"comment\">// [2, 3]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4、对象api\">4、对象API<a title=\"#4、对象api\" href=\"#4、对象api\"></a></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">    <span class=\"attr\">x</span>: <span class=\"number\">100</span>,</span><br><span class=\"line\">    <span class=\"attr\">y</span>: <span class=\"number\">200</span>,</span><br><span class=\"line\">    <span class=\"attr\">z</span>: <span class=\"number\">300</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> key</span><br><span class=\"line\"><span class=\"keyword\">for</span> (key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(obj.<span class=\"title function_\">hasOwnProperty</span>(key)) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(key, obj[key])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// x: 100 \\n y: 200 \\n z: 300</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"三、作用域和闭包\">三、作用域和闭包<a title=\"#三、作用域和闭包\" href=\"#三、作用域和闭包\"></a></h2>\n<h3 id=\"0、面试题-1---3\">0、面试题 1 - 3<a title=\"#0、面试题-1---3\" href=\"#0、面试题-1---3\"></a></h3>\n<ol>\n<li>说一下对变量提升的理解\n<ul>\n<li>变量定义</li>\n<li>函数声明（注意和函数表达式的区别）</li>\n</ul>\n</li>\n<li>说明 this 几种不同的使用场景\n<ul>\n<li>作为构造函数执行</li>\n<li>作为对象属性执行</li>\n<li>作为普通函数执行</li>\n<li>call apply bind</li>\n</ul>\n</li>\n<li>创建 10 个 <code>&lt;a&gt;</code> 标签，点击的时候弹出来对应的序号</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> i</span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">    (<span class=\"keyword\">function</span> (<span class=\"params\">i</span>) &#123;     <span class=\"comment\">// 嵌套一层自执行函数利用作用域找对应的 i 的值，否则全都是 10</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> a = <span class=\"variable language_\">document</span>.<span class=\"title function_\">creatElement</span>(<span class=\"string\">&#x27;a&#x27;</span>)</span><br><span class=\"line\">        a.<span class=\"property\">innerHTML</span> = i + <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span></span><br><span class=\"line\">        a.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">            e.<span class=\"title function_\">preventDefault</span>()</span><br><span class=\"line\">            <span class=\"title function_\">alert</span>(i)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">appendChild</span>(a)</span><br><span class=\"line\">    &#125;)(i)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 自执行函数不用调用，定义完成立即执行</span></span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>如何理解作作用域\n<ul>\n<li>自由变量</li>\n<li>作用域链，即自由变量的查找</li>\n<li>闭包的两个场景</li>\n</ul>\n</li>\n<li>实际开发中闭包的应用</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 闭包实际应用中主要用域封装变量，收敛权限</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isFirstLoad</span> () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> _list = []</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\">id</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_list.<span class=\"title function_\">indexOf</span>(id) &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            _list.<span class=\"title function_\">push</span>(id)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> firstLoad = <span class=\"title function_\">isFirstLoad</span>()</span><br><span class=\"line\"><span class=\"title function_\">firstLoad</span>(<span class=\"number\">10</span>)   <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"title function_\">firstLoad</span>(<span class=\"number\">10</span>)   <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"title function_\">firstLoad</span>(<span class=\"number\">20</span>)   <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"title function_\">firstLoad</span>(<span class=\"number\">20</span>)   <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"1、执行上下文\">1、执行上下文<a title=\"#1、执行上下文\" href=\"#1、执行上下文\"></a></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 一个 script 标签是一个全局上下文，会将变量定义和函数声明提前拿出执行</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a)      <span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">100</span>         <span class=\"comment\">// 变量提升，提前定义，未赋值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">fn</span>(<span class=\"string\">&#x27;zhangsan&#x27;</span>)      <span class=\"comment\">// &#x27;zhangsan&#x27; 20</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span> (name) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 函数上下文，提前把变量定义、函数声明、this、arguments语句执行</span></span><br><span class=\"line\">    age = <span class=\"number\">20</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name, age)</span><br><span class=\"line\">    <span class=\"keyword\">var</span> age</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>范围：一段 <code>&lt;script&gt;</code> 或者一个函数</li>\n<li>全局：变量定义、函数声明</li>\n<li>函数：变量定义、函数声明、this、arguments</li>\n</ul>\n<p>PS：注意“函数声明”和“函数表达式”的区别</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 函数声明</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span> () &#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">// 函数表达式</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fn = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2、this\">2、this<a title=\"#2、this\" href=\"#2、this\"></a></h4>\n<p>this 要在执行时才能确认值，定义时无法确认</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;A&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">fn</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">a.<span class=\"title function_\">fn</span>()                  <span class=\"comment\">// this === a</span></span><br><span class=\"line\">a.<span class=\"property\">fn</span>.<span class=\"title function_\">call</span>(&#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;B&#x27;</span>&#125;)  <span class=\"comment\">// this === &#123;name: &#x27;B&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fn1 = a.<span class=\"property\">fn</span></span><br><span class=\"line\"><span class=\"title function_\">fn1</span>()                   <span class=\"comment\">// this === window</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>作为构造函数执行</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Foo</span> (name) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> f = <span class=\"keyword\">new</span> <span class=\"title class_\">Foo</span>(<span class=\"string\">&#x27;Vincente&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>作为对象属性执行</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;A&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">printName</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">obj.<span class=\"title function_\">printName</span>()</span><br></pre></td></tr></table></figure>\n<ul>\n<li>作为普通函数执行</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span> () &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">fn</span>()    <span class=\"comment\">// window</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>call apply bind</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span> (name) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(name)</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">fn</span>(<span class=\"string\">&#x27;Vincente&#x27;</span>)      <span class=\"comment\">// window</span></span><br><span class=\"line\">fn.<span class=\"title function_\">call</span>(&#123;<span class=\"attr\">x</span>: <span class=\"number\">100</span>&#125;, <span class=\"string\">&#x27;Vincente&#x27;</span>)   <span class=\"comment\">// &#123;x: 100&#125;</span></span><br><span class=\"line\">fn.<span class=\"title function_\">apply</span>(&#123;<span class=\"attr\">x</span>: <span class=\"number\">100</span>&#125;, [<span class=\"string\">&#x27;Vincente&#x27;</span>])   <span class=\"comment\">// &#123;x: 100&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fn1 = <span class=\"keyword\">function</span> (<span class=\"params\">name</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(name)</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>)</span><br><span class=\"line\">&#125;.<span class=\"title function_\">bind</span>(&#123;<span class=\"attr\">x</span>: <span class=\"number\">100</span>&#125;)</span><br><span class=\"line\"><span class=\"title function_\">fn1</span>(<span class=\"string\">&#x27;Vincente&#x27;</span>)     <span class=\"comment\">// &#123;x: 100&#125;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"3、作用域\">3、作用域<a title=\"#3、作用域\" href=\"#3、作用域\"></a></h4>\n<ul>\n<li>无块级作用域（ES6以前语法）</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ES5 语法</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name = <span class=\"string\">&#x27;Vincente&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name)   <span class=\"comment\">// &#x27;Vincente&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i)      <span class=\"comment\">// 10</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ES6 语法</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;Vincente&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name)   <span class=\"comment\">// 无返回</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(i)      <span class=\"comment\">// 报错 i is not defined</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>只有函数作用域和全局作用域</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span> () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">200</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;fn&#x27;</span>, a)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;global&#x27;</span>, a)</span><br><span class=\"line\"><span class=\"title function_\">fn</span>()</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、作用域链\">4、作用域链<a title=\"#4、作用域链\" href=\"#4、作用域链\"></a></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">F1</span> () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> b = <span class=\"number\">200</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">F2</span> () &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> c = <span class=\"number\">300</span></span><br><span class=\"line\">        <span class=\"comment\">// a,b 未在函数中定义，称为 自由变量，去父级作用域查找（函数定义的区域为父级作用域）</span></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a)  <span class=\"comment\">// 100</span></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(b)  <span class=\"comment\">// 200</span></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(c)  <span class=\"comment\">// 300</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5、闭包\">5、闭包<a title=\"#5、闭包\" href=\"#5、闭包\"></a></h3>\n<p>闭包的使用场景</p>\n<ul>\n<li>函数作为返回值</li>\n<li>函数作为参数传递</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 作为返回值</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">F1</span> () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">100</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a)      <span class=\"comment\">// 自由变量，去定义时的父作用域寻找</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> f1 = <span class=\"title function_\">F1</span>()   <span class=\"comment\">// f1 得到一个函数</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">200</span></span><br><span class=\"line\"><span class=\"title function_\">f1</span>()        <span class=\"comment\">// 100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 作为参数传递</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> f2 = <span class=\"title function_\">F1</span>()</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">F2</span> (fn) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">300</span></span><br><span class=\"line\">    <span class=\"title function_\">fn</span>()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">F2</span>(f1)      <span class=\"comment\">// 100</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"四、异步和单线程\">四、异步和单线程<a title=\"#四、异步和单线程\" href=\"#四、异步和单线程\"></a></h2>\n<h3 id=\"0、面试题-1---4\">0、面试题 1 - 4<a title=\"#0、面试题-1---4\" href=\"#0、面试题-1---4\"></a></h3>\n<ol>\n<li>同步和异步的区别是什么？分别举一个同步和异步的例子\n<ul>\n<li>同步会阻塞代码执行，而异步不会</li>\n<li>alert 是同步，setTimeout 是异步</li>\n</ul>\n</li>\n<li>一个关于 setTimeout 的笔试题</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">2</span>)</span><br><span class=\"line\">&#125;, <span class=\"number\">0</span>)   <span class=\"comment\">// 0 和不写的效果是一样的</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">4</span>)</span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"comment\">// 1352，过一秒打印4</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>前端使用异步的场景有哪些\n<ul>\n<li>定时任务: setTimeout, setInverval</li>\n<li>网络请求: ajax 请求, 动态 <code>&lt;img&gt;</code> 加载</li>\n<li>事件绑定</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"1、什么是异步（对比同步）\">1、什么是异步（对比同步）<a title=\"#1、什么是异步（对比同步）\" href=\"#1、什么是异步（对比同步）\"></a></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 异步：打印出100，300，过一秒打印200</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">100</span>)</span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">200</span>)</span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">300</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 同步</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">100</span>)</span><br><span class=\"line\"><span class=\"title function_\">alert</span>(<span class=\"number\">200</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">300</span>)</span><br></pre></td></tr></table></figure>\n<p>何时需要异步</p>\n<ul>\n<li>可能发生等待的情况</li>\n<li>等待过程中不可能像alert一样阻塞程序运行</li>\n<li>因此，所有的“等待情况”都需要异步</li>\n</ul>\n<h3 id=\"2、前端使用异步的场景\">2、前端使用异步的场景<a title=\"#2、前端使用异步的场景\" href=\"#2、前端使用异步的场景\"></a></h3>\n<ul>\n<li>定时任务: setTimeout, setInverval</li>\n<li>网络请求: ajax 请求, 动态 <code>&lt;img&gt;</code> 加载</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ajax 请求</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;start&#x27;</span>)</span><br><span class=\"line\">$.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;./data.json&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;end&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// img 加载</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;start&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;img&#x27;</span>)</span><br><span class=\"line\">img.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;loaded&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">img.<span class=\"property\">src</span> = <span class=\"string\">&#x27;/xxx.png&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;end&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>事件绑定</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ajax 请求</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;start&#x27;</span>)</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn1&#x27;</span>).<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;clicked&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;end&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、异步和单线程\">3、异步和单线程<a title=\"#3、异步和单线程\" href=\"#3、异步和单线程\"></a></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 异步：打印出100，300，过一秒打印200</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">100</span>)</span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">200</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">300</span>)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>执行第一行，打印 100</li>\n<li>执行 setTimeout 后，传入 setTimeout 的函数会被暂存起来，不会立即执行（单线程的特点，不能同时干两件事）</li>\n<li>执行最后一行，打印300</li>\n<li>待所有程序执行完，处于空闲状态时，会立即查看有没有暂存起来的语句要执行</li>\n<li>发现暂存起来的 setTimeout 中的函数无需等待时间，就立即过来执行</li>\n</ul>\n<h2 id=\"五、其他\">五、其他<a title=\"#五、其他\" href=\"#五、其他\"></a></h2>\n<h3 id=\"0、面试题-1---5-1\">0、面试题 1 - 5<a title=\"#0、面试题-1---5-1\" href=\"#0、面试题-1---5-1\"></a></h3>\n<ol>\n<li>获取 2017-06-10 格式的日期</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> formatDate &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!dt) &#123;</span><br><span class=\"line\">        dt = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> year = dt.<span class=\"title function_\">getFullYear</span>()</span><br><span class=\"line\">    <span class=\"keyword\">var</span> month = dt.<span class=\"title function_\">getMonth</span>() + <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = dt.<span class=\"title function_\">getDate</span>()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (month &lt; <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">        month = <span class=\"string\">&#x27;0&#x27;</span> + month</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (date &lt; <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">        date = <span class=\"string\">&#x27;0&#x27;</span> + date</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> year + <span class=\"string\">&#x27;-&#x27;</span> + month + <span class=\"string\">&#x27;-&#x27;</span> + date</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> dt = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()</span><br><span class=\"line\"><span class=\"keyword\">var</span> formatDate = <span class=\"title function_\">formatDate</span>(dt)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(formatDate)</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>获取随机数，要求是长度一致的字符串格式</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> random = <span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>()</span><br><span class=\"line\"><span class=\"keyword\">var</span> random = random + <span class=\"string\">&#x27;0000000000&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> random = random.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(random)</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>写一个能遍历对象的数组的通用 forEach 函数</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">forEach</span> (obj, fn) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> key</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (obj <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Array</span>) &#123;</span><br><span class=\"line\">        obj.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span> (<span class=\"params\">item, index</span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">fn</span>(index, item)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">fn</span>(key, obj[key])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"title function_\">forEach</span>(arr, <span class=\"keyword\">function</span> (<span class=\"params\">index,item</span>) &#123; <span class=\"comment\">// 为了和key，value保持一致更换了参数顺序</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(index, item)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;<span class=\"attr\">x</span>: <span class=\"number\">100</span>, <span class=\"attr\">y</span>: <span class=\"number\">200</span>&#125;</span><br><span class=\"line\"><span class=\"title function_\">forEach</span>(arr, <span class=\"keyword\">function</span> (<span class=\"params\">index,item</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(key, value)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"1、日期-1\">1、日期<a title=\"#1、日期-1\" href=\"#1、日期-1\"></a></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>()          <span class=\"comment\">// 获取当前时间毫秒数</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> dt = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()</span><br><span class=\"line\">dt.<span class=\"title function_\">getTime</span>()        <span class=\"comment\">// 获取 new 时的毫秒数</span></span><br><span class=\"line\">dt.<span class=\"title function_\">getFullYear</span>()    <span class=\"comment\">// 年</span></span><br><span class=\"line\">dt.<span class=\"title function_\">getMonth</span>()       <span class=\"comment\">// 月（0 - 11）</span></span><br><span class=\"line\">dt.<span class=\"title function_\">getDate</span>()        <span class=\"comment\">// 日（0 - 31）</span></span><br><span class=\"line\">dt.<span class=\"title function_\">getHours</span>()       <span class=\"comment\">// 小时（0 - 23）</span></span><br><span class=\"line\">dt.<span class=\"title function_\">getMinutes</span>()     <span class=\"comment\">// 分钟（0 - 59）</span></span><br><span class=\"line\">dt.<span class=\"title function_\">getSeconds</span>()     <span class=\"comment\">// 秒（0 - 59）</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2、math-1\">2、Math<a title=\"#2、math-1\" href=\"#2、math-1\"></a></h3>\n<p>Math.random 获取 0 - 1 之间的随机数, 长度不定</p>\n<h3 id=\"3、数组api-1\">3、数组API<a title=\"#3、数组api-1\" href=\"#3、数组api-1\"></a></h3>\n<ul>\n<li>forEach: 遍历所有元素</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">arr.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span> (<span class=\"params\">item, index</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(index, item)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//0 1 \\n 12 \\n 2 3</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>every: 判断所有元素是否都符合条件</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> result = arr.<span class=\"title function_\">every</span>(<span class=\"keyword\">function</span> (<span class=\"params\">item, index</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item &lt; <span class=\"number\">4</span> ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ture</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>some: 判断是否至少有一个元素符合条件</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> result = arr.<span class=\"title function_\">some</span>(<span class=\"keyword\">function</span> (<span class=\"params\">item, index</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item &lt; <span class=\"number\">2</span> ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ture</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>sort: 排序</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1 = arr.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a - b    <span class=\"comment\">// 从小到大排序</span></span><br><span class=\"line\">    <span class=\"comment\">// return b - a    // 从大到小排序</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr)    <span class=\"comment\">// [1, 2, 3, 4, 5]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr1)   <span class=\"comment\">// [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>map: 对元素重新组装，生成新数组</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1 = arr.<span class=\"title function_\">map</span>(<span class=\"keyword\">function</span> (<span class=\"params\">item, index</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&lt;b&gt;&#x27;</span> + item + <span class=\"string\">&#x27;&lt;/b&gt;&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr1)</span><br><span class=\"line\"><span class=\"comment\">// [&quot;&lt;b&gt;1&lt;/b&gt;&quot;, &quot;&lt;b&gt;2&lt;/b&gt;&quot;, &quot;&lt;b&gt;3&lt;/b&gt;&quot;]</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>filter: 过滤符合条件对元素</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1 = arr.<span class=\"title function_\">filter</span>(<span class=\"keyword\">function</span> (<span class=\"params\">item, index</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item &gt;= <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr1)</span><br><span class=\"line\"><span class=\"comment\">// [2, 3]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4、对象api-1\">4、对象API<a title=\"#4、对象api-1\" href=\"#4、对象api-1\"></a></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">    <span class=\"attr\">x</span>: <span class=\"number\">100</span>,</span><br><span class=\"line\">    <span class=\"attr\">y</span>: <span class=\"number\">200</span>,</span><br><span class=\"line\">    <span class=\"attr\">z</span>: <span class=\"number\">300</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> key</span><br><span class=\"line\"><span class=\"keyword\">for</span> (key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(obj.<span class=\"title function_\">hasOwnProperty</span>(key)) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(key, obj[key])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// x: 100 \\n y: 200 \\n z: 300</span></span><br></pre></td></tr></table></figure>\n","link":"archive/imooc_115_1","comments":true,"plink":"https://vincenteliang.com/archive/imooc_115_1/","toc":[{"id":"一、变量类型和计算","title":"一、变量类型和计算","index":"1","children":[{"id":"0、面试题-1---1","title":"0、面试题 1 - 1","index":"1.1"},{"id":"1、变量类型:值类型-vs-引用类型","title":"1、变量类型:值类型 vs 引用类型","index":"1.2"},{"id":"2、变量计算","title":"2、变量计算","index":"1.3"}]},{"id":"二、原型和原型链","title":"二、原型和原型链","index":"2","children":[{"id":"0、面试题-1---2","title":"0、面试题 1 - 2","index":"2.1"},{"id":"1、构造函数","title":"1、构造函数","index":"2.2"},{"id":"2、构造函数---扩展","title":"2、构造函数 - 扩展","index":"2.3"},{"id":"3、原型规则和示例","title":"3、原型规则和示例","index":"2.4"},{"id":"4、原型链","title":"4、原型链","index":"2.5"},{"id":"5、instanceof","title":"5、instanceof","index":"2.6"},{"id":"0、面试题-1---5","title":"0、面试题 1 - 5","index":"2.7"},{"id":"1、日期","title":"1、日期","index":"2.8"},{"id":"2、math","title":"2、Math","index":"2.9"},{"id":"3、数组api","title":"3、数组API","index":"2.10"},{"id":"4、对象api","title":"4、对象API","index":"2.11"}]},{"id":"三、作用域和闭包","title":"三、作用域和闭包","index":"3","children":[{"id":"0、面试题-1---3","title":"0、面试题 1 - 3","index":"3.1"},{"id":"1、执行上下文","title":"1、执行上下文","index":"3.2"},{"id":"4、作用域链","title":"4、作用域链","index":"3.3"},{"id":"5、闭包","title":"5、闭包","index":"3.4"}]},{"id":"四、异步和单线程","title":"四、异步和单线程","index":"4","children":[{"id":"0、面试题-1---4","title":"0、面试题 1 - 4","index":"4.1"},{"id":"1、什么是异步（对比同步）","title":"1、什么是异步（对比同步）","index":"4.2"},{"id":"2、前端使用异步的场景","title":"2、前端使用异步的场景","index":"4.3"},{"id":"3、异步和单线程","title":"3、异步和单线程","index":"4.4"}]},{"id":"五、其他","title":"五、其他","index":"5","children":[{"id":"0、面试题-1---5-1","title":"0、面试题 1 - 5","index":"5.1"},{"id":"1、日期-1","title":"1、日期","index":"5.2"},{"id":"2、math-1","title":"2、Math","index":"5.3"},{"id":"3、数组api-1","title":"3、数组API","index":"5.4"},{"id":"4、对象api-1","title":"4、对象API","index":"5.5"}]}],"reward":true,"copyright":{"author":"Vincente Liang","link":"<a href=\"https://vincenteliang.com/archive/imooc_115_1/\" title=\"JS基础知识\">https://vincenteliang.com/archive/imooc_115_1/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"July 16, 2019","updated":"July 1, 2024"}}