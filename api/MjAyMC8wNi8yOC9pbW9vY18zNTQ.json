{"title":"Node.js仿知乎服务端-深入理解RESTful API","date":"2020-06-29T00:00:00.000Z","date_formatted":{"ll":"Jun 29, 2020","L":"06/29/2020","MM-DD":"06-29"},"thumbnail":"https://blog-1251959181.cos.accelerate.myqcloud.com/cover/restful.jpg","link":"2020/06/28/imooc_354","comments":true,"tags":["Node.js","Note"],"categories":["Coding","imooc"],"updated":"2024-07-01T17:57:02.538Z","content":"<p><strong><a href=\"https://www.imooc.com/\" target=\"_blank\">慕课网</a>实战课程笔记 —— <a href=\"https://coding.imooc.com/class/354.html\" target=\"_blank\">Node.js仿知乎服务端-深入理解RESTful API</a></strong></p>\n<h2 id=\"第1章-学习之前要告诉你的\">第1章 学习之前要告诉你的<a title=\"#第1章-学习之前要告诉你的\" href=\"#第1章-学习之前要告诉你的\"></a></h2>\n<blockquote>\n<p>这一章只有一节，也只有一个目的，就是告诉你这门课程讲了什么，最终做出的效果，以及学习这门课程你需要先掌握哪些技术。</p>\n</blockquote>\n<h3 id=\"1-1-关于这门课程你想知道的都在这一节里面了\">1-1 关于这门课程你想知道的都在这一节里面了<a title=\"#1-1-关于这门课程你想知道的都在这一节里面了\" href=\"#1-1-关于这门课程你想知道的都在这一节里面了\"></a></h3>\n<ul>\n<li>课程目标\n<ul>\n<li>理解RESTful API的6个限制和若干最佳实践</li>\n<li>掌握Koa2、Postman、 MongoDB、JWT等技术</li>\n<li>运用上述技术搭建仿知乎RESTful API</li>\n<li>掌握阿里云线上部署方法</li>\n</ul>\n</li>\n<li>功能技术分析\n<ul>\n<li>RESTful API理论</li>\n<li>Koa2</li>\n<li>Postman</li>\n<li>MongoDB</li>\n<li>JWT</li>\n<li>阿里云部署</li>\n</ul>\n</li>\n<li>前置知识\n<ul>\n<li>Node.js 基础</li>\n<li>ES6、ES7 基础</li>\n</ul>\n</li>\n<li>重难点分析\n<ul>\n<li>RESTful API理论</li>\n<li>JWT认证原理</li>\n<li>复杂的数据库关系（一对多、多对多等）</li>\n</ul>\n</li>\n<li>课程建议\n<ul>\n<li>理论部分做到自问自答</li>\n<li>实战部分做到举一反三</li>\n<li>不止于本课程，学习更多技术</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第2章-跟着-github-认识-restful-api\">第2章 跟着 GitHub 认识 RESTful API<a title=\"#第2章-跟着-github-认识-restful-api\" href=\"#第2章-跟着-github-认识-restful-api\"></a></h2>\n<blockquote>\n<p>本章以全球最大的同性社交社区 GitHub 的 RESTful API 十几个最佳实践为例，让你掌握最完整的 RESTful API 理论</p>\n</blockquote>\n<h3 id=\"2-1-rest-是什么以及它的-6-个限制\">2-1 REST 是什么以及它的 6 个限制<a title=\"#2-1-rest-是什么以及它的-6-个限制\" href=\"#2-1-rest-是什么以及它的-6-个限制\"></a></h3>\n<h4 id=\"rest是什么：万维网软件结构风格\">REST是什么：万维网软件结构风格<a title=\"#rest是什么：万维网软件结构风格\" href=\"#rest是什么：万维网软件结构风格\"></a></h4>\n<p>REST：<strong>Re</strong>presentational <strong>S</strong>tate <strong>T</strong>ransfer</p>\n<ul>\n<li>Representational: 数据的表现形式(JSON、XM…)</li>\n<li>State: 当前状态或者数据</li>\n<li>Transfer: 数据传输</li>\n</ul>\n<h4 id=\"restful的6个限制\">RESTful的6个限制<a title=\"#restful的6个限制\" href=\"#restful的6个限制\"></a></h4>\n<ol>\n<li>客户一服务器( Client一Server )\n<ul>\n<li>关注点分离</li>\n<li>服务端专注数据存储,提升了简单性</li>\n<li>前端专注用户界面,提升了可移植性</li>\n</ul>\n</li>\n<li>无状态( Stateless )\n<ul>\n<li>所有用户会话信息都保存在客户端</li>\n<li>每次请求必须包括所有信息,不能依赖上下文信息</li>\n<li>服务端不用保存会话信息,提升了简单性、可靠性、可见性</li>\n</ul>\n</li>\n<li>缓存( Cache )\n<ul>\n<li>所有服务端响应都要被标为可缓存或不可缓存</li>\n<li>减少前后端交互,提升了性能</li>\n</ul>\n</li>\n<li>统一接口( Uniform Interface )\n<ul>\n<li>接口设计尽可能统一通用,提升了简单性、可见性</li>\n<li>接口与实现解耦,使前后端可以独立开发迭代</li>\n</ul>\n</li>\n<li>分层系统( Layered System )\n<ul>\n<li>每层只知道相邻的一层,后面隐藏的就不知道了</li>\n<li>客户端不知道是和代理还是真实服务器通信</li>\n<li>其他层:安全层、负载均衡、缓存层等</li>\n</ul>\n</li>\n<li>按需代码( Code一On一Demand可选 )\n<ul>\n<li>客户端可以下载运行服务端传来的代码(比如JS)</li>\n<li>通过减少一些功能,简化了客户端</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"2-2-统一接口的限制\">2-2 统一接口的限制<a title=\"#2-2-统一接口的限制\" href=\"#2-2-统一接口的限制\"></a></h3>\n<ul>\n<li>资源的标识\n<ul>\n<li>资源是任何可以命名的事物,比如用户、评论等</li>\n<li>每个资源可以通过URI被唯一地标识\n<ul>\n<li><a href=\"https://api.github.com/users\" target=\"_blank\">https://api.github.com/users</a></li>\n<li><a href=\"https://api.github.com/users/lewis617\" target=\"_blank\">https://api.github.com/users/lewis617</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>通过表述来操作资源\n<ul>\n<li>表述就是Representation，比如JSON、XML等</li>\n<li>客户端不能直接操作(比如SQL)服务端资源</li>\n<li>客户端应该通过表述(比如JSON)来操作资源</li>\n</ul>\n</li>\n<li>自描述消息\n<ul>\n<li>每个消息（请求或响应）必须提供足够的信息让接受者理解</li>\n<li>媒体类型（application/json、application/xml）</li>\n<li>HTTP方法：GET（查）、POST（增）、DELETE（删）</li>\n<li>是否缓存： Cache-Control</li>\n</ul>\n</li>\n<li>超媒体作为应用状态引擎\n<ul>\n<li>超媒体：带文字的链接</li>\n<li>应用状态：一个网页</li>\n<li>引擎：驱动、跳转</li>\n<li>合起来：点击链接跳转到另一个网页</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-3-restful-api-简介\">2-3 RESTful API 简介<a title=\"#2-3-restful-api-简介\" href=\"#2-3-restful-api-简介\"></a></h3>\n<h4 id=\"restful-api具体什么样子？\">RESTful API具体什么样子？<a title=\"#restful-api具体什么样子？\" href=\"#restful-api具体什么样子？\"></a></h4>\n<ul>\n<li>基本的URI ，如https：<a href=\"//api.github.com/users\">//api.github.com/users</a></li>\n<li>标准HTTP方法，如GET， POST， PUT， PATCH， DELETE</li>\n<li>传输的数据媒体类型，如JSON， XML</li>\n</ul>\n<h4 id=\"现实举例\">现实举例<a title=\"#现实举例\" href=\"#现实举例\"></a></h4>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"text-align:center\">Methed</th>\n<th style=\"text-align:center\">URI</th>\n<th style=\"text-align:center\">Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">GET</td>\n<td style=\"text-align:center\">/users</td>\n<td style=\"text-align:center\">获取user列表</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">GET</td>\n<td style=\"text-align:center\">/users/1</td>\n<td style=\"text-align:center\">查看user1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">POST</td>\n<td style=\"text-align:center\">/users</td>\n<td style=\"text-align:center\">新建一个user</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PUT</td>\n<td style=\"text-align:center\">/users/1</td>\n<td style=\"text-align:center\">更新 user 1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DELETE</td>\n<td style=\"text-align:center\">/users/1</td>\n<td style=\"text-align:center\">删除 user 1</td>\n</tr>\n</tbody>\n</table></div></div><h3 id=\"2-4-restful-api-设计最佳实践\">2-4 RESTful API 设计最佳实践<a title=\"#2-4-restful-api-设计最佳实践\" href=\"#2-4-restful-api-设计最佳实践\"></a></h3>\n<ul>\n<li>请求设计规范\n<ul>\n<li>URI使用名词，尽量用复数，如/users</li>\n<li>URI使用嵌套表示关联关系，如/users/12/repos/5</li>\n<li>使用正确的HTTP方法，如GET/POST/PUT/DELETE</li>\n<li>不符合CRUD的情况：POST/action/子资源</li>\n</ul>\n</li>\n<li>相应设计规范\n<ul>\n<li>查询</li>\n<li>分页</li>\n<li>字段过滤</li>\n<li>状态码</li>\n<li>错误处理</li>\n</ul>\n</li>\n<li>安全\n<ul>\n<li>HTTPS</li>\n<li>鉴权</li>\n<li>限流</li>\n</ul>\n</li>\n<li>开发者友好\n<ul>\n<li>文档</li>\n<li>超媒体</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"第3章-用-koa-说-hello-world\">第3章 用 Koa 说 Hello World<a title=\"#第3章-用-koa-说-hello-world\" href=\"#第3章-用-koa-说-hello-world\"></a></h2>\n<blockquote>\n<p>本章将带你了解什么是 Koa 框架，搭建 Koa 框架的开发环境，并且编写第一个 Koa 框架的程序。不仅如此，重点是还要带你理解什么是 Koa 中间件以及经典的洋葱模型。</p>\n</blockquote>\n<h3 id=\"3-1-koa-简介\">3-1 Koa 简介<a title=\"#3-1-koa-简介\" href=\"#3-1-koa-简介\"></a></h3>\n<h4 id=\"一句话简介\">一句话简介<a title=\"#一句话简介\" href=\"#一句话简介\"></a></h4>\n<blockquote>\n<p>基于Node.js的下一代web开发<strong>框架</strong></p>\n</blockquote>\n<ul>\n<li>基于Node.js： Node.js模块</li>\n<li>下一代：蚕食第一代Web框架Express的市场</li>\n<li>Web框架：不是命令行工具、不是算法</li>\n</ul>\n<h4 id=\"官网简介\">官网简介<a title=\"#官网简介\" href=\"#官网简介\"></a></h4>\n<blockquote>\n<p>Koa是一个新的web框架，由Express幕后的原班人马打造，致力于成为web应用和API开发领域中的一个更小、更富有表现力、更健壮的基石。通过利用async函数， Koa帮你丢弃回调函数，并有力地增强错误处理。Koa并没有捆绑任何中间件，而是提供了一套优雅的方法，帮助您快速而愉快地编写服务端应用程序。</p>\n</blockquote>\n<ul>\n<li>由Express幕后的原班人马打造</li>\n<li>Web应用和API开发领域</li>\n<li>更小、更富有表现力、更健壮</li>\n<li>利用async函数，丢弃回调函数</li>\n<li>增强错误处理：try catch</li>\n<li>没有捆绑任何中间件</li>\n<li>快速而愉快地编写程序</li>\n</ul>\n<h3 id=\"3-2-安装搭建第一个-koa-程序\">3-2 安装搭建第一个 Koa 程序<a title=\"#3-2-安装搭建第一个-koa-程序\" href=\"#3-2-安装搭建第一个-koa-程序\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>初始化项目</li>\n<li>安装Koa</li>\n<li>编写Hello World</li>\n<li>学习自动重启</li>\n</ul>\n</blockquote>\n<h4 id=\"初始化项目\">初始化项目<a title=\"#初始化项目\" href=\"#初始化项目\"></a></h4>\n<p>在合适的位置新建项目文件夹</p>\n<p>在项目目录下执行<code>npm init</code></p>\n<h4 id=\"安装koa\">安装Koa<a title=\"#安装koa\" href=\"#安装koa\"></a></h4>\n<p><code>npm i koa --save</code></p>\n<p>新建JS文件，比如<code>index.js</code></p>\n<h4 id=\"编写hello-world\">编写Hello World<a title=\"#编写hello-world\" href=\"#编写hello-world\"></a></h4>\n<figure class=\"highlight js\"><figcaption><span>index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Koa</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Koa</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = <span class=\"string\">&#x27;Hello World&#x27;</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">3000</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"自动重启\">自动重启<a title=\"#自动重启\" href=\"#自动重启\"></a></h4>\n<p><code>npm i nodemon --save-dev</code></p>\n<p>由于是本地安装所以并不能在项目文件夹下直接执行<code>nodemon index.js</code>，我们在<code>package.json</code>中添加如下命令：</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;start&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;nodemon index.js&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-koa-中间件与洋葱模型\">3-3 Koa 中间件与洋葱模型<a title=\"#3-3-koa-中间件与洋葱模型\" href=\"#3-3-koa-中间件与洋葱模型\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>学习 async await</li>\n<li>学习编写Koa中间件</li>\n<li>学习洋葱模型</li>\n</ul>\n</blockquote>\n<h4 id=\"async-await\">async await<a title=\"#async-await\" href=\"#async-await\"></a></h4>\n<p>获取两个GitHub的接口并返回</p>\n<figure class=\"highlight js\"><figcaption><span>使用回调函数</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">fetch</span>(<span class=\"string\">&#x27;//api.github.com/users&#x27;</span>).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.<span class=\"title function_\">json</span>()).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">json</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(json);</span><br><span class=\"line\">    <span class=\"title function_\">fetch</span>(<span class=\"string\">&#x27;//api.github.com/users/lewis617&#x27;</span>).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.<span class=\"title function_\">json</span>()).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">json2</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>. <span class=\"title function_\">log</span>(json2);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>使用async await</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">async</span> () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> <span class=\"title function_\">fetch</span>(<span class=\"string\">&#x27;//api.github.com/users&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> json = <span class=\"keyword\">await</span> res.<span class=\"title function_\">json</span>();</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(json);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res2 = <span class=\"keyword\">await</span> <span class=\"title function_\">fetch</span>(<span class=\"string\">&#x27;//api.github.com/users/lewis617&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> json2 = <span class=\"keyword\">await</span> res2.<span class=\"title function_\">json</span>();</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(json2);</span><br><span class=\"line\">&#125;)()</span><br></pre></td></tr></table></figure>\n<h4 id=\"编写koa中间件\">编写Koa中间件<a title=\"#编写koa中间件\" href=\"#编写koa中间件\"></a></h4>\n<figure class=\"highlight js\"><figcaption><span>index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Koa</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Koa</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"keyword\">async</span> (ctx, next) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span> .<span class=\"title function_\">log</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">next</span>();</span><br><span class=\"line\">    <span class=\"variable language_\">console</span> <span class=\"title function_\">log</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = <span class=\"string\">&#x27;HeÍlo Zhihu API&#x27;</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"keyword\">async</span> (ctx, next) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span> .<span class=\"title function_\">log</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">next</span>();</span><br><span class=\"line\">    <span class=\"variable language_\">console</span> <span class=\"title function_\">log</span>(<span class=\"number\">4</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"keyword\">async</span> (ctx) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span> .<span class=\"title function_\">log</span>(<span class=\"number\">5</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">3000</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"洋葱模型\">洋葱模型<a title=\"#洋葱模型\" href=\"#洋葱模型\"></a></h4>\n<p>以上代码打印的顺序为：1 3 5 4 2，类似一个🧅</p>\n<!-- ![洋葱模型](#) -->\n<image src=\"https://blog-1251959181.cos.ap-beijing.myqcloud.com/posts/354/ycmx.png\" />\n<h2 id=\"第4章-koa-框架的路由与-restful-api-最佳实践\">第4章 Koa 框架的路由与 RESTful API 最佳实践<a title=\"#第4章-koa-框架的路由与-restful-api-最佳实践\" href=\"#第4章-koa-框架的路由与-restful-api-最佳实践\"></a></h2>\n<blockquote>\n<p>本章主要讲解 Koa 框架的路由。和其他课程的区别在于，不仅要学习 Koa 框架本身的路由用法，还要学习实现 REST 风格的路由用法。</p>\n</blockquote>\n<h3 id=\"4-1-路由简介\">4-1 路由简介<a title=\"#4-1-路由简介\" href=\"#4-1-路由简介\"></a></h3>\n<h4 id=\"路由是什么？\">路由是什么？<a title=\"#路由是什么？\" href=\"#路由是什么？\"></a></h4>\n<ul>\n<li>决定了不同URL是如何被不同地执行的</li>\n<li>在Koa中，是一个中间件</li>\n</ul>\n<h4 id=\"为什么要用路由？\">为什么要用路由？<a title=\"#为什么要用路由？\" href=\"#为什么要用路由？\"></a></h4>\n<ul>\n<li>如果没有路由，会怎么样？</li>\n<li>路由存在的意义</li>\n</ul>\n<h4 id=\"如果没有路由\">如果没有路由<a title=\"#如果没有路由\" href=\"#如果没有路由\"></a></h4>\n<ul>\n<li>所有请求都做了相同的事</li>\n<li>所有请求都会返回相同的结果</li>\n</ul>\n<h4 id=\"路由存在的意义\">路由存在的意义<a title=\"#路由存在的意义\" href=\"#路由存在的意义\"></a></h4>\n<ul>\n<li>处理不同的URL</li>\n<li>处理不同的HTTP方法</li>\n<li>解析URL上的参数</li>\n</ul>\n<h3 id=\"4-2-自己编写-koa-路由中间件\">4-2 自己编写 Koa 路由中间件<a title=\"#4-2-自己编写-koa-路由中间件\" href=\"#4-2-自己编写-koa-路由中间件\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>处理不同的URL</li>\n<li>处理不同的HTTP方法</li>\n<li>解析URL上的参数</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><figcaption><span>index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Koa</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Koa</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"keyword\">async</span> (ctx) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 处理不同的URL</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ctx.<span class=\"property\">url</span> === <span class=\"string\">&#x27;/&#x27;</span>) &#123;</span><br><span class=\"line\">        ctx.<span class=\"property\">body</span> = <span class=\"string\">&#x27;这是主页&#x27;</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(ctx.<span class=\"property\">url</span> === <span class=\"string\">&#x27;/users&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 处理不同的HTTP方法</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(ctx.<span class=\"property\">method</span> === <span class=\"string\">&#x27;GET&#x27;</span>) &#123;</span><br><span class=\"line\">            ctx.<span class=\"property\">body</span> = <span class=\"string\">&#x27;这是用户列表页&#x27;</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(ctx.<span class=\"property\">method</span> === <span class=\"string\">&#x27;POST&#x27;</span>) &#123;</span><br><span class=\"line\">            ctx.<span class=\"property\">body</span> = <span class=\"string\">&#x27;创建用户&#x27;</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (ctx.<span class=\"property\">url</span>.<span class=\"title function_\">metch</span>(<span class=\"regexp\">/\\/users\\/\\w+/</span>)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 解析URL上的参数</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> userId = ctx.<span class=\"property\">url</span>.<span class=\"title function_\">match</span>(<span class=\"regexp\">/\\/users\\/(\\w+)/</span>)[<span class=\"number\">1</span>];</span><br><span class=\"line\">            ctx.<span class=\"property\">body</span> = <span class=\"string\">`这是用户 <span class=\"subst\">$&#123;userId&#125;</span>`</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            ctx.<span class=\"property\">status</span> = <span class=\"number\">405</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        ctx.<span class=\"property\">status</span> = <span class=\"number\">404</span><span class=\"string\">&#x27;;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">app.listen(3000);</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-3-使用-koa-router-实现路由\">4-3 使用 koa-router 实现路由<a title=\"#4-3-使用-koa-router-实现路由\" href=\"#4-3-使用-koa-router-实现路由\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>更优雅地实现路由基本功能</li>\n<li>演示一些高级路由功能，如前缀、多中间件</li>\n</ul>\n</blockquote>\n<h4 id=\"路由基本功能\">路由基本功能<a title=\"#路由基本功能\" href=\"#路由基本功能\"></a></h4>\n<p><code>npm i koa-router --save</code></p>\n<figure class=\"highlight js\"><figcaption><span>index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Koa</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Router</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-router&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Koa</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> <span class=\"title class_\">Router</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = <span class=\"string\">&#x27;这是主页&#x27;</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/users&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = <span class=\"string\">&#x27;这是用户列表&#x27;</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">router.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/users&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = <span class=\"string\">&#x27;这是创建用户接口&#x27;</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/users/:id&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = <span class=\"string\">`这是用户 <span class=\"subst\">$&#123;ctx.params.id&#125;</span>`</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(router.<span class=\"title function_\">routes</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">3000</span>); </span><br></pre></td></tr></table></figure>\n<h4 id=\"高级路由功能\">高级路由功能<a title=\"#高级路由功能\" href=\"#高级路由功能\"></a></h4>\n<figure class=\"highlight js\"><figcaption><span>index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Koa</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Router</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-router&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Koa</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> <span class=\"title class_\">Router</span>();</span><br><span class=\"line\"><span class=\"comment\">// 路由前缀</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> usersRouter = <span class=\"keyword\">new</span> <span class=\"title class_\">Router</span>(&#123; <span class=\"attr\">prefix</span>: <span class=\"string\">&#x27;/users&#x27;</span> &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 多中间件 模拟鉴权</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">auth</span> = <span class=\"keyword\">async</span> (<span class=\"params\">ctx, next</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ctx.<span class=\"property\">url</span> !== <span class=\"string\">&#x27;/users&#x27;</span>) &#123;</span><br><span class=\"line\">        ctx.<span class=\"keyword\">throw</span>(<span class=\"number\">401</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">next</span>(); </span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = <span class=\"string\">&#x27;这是主页&#x27;</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">usersRouter.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, auth, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = <span class=\"string\">&#x27;这是用户列表&#x27;</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">usersRouter.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/&#x27;</span>, auth, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = <span class=\"string\">&#x27;这是创建用户接口&#x27;</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">usersRouter.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, auth, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = <span class=\"string\">`这是用户 <span class=\"subst\">$&#123;ctx.params.id&#125;</span>`</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(router.<span class=\"title function_\">routes</span>());</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(usersRouter.<span class=\"title function_\">routes</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">3000</span>); </span><br></pre></td></tr></table></figure>\n<h3 id=\"4-4-http-options-方法的作用是什么\">4-4 HTTP options 方法的作用是什么<a title=\"#4-4-http-options-方法的作用是什么\" href=\"#4-4-http-options-方法的作用是什么\"></a></h3>\n<h4 id=\"为何要了解options方法的作用？\">为何要了解options方法的作用？<a title=\"#为何要了解options方法的作用？\" href=\"#为何要了解options方法的作用？\"></a></h4>\n<ul>\n<li>这是一道面试题</li>\n<li>帮助理解koa-router的allowedMethods的作用</li>\n</ul>\n<h4 id=\"http-options方法的作用是什么？\">HTTP options方法的作用是什么？<a title=\"#http-options方法的作用是什么？\" href=\"#http-options方法的作用是什么？\"></a></h4>\n<ul>\n<li>检测服务器所支持的请求方法</li>\n<li>CORS中的预检请求</li>\n</ul>\n<h4 id=\"allowedmethods的作用\">allowedMethods的作用<a title=\"#allowedmethods的作用\" href=\"#allowedmethods的作用\"></a></h4>\n<ul>\n<li>响应options方法，告诉它所支持的请求方法</li>\n<li>相应地返回405（不允许）和501（没实现）</li>\n</ul>\n<figure class=\"highlight js\"><figcaption><span>index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.<span class=\"title function_\">use</span>(usersRouter.<span class=\"title function_\">routes</span>());</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(usersRouter.<span class=\"title function_\">allowedMethods</span>());</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-5-restful-api-最佳实践——增删改查应该返回什么响应\">4-5 RESTful API 最佳实践——增删改查应该返回什么响应<a title=\"#4-5-restful-api-最佳实践——增删改查应该返回什么响应\" href=\"#4-5-restful-api-最佳实践——增删改查应该返回什么响应\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>实现增删改查</li>\n<li>返回正确的响应</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><figcaption><span>index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Koa</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Router</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-router&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Koa</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> <span class=\"title class_\">Router</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> usersRouter = <span class=\"keyword\">new</span> <span class=\"title class_\">Router</span>(&#123; <span class=\"attr\">prefix</span>: <span class=\"string\">&#x27;/users&#x27;</span> &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = <span class=\"string\">&#x27;这是主页&#x27;</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">usersRouter.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = [&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;user1&#x27;</span> &#125;, &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;user2&#x27;</span> &#125;];</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">usersRouter.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;lilei&#x27;</span> &#125;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">usersRouter.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = &#123; <span class=\"attr\">name</span>: <span class=\"string\">`<span class=\"subst\">$&#123;ctx.params.id&#125;</span>`</span> &#125;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">usersRouter.<span class=\"title function_\">put</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = &#123; <span class=\"attr\">name</span>: <span class=\"string\">`<span class=\"subst\">$&#123;ctx.params.id&#125;</span>`</span> &#125;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">usersRouter.<span class=\"title function_\">delete</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 状态码204表示成功但没有返回</span></span><br><span class=\"line\">    ctx.<span class=\"property\">status</span> = <span class=\"number\">204</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(router.<span class=\"title function_\">routes</span>());</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(usersRouter.<span class=\"title function_\">routes</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">3000</span>); </span><br></pre></td></tr></table></figure>\n<h2 id=\"第5章-koa-框架的控制器以及设计更合理的目录结构\">第5章 Koa 框架的控制器以及设计更合理的目录结构<a title=\"#第5章-koa-框架的控制器以及设计更合理的目录结构\" href=\"#第5章-koa-框架的控制器以及设计更合理的目录结构\"></a></h2>\n<blockquote>\n<p>本章主要讲解 Koa 框架的控制器部分的内容。从如何获取 HTTP 的请求参数，到发送 HTTP 的响应，一应俱全。让你明白目录结构是怎么来设计的更合理。</p>\n</blockquote>\n<h3 id=\"5-1-控制器简介\">5-1 控制器简介<a title=\"#5-1-控制器简介\" href=\"#5-1-控制器简介\"></a></h3>\n<ul>\n<li>什么是控制器？\n<ul>\n<li>拿到路由分配的任务，并执行</li>\n<li>在Koa中，是一个中间件</li>\n</ul>\n</li>\n<li>为什么要用控制器？\n<ul>\n<li>获取HTTP请求参数</li>\n<li>处理业务逻辑</li>\n<li>发送HTTP响应</li>\n</ul>\n</li>\n<li>获取HTTP请求参数\n<ul>\n<li>Query String, 如 <code>?q=keyword</code>, 一般为可选</li>\n<li>Router Params, 如 <code>/users/:id</code>, 一般为必选</li>\n<li>Body, 如 <code>&#123; name： &quot;李雷&quot; &#125;</code></li>\n<li>Header, 如 <code>Accept</code>, <code>Cookie</code></li>\n</ul>\n</li>\n<li>发送HTTP响应\n<ul>\n<li>发送Status，如<code>200</code>/<code>400</code>等</li>\n<li>发送Body，如<code>&#123; name：&quot;李雷&quot; &#125;</code></li>\n<li>发送Header，如<code>Allow</code>、<code>Content-Type</code></li>\n</ul>\n</li>\n<li>编写控制器最佳实践\n<ul>\n<li>每个资源的控制器放在不同的文件里</li>\n<li>尽量使用 类+类方法 的形式编写控制器</li>\n<li>严谨的错误处理</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-2-获取-http-请求参数\">5-2 获取 HTTP 请求参数<a title=\"#5-2-获取-http-请求参数\" href=\"#5-2-获取-http-请求参数\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>学习断点调试</li>\n<li>获取query (ctx.query)</li>\n<li>获取router params (ctx.params)</li>\n<li>获取body (ctx.request.body)</li>\n<li>获取header (ctx.header)</li>\n</ul>\n</blockquote>\n<h4 id=\"断点调试\">断点调试<a title=\"#断点调试\" href=\"#断点调试\"></a></h4>\n<p>VSCode中按F5进入调试并设置断点</p>\n<h4 id=\"获取body\">获取body<a title=\"#获取body\" href=\"#获取body\"></a></h4>\n<p>koa不支持解析请求体，需要引入中间件<strong>koa-bodyparser</strong></p>\n<p><code>npm i koa-bodyparser --save</code></p>\n<figure class=\"highlight js\"><figcaption><span>index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Koa</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> bodyparser = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-bodyparser&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">bodyparser</span>());</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(router.<span class=\"title function_\">routes</span>());</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-3-发送-http-响应\">5-3 发送 HTTP 响应<a title=\"#5-3-发送-http-响应\" href=\"#5-3-发送-http-响应\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>发送 status</li>\n<li>发送 body</li>\n<li>发送 header</li>\n<li>实现用户的增删改查</li>\n</ul>\n</blockquote>\n<h4 id=\"发送-status-&amp;-body\">发送 status &amp; body<a title=\"#发送-status-&amp;-body\" href=\"#发送-status-&amp;-body\"></a></h4>\n<p><code>ctx.status = 204;</code></p>\n<p><code>ctx.body = '&lt;h1&gt;这是主页&lt;/h1&gt;';</code></p>\n<h4 id=\"发送-header\">发送 header<a title=\"#发送-header\" href=\"#发送-header\"></a></h4>\n<figure class=\"highlight js\"><figcaption><span>index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">usersRouter.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ctx.<span class=\"title function_\">set</span>(<span class=\"string\">&#x27;Allow&#x27;</span>, <span class=\"string\">&#x27;GET, POST&#x27;</span>);</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;lilei&#x27;</span> &#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"实现用户的增删改查\">实现用户的增删改查<a title=\"#实现用户的增删改查\" href=\"#实现用户的增删改查\"></a></h4>\n<figure class=\"highlight js\"><figcaption><span>index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Koa</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Router</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-router&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Koa</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> <span class=\"title class_\">Router</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> usersRouter = <span class=\"keyword\">new</span> <span class=\"title class_\">Router</span>(&#123; <span class=\"attr\">prefix</span>: <span class=\"string\">&#x27;/users&#x27;</span> &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 内存数据库</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> db = [&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;user1&#x27;</span> &#125;, &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;user2&#x27;</span> &#125;];</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = <span class=\"string\">&#x27;这是主页&#x27;</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">usersRouter.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = db;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">usersRouter.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    db.<span class=\"title function_\">push</span>(ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>);</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">usersRouter.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = db[ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span> * <span class=\"number\">1</span>]; <span class=\"comment\">// 字符串转换成数字</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">usersRouter.<span class=\"title function_\">put</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    db[ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span> * <span class=\"number\">1</span>] = ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">usersRouter.<span class=\"title function_\">delete</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    db.<span class=\"title function_\">splice</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span> * <span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    ctx.<span class=\"property\">status</span> = <span class=\"number\">204</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(router.<span class=\"title function_\">routes</span>());</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(usersRouter.<span class=\"title function_\">routes</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">3000</span>); </span><br></pre></td></tr></table></figure>\n<h3 id=\"5-4-更合理的目录结构\">5-4 更合理的目录结构<a title=\"#5-4-更合理的目录结构\" href=\"#5-4-更合理的目录结构\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>将路由单独放在一个目录</li>\n<li>将控制器单独放在一个目录</li>\n<li>使用类+类方法的方式组织控制器</li>\n</ul>\n</blockquote>\n<p>新建总文件夹<code>/app</code>，并修改入口文件</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;start&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;nodemon app&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"重构路由模块\">重构路由模块<a title=\"#重构路由模块\" href=\"#重构路由模块\"></a></h4>\n<p>新建路由文件夹<code>/app/routes</code></p>\n<figure class=\"highlight js\"><figcaption><span>/app/routes/home.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Router</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-router&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> <span class=\"title class_\">Router</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = <span class=\"string\">&#x27;这是主页&#x27;</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = router;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/routes/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Router</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-router&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> <span class=\"title class_\">Router</span>(&#123; <span class=\"attr\">prefix</span>: <span class=\"string\">&#x27;/users&#x27;</span> &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> db = [&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;user1&#x27;</span> &#125;, &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;user2&#x27;</span> &#125;];</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = db;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">router.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    db.<span class=\"title function_\">push</span>(ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>);</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = db[ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span> * <span class=\"number\">1</span>]; <span class=\"comment\">// 字符串转换成数字</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">router.<span class=\"title function_\">put</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    db[ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span> * <span class=\"number\">1</span>] = ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">router.<span class=\"title function_\">delete</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    db.<span class=\"title function_\">splice</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span> * <span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    ctx.<span class=\"property\">status</span> = <span class=\"number\">204</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = router;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/routes/index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"function\">(<span class=\"params\">app</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    fs. <span class=\"title function_\">readdirSync</span>(__dirname ). <span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">file</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (file === <span class=\"string\">&#x27;index.js&#x27;</span>) &#123; <span class=\"keyword\">return</span>; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> route = <span class=\"built_in\">require</span>(<span class=\"string\">`./<span class=\"subst\">$&#123;file&#125;</span>`</span>);</span><br><span class=\"line\">        app.<span class=\"title function_\">use</span>(route.<span class=\"title function_\">routes</span>()).<span class=\"title function_\">use</span>(route.<span class=\"title function_\">allowedMethods</span>());</span><br><span class=\"line\">    &#125;); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Koa</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> bodyparser = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-bodyparser&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Koa</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> routing = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./routes&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">bodyparser</span>());</span><br><span class=\"line\"><span class=\"title function_\">routing</span>(app);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">3000</span>, <span class=\"function\">() =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;program running at localhost:3000&#x27;</span>)); </span><br></pre></td></tr></table></figure>\n<h4 id=\"重构控制器模块\">重构控制器模块<a title=\"#重构控制器模块\" href=\"#重构控制器模块\"></a></h4>\n<p>新建控制器文件夹<code>/app/controllers</code></p>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/home.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">HomeCtl</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">index</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">        ctx.<span class=\"property\">body</span> = <span class=\"string\">&#x27;&lt;h1&gt;This is home page.&lt;/h1&gt;&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">HomeCtl</span>();</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/routes/home.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Router</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-router&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> <span class=\"title class_\">Router</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; index &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../controllers/home&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, index);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = router;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> db = [&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;user1&#x27;</span> &#125;, &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;user2&#x27;</span> &#125;];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UsersCtl</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">find</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">        ctx.<span class=\"property\">body</span> = db;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">findById</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">        ctx.<span class=\"property\">body</span> = db[ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span> * <span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">create</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">        db.<span class=\"title function_\">push</span>(ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>);</span><br><span class=\"line\">        ctx.<span class=\"property\">body</span> = ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">update</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">        db[ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span> * <span class=\"number\">1</span>] = ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>;</span><br><span class=\"line\">        ctx.<span class=\"property\">body</span> = ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">delete</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">        db.<span class=\"title function_\">splice</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span> * <span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        ctx.<span class=\"property\">status</span> = <span class=\"number\">204</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">UsersCtl</span>(); </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/routes/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Router</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-router&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> <span class=\"title class_\">Router</span>(&#123; <span class=\"attr\">prefix</span>: <span class=\"string\">&#x27;/users&#x27;</span> &#125;);</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; find, findById, create, update, <span class=\"attr\">delete</span>: del &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../controllers/users&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, find);</span><br><span class=\"line\">router.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/&#x27;</span>, create);</span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, findById);</span><br><span class=\"line\">router.<span class=\"title function_\">put</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, update);</span><br><span class=\"line\">router.<span class=\"title function_\">delete</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, del);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = router;</span><br></pre></td></tr></table></figure>\n<h2 id=\"第6章-多种方案实现错误处理机制\">第6章 多种方案实现错误处理机制<a title=\"#第6章-多种方案实现错误处理机制\" href=\"#第6章-多种方案实现错误处理机制\"></a></h2>\n<blockquote>\n<p>本章主要讲解多种方案的错误处理。主要分三方面，一是 Koa 框架自带的错误处理，一是编写错误处理中间件，一是使用优秀的错误处理中间件。</p>\n</blockquote>\n<h3 id=\"6-1-错误处理简介\">6-1 错误处理简介<a title=\"#6-1-错误处理简介\" href=\"#6-1-错误处理简介\"></a></h3>\n<ul>\n<li>什么是错误处理？\n<ul>\n<li>编程语言或计算机硬件里的一种机制</li>\n<li>处理软件或信息系统中出现的异常状况</li>\n</ul>\n</li>\n<li>异常状况有哪些？\n<ul>\n<li>运行时错误，都返回500</li>\n<li>逻辑错误，如找不到（404）、先决条件失败（412）、无法处理的实体（参数格式不对，422）等</li>\n</ul>\n</li>\n<li>为什么要用错误处理？\n<ul>\n<li>防止程序挂掉</li>\n<li>告诉用户错误信息</li>\n<li>便于开发者调试</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"6-2-koa-自带的错误处理\">6-2 Koa 自带的错误处理<a title=\"#6-2-koa-自带的错误处理\" href=\"#6-2-koa-自带的错误处理\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>制造404、412、500三种错误</li>\n<li>了解Koa自带的错误处理做了什么</li>\n</ul>\n</blockquote>\n<h4 id=\"404\">404<a title=\"#404\" href=\"#404\"></a></h4>\n<p>这个错误并不是代码造成的而是客户端造成的，请求一个不存在的URL即可验证</p>\n<h4 id=\"412\">412<a title=\"#412\" href=\"#412\"></a></h4>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">findById</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span> * <span class=\"number\">1</span> &gt;= db.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">        ctx.<span class=\"keyword\">throw</span>(<span class=\"number\">412</span>, <span class=\"string\">&#x27;先决条件失败: ID大于数组长度&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = db[ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span> * <span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"500\">500<a title=\"#500\" href=\"#500\"></a></h4>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">find</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">    a.<span class=\"property\">b</span>;    <span class=\"comment\">// 故意写一段错误代码</span></span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = db;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-3-自己编写错误处理中间件\">6-3 自己编写错误处理中间件<a title=\"#6-3-自己编写错误处理中间件\" href=\"#6-3-自己编写错误处理中间件\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>自己编写错误处理中间件</li>\n<li>制造404、412、500三种错误来测试</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><figcaption><span>/app/index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Koa</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> bodyparser = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-bodyparser&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Koa</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> routing = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./routes&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这种方法并不能捕获404报错</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"keyword\">async</span> (ctx, next) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">await</span> <span class=\"title function_\">next</span>();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span>(err) &#123;</span><br><span class=\"line\">        ctx.<span class=\"property\">status</span> = err.<span class=\"property\">status</span> || err.<span class=\"property\">statusCode</span> || <span class=\"number\">500</span>;</span><br><span class=\"line\">        ctx.<span class=\"property\">body</span> = &#123;</span><br><span class=\"line\">            <span class=\"attr\">message</span>: err.<span class=\"property\">message</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">bodyparser</span>());</span><br><span class=\"line\"><span class=\"title function_\">routing</span>(app);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">3000</span>, <span class=\"function\">() =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;program running at localhost:3000&#x27;</span>)); </span><br></pre></td></tr></table></figure>\n<h3 id=\"6-4-使用-koa-json-error-进行错误处理\">6-4 使用 koa-json-error 进行错误处理<a title=\"#6-4-使用-koa-json-error-进行错误处理\" href=\"#6-4-使用-koa-json-error-进行错误处理\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>安装koa-json-error</li>\n<li>使用koa-json-error的默认配置处理错误</li>\n<li>修改配置使其在生产环境下禁用错误堆栈的返回</li>\n</ul>\n</blockquote>\n<p><code>npm i koa-json-error --save</code></p>\n<figure class=\"highlight js\"><figcaption><span>/app/index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Koa</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> bodyparser = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-bodyparser&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> error = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-json-error&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Koa</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> routing = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./routes&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// app.use(error());  默认设置直接调用函数即可</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">error</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">postFormat</span>: <span class=\"function\">(<span class=\"params\">e, &#123; stack, ...rest &#125;</span>) =&gt;</span> process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> === <span class=\"string\">&#x27;production&#x27;</span> ? rest : &#123; stack, ...rest &#125;</span><br><span class=\"line\">&#125;));</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">bodyparser</span>());</span><br><span class=\"line\"><span class=\"title function_\">routing</span>(app);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">3000</span>, <span class=\"function\">() =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;program running at localhost:3000&#x27;</span>)); </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;start&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;NODE_ENV=production nodemon app&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;dev&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;nodemon app&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>win电脑：<br>\n<code>npm i cross-env --save-dev</code></p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;start&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;cross-env NODE_ENV=production node app&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;dev&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;nodemon app&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"6-5-使用-koa-parameter-校验参数\">6-5 使用 koa-parameter 校验参数<a title=\"#6-5-使用-koa-parameter-校验参数\" href=\"#6-5-使用-koa-parameter-校验参数\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>安装koa一parameter</li>\n<li>使用koa一parameter校验参数</li>\n<li>制造422错误来测试校验结果</li>\n</ul>\n</blockquote>\n<p><code>npm i koa-parameter --save</code></p>\n<figure class=\"highlight js\"><figcaption><span>/app/index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Koa</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> bodyparser = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-bodyparser&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> error = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-json-error&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> parameter = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-parameter&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Koa</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> routing = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./routes&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">error</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">postFormat</span>: <span class=\"function\">(<span class=\"params\">e, &#123; stack, ...rest &#125;</span>) =&gt;</span> process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> === <span class=\"string\">&#x27;production&#x27;</span> ? rest : &#123; stack , ...rest &#125;</span><br><span class=\"line\">&#125;));</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">bodyparser</span>());</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">parameter</span>(app));<span class=\"comment\">// 传入app，可以在ctx中加入方法，全局使用</span></span><br><span class=\"line\"><span class=\"title function_\">routing</span>(app);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">3000</span>, <span class=\"function\">() =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;program running at localhost:3000&#x27;</span>)); </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">create</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">    ctx.<span class=\"title function_\">verifyParams</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span> &#125;, <span class=\"comment\">// required默认为true</span></span><br><span class=\"line\">        <span class=\"attr\">age</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;number&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">false</span> &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    db.<span class=\"title function_\">push</span>(ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>);</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"第7章-第一批用户入库啦~~\">第7章 第一批用户入库啦~~<a title=\"#第7章-第一批用户入库啦~~\" href=\"#第7章-第一批用户入库啦~~\"></a></h2>\n<blockquote>\n<p>本章主要讲解 NoSQL 概念以及 MongoDB 数据库的理论与入门实践。通过 MongoDB Atlas 云数据库学习 MongoDB 的增删改查等常见操作。</p>\n</blockquote>\n<h3 id=\"7-1-nosql-简介\">7-1 NoSQL 简介<a title=\"#7-1-nosql-简介\" href=\"#7-1-nosql-简介\"></a></h3>\n<ul>\n<li>什么是NoSQL\n<ul>\n<li>对不同于传统的关系型数据库的数据库管理系统的统称</li>\n</ul>\n</li>\n<li>NoSQL数据库的分类\n<ul>\n<li>列存储（HBase）</li>\n<li>文档存储（MongoDB）</li>\n<li>Key-value存储（Redis）</li>\n<li>图存储（FlockDB）</li>\n<li>对象存储（db4o）</li>\n<li>XML存储（BaseX）</li>\n</ul>\n</li>\n<li>为什么要用NoSQL\n<ul>\n<li>简单（没有原子性、一致性、隔离性等复杂规范）</li>\n<li>便于横向拓展</li>\n<li>适合超大规模数据的存储</li>\n<li>很灵活地存储复杂结构的数据（Schema Free）</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"7-2-mongodb-简介\">7-2 MongoDB 简介<a title=\"#7-2-mongodb-简介\" href=\"#7-2-mongodb-简介\"></a></h3>\n<ul>\n<li>什么是MongoDB ？\n<ul>\n<li>来自于英文单词&quot;Humongous”， 中文含义为&quot;庞大”</li>\n<li>面向文档存储的开源数据库</li>\n<li>由C++编写而成</li>\n</ul>\n</li>\n<li>为什么要用MongoDB ？\n<ul>\n<li>性能好（内存计算）</li>\n<li>大规模数据存储（可拓展性）</li>\n<li>可靠安全（本地复制、自动故障转移）</li>\n<li>方便存储复杂数据结构（Schema Free）</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"7-3-云数据库——mongodb-atlas\">7-3 云数据库——MongoDB Atlas<a title=\"#7-3-云数据库——mongodb-atlas\" href=\"#7-3-云数据库——mongodb-atlas\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>注册用户</li>\n<li>创建集群</li>\n<li>添加数据库用户</li>\n<li>设置IP地址白名单</li>\n<li>获取连接地址</li>\n</ul>\n</blockquote>\n<p><a href=\"https://stackoverflow.com/questions/50362647/connecting-to-mongodb-atlas-from-firebase-functions/58822693#58822693?newreg=a3af857c5c944c34a5f48ff365b97c0e\" target=\"_blank\">https://stackoverflow.com/questions/50362647/connecting-to-mongodb-atlas-from-firebase-functions/58822693#58822693?newreg=a3af857c5c944c34a5f48ff365b97c0e</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error: querySrv ESERVFAIL _mongodb._tcp.vincentebase.yqjup.mongodb.net</span><br><span class=\"line\">    at QueryReqWrap.onresolve [as oncomplete] (dns.js:203:19) &#123;</span><br><span class=\"line\">  errno: &#x27;ESERVFAIL&#x27;,</span><br><span class=\"line\">  code: &#x27;ESERVFAIL&#x27;,</span><br><span class=\"line\">  syscall: &#x27;querySrv&#x27;,</span><br><span class=\"line\">  hostname: &#x27;_mongodb._tcp.vincentebase.yqjup.mongodb.net&#x27;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Error: queryTxt ESERVFAIL vincentebase.yqjup.mongodb.net</span><br><span class=\"line\">    at QueryReqWrap.onresolve [as oncomplete] (dns.js:203:19) &#123;</span><br><span class=\"line\">  errno: &#x27;ESERVFAIL&#x27;,</span><br><span class=\"line\">  code: &#x27;ESERVFAIL&#x27;,</span><br><span class=\"line\">  syscall: &#x27;queryTxt&#x27;,</span><br><span class=\"line\">  hostname: &#x27;vincentebase.yqjup.mongodb.net&#x27;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>连接时需要修改密码和数据库名</p>\n<h3 id=\"7-4-使用-mongoose-连接-mongodb\">7-4 使用 Mongoose 连接 MongoDB<a title=\"#7-4-使用-mongoose-连接-mongodb\" href=\"#7-4-使用-mongoose-连接-mongodb\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>安装 Mong oose</li>\n<li>用 Mongoose 连接 MongoDB</li>\n</ul>\n</blockquote>\n<p><code>npm i mongoose --save</code></p>\n<figure class=\"highlight js\"><figcaption><span>/app/config.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">connectionStr</span>: <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Koa</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> bodyparser = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-bodyparser&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> error = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-json-error&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> parameter = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-parameter&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mongoose&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Koa</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> routing = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./routes&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; connectionStr &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./config&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">mongoose.<span class=\"title function_\">connect</span>(connectionStr, &#123; <span class=\"attr\">useNewUrlParser</span>: <span class=\"literal\">true</span> &#125;, <span class=\"function\">() =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;MongoDB 连接成功&#x27;</span>));</span><br><span class=\"line\">mongoose.<span class=\"property\">connection</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;error&#x27;</span>, <span class=\"variable language_\">console</span>.<span class=\"property\">error</span>); <span class=\"comment\">// 如果连接出错，打印错误信息</span></span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">error</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">postFormat</span>: <span class=\"function\">(<span class=\"params\">e, &#123; stack, ...rest &#125;</span>) =&gt;</span> process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> === <span class=\"string\">&#x27;production&#x27;</span> ? rest : &#123; stack , ...rest &#125;</span><br><span class=\"line\">&#125;));</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">bodyparser</span>());</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">parameter</span>(app));<span class=\"comment\">// 传入app，可以在ctx中加入方法，全局使用</span></span><br><span class=\"line\"><span class=\"title function_\">routing</span>(app);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">3000</span>, <span class=\"function\">() =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;program running at localhost:3000&#x27;</span>)); </span><br></pre></td></tr></table></figure>\n<h3 id=\"7-5-设计用户模块的-schema\">7-5 设计用户模块的 Schema<a title=\"#7-5-设计用户模块的-schema\" href=\"#7-5-设计用户模块的-schema\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>分析用户模块的属性</li>\n<li>编写用户模块的Schema</li>\n<li>使用Schema生成用户Model</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><figcaption><span>/app/models/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mongoose&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"title class_\">Schema</span>, model &#125; = mongoose;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> userSchema = <span class=\"keyword\">new</span> <span class=\"title class_\">Schema</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title function_\">model</span>(<span class=\"string\">&#x27;User&#x27;</span>, userSchema);</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-6-用-mongodb-实现用户的增删改查\">7-6 用 MongoDB 实现用户的增删改查<a title=\"#7-6-用-mongodb-实现用户的增删改查\" href=\"#7-6-用-mongodb-实现用户的增删改查\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>用Mongoose实现增删改查接口</li>\n<li>用Postman测试增删改查接口</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">User</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../models/users&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UsersCtl</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"title function_\">find</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">        ctx.<span class=\"property\">body</span> = <span class=\"keyword\">await</span> <span class=\"title class_\">User</span>.<span class=\"title function_\">find</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"title function_\">findById</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> user = <span class=\"keyword\">await</span> <span class=\"title class_\">User</span>.<span class=\"title function_\">findById</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!user) &#123; ctx.<span class=\"keyword\">throw</span>(<span class=\"number\">404</span>, <span class=\"string\">&#x27;用户不存在&#x27;</span>); &#125;</span><br><span class=\"line\">        ctx.<span class=\"property\">body</span> = user;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"title function_\">create</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">        ctx.<span class=\"title function_\">verifyParams</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">name</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> user = <span class=\"keyword\">await</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>).<span class=\"title function_\">save</span>();</span><br><span class=\"line\">        ctx.<span class=\"property\">body</span> = user;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"title function_\">update</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">        ctx.<span class=\"title function_\">verifyParams</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">name</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> user = <span class=\"keyword\">await</span> <span class=\"title class_\">User</span>.<span class=\"title function_\">findByIdAndUpdate</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>, ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!user) &#123; ctx.<span class=\"keyword\">throw</span>(<span class=\"number\">404</span>, <span class=\"string\">&#x27;用户不存在&#x27;</span>); &#125;</span><br><span class=\"line\">        ctx.<span class=\"property\">body</span> = user;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"title function_\">delete</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> user = <span class=\"keyword\">await</span> <span class=\"title class_\">User</span>.<span class=\"title function_\">findByIdAndRemove</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!user) &#123; ctx.<span class=\"keyword\">throw</span>(<span class=\"number\">404</span>, <span class=\"string\">&#x27;用户不存在&#x27;</span>); &#125;</span><br><span class=\"line\">        ctx.<span class=\"property\">status</span> = <span class=\"number\">204</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">UsersCtl</span>();</span><br></pre></td></tr></table></figure>\n<h2 id=\"第8章-jwt-在-koa-框架中实现用户的认证与授权\">第8章 JWT 在 Koa 框架中实现用户的认证与授权<a title=\"#第8章-jwt-在-koa-框架中实现用户的认证与授权\" href=\"#第8章-jwt-在-koa-框架中实现用户的认证与授权\"></a></h2>\n<blockquote>\n<p>本章主要讲解 JWT 如何实现用户的认证与授权。从 Session 开始讲解过渡到 JWT，关键在于 Session 和 JWT 的对比。以及通过 Koa 框架的 JWT 中间件实现用户注册于授权登录功能。</p>\n</blockquote>\n<h3 id=\"8-1-session-简介\">8-1 Session 简介<a title=\"#8-1-session-简介\" href=\"#8-1-session-简介\"></a></h3>\n<ul>\n<li>Session的优势\n<ul>\n<li>相比JWT，最大的优势就在于可以主动清除session了</li>\n<li>session保存在服务器端，相对较为安全</li>\n<li>结合cookie使用，较为灵活，兼容性较好</li>\n</ul>\n</li>\n<li>Session的劣势\n<ul>\n<li>cookie + session在跨域场景表现并不好</li>\n<li>如果是分布式部署，需要做多机共享session机制</li>\n<li>基于cookie的机制很容易被CSRF</li>\n<li>查询session信息可能会有数据库查询操作</li>\n</ul>\n</li>\n<li>Session相关的概念介绍\n<ul>\n<li>session: 主要存放在服务器端，相对安全</li>\n<li>cookie: 主要存放在客户端，并且不是很安全</li>\n<li>sessionStorage: 仅在当前会话下有效，关闭页面或浏览器后被清除</li>\n<li>localstorage: 除非被清除，否则永久保存</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"8-2-jwt-简介\">8-2 JWT 简介<a title=\"#8-2-jwt-简介\" href=\"#8-2-jwt-简介\"></a></h3>\n<h4 id=\"什么是jwt\">什么是JWT<a title=\"#什么是jwt\" href=\"#什么是jwt\"></a></h4>\n<ul>\n<li>JSON Web Token是一个开放标准（RFC 7519）</li>\n<li>定义了一种紧凑且独立的方式，可以将各方之间的信息作为JSON对象进行安全传输</li>\n<li>该信息可以验证和信任，因为是经过数字签名的</li>\n</ul>\n<h4 id=\"jwt的构成\">JWT的构成<a title=\"#jwt的构成\" href=\"#jwt的构成\"></a></h4>\n<ul>\n<li>头部（Header）\n<ul>\n<li>typ: token的类型， 这里固定为JWT</li>\n<li>alg: 使用的hash算法，例如：HMACSHA256或者RSA</li>\n<li>编码前: {“alg”:“HS256”,“typ”:“JWT”}</li>\n<li>Base64编码: ‘eyJhbGciOiAiSFMyNTYiLCAidHlwIjogIkpXVCJ9’</li>\n</ul>\n</li>\n<li>有效载荷（Payload）\n<ul>\n<li>存储需要传递的信息，如用户ID、用户名等</li>\n<li>还包含元数据，如过期时间、发布人等</li>\n<li>与Header不同，Payload可以加密</li>\n<li>编码前: {“user_id”:“zhangsan”}</li>\n<li>Base64编码: ‘eyJ1c2VyX2lkIjoiemhhbmdzYW4ifQ==’</li>\n<li>Base64Url编码: ‘eyJ1c2VyX2lkIjoiemhhbmdzYW4ifQ’</li>\n</ul>\n</li>\n<li>签名（Signature）\n<ul>\n<li>对Header和Payload部分进行签名</li>\n<li>保证Token在传输的过程中没有被篡改或者损坏</li>\n<li>Signature = HMACSHA256(base64UrlEncode(header)+“.”+base64UrlEncode(payload), secret)</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"jwt工作原理\">JWT工作原理<a title=\"#jwt工作原理\" href=\"#jwt工作原理\"></a></h4>\n<!-- ![JWT工作原理](#) -->\n<image src=\"https://blog-1251959181.cos.ap-beijing.myqcloud.com/posts/354/JWT.png\" />\n<h3 id=\"8-3-jwt-vs.-session\">8-3 JWT vs. Session<a title=\"#8-3-jwt-vs.-session\" href=\"#8-3-jwt-vs.-session\"></a></h3>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"padding:0\"></th>\n<th style=\"text-align:center\">JWT</th>\n<th style=\"text-align:center\">Session</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">可拓展性</td>\n<td style=\"text-align:center\">无缝水平拓展</td>\n<td style=\"text-align:center\">适合垂直拓展</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">安全性</td>\n<td style=\"text-align:center\">JS可修改JWT，签名+加密</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">RESTful API</td>\n<td style=\"text-align:center\">无状态</td>\n<td style=\"text-align:center\">有状态</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">性能</td>\n<td style=\"text-align:center\">传输信息多，请求开销大</td>\n<td style=\"text-align:center\">需要查找用户信息，服务器开销大</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">时效性</td>\n<td style=\"text-align:center\">只有到期才可销毁</td>\n<td style=\"text-align:center\">可以在服务器端更新</td>\n</tr>\n</tbody>\n</table></div></div><h3 id=\"8-4-在-node.js-中使用-jwt\">8-4 在 Node.js 中使用 JWT<a title=\"#8-4-在-node.js-中使用-jwt\" href=\"#8-4-在-node.js-中使用-jwt\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>安装 jsonwebtoken</li>\n<li>签名</li>\n<li>验证</li>\n</ul>\n</blockquote>\n<p><code>npm i jsonwebtoken</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node</span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">jwt = require(<span class=\"string\">&#x27;jsonwebtoken&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">token = jwt.sign(&#123;name: <span class=\"string\">&#x27;vincente&#x27;</span>&#125;, <span class=\"string\">&#x27;secret&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">jwt.decode(token);</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">jwt.verify(token, <span class=\"string\">&#x27;secret&#x27;</span>);</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"8-5-实现用户注册\">8-5 实现用户注册<a title=\"#8-5-实现用户注册\" href=\"#8-5-实现用户注册\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>设计用户Schema</li>\n<li>编写保证唯一性的逻辑</li>\n</ul>\n</blockquote>\n<h4 id=\"设计用户schema\">设计用户Schema<a title=\"#设计用户schema\" href=\"#设计用户schema\"></a></h4>\n<figure class=\"highlight js\"><figcaption><span>/app/models/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mongoose&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"title class_\">Schema</span>, model &#125; = mongoose;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> userSchema = <span class=\"keyword\">new</span> <span class=\"title class_\">Schema</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">__v</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,   <span class=\"comment\">// 隐藏无用返回</span></span><br><span class=\"line\">    <span class=\"attr\">name</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">password</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;   <span class=\"comment\">// 默认不暴露密码</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title function_\">model</span>(<span class=\"string\">&#x27;User&#x27;</span>, userSchema);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">create</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">    ctx.<span class=\"title function_\">verifyParams</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">        <span class=\"attr\">password</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> user = <span class=\"keyword\">await</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>).<span class=\"title function_\">save</span>();</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = user;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">update</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">    ctx.<span class=\"title function_\">verifyParams</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">        <span class=\"attr\">password</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">false</span> &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> user = <span class=\"keyword\">await</span> <span class=\"title class_\">User</span>.<span class=\"title function_\">findByIdAndUpdate</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>, ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!user) &#123; ctx.<span class=\"keyword\">throw</span>(<span class=\"number\">404</span>, <span class=\"string\">&#x27;用户不存在&#x27;</span>); &#125;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = user;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/routes/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.<span class=\"title function_\">patch</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, update);</span><br></pre></td></tr></table></figure>\n<h4 id=\"编写保证唯一性的逻辑\">编写保证唯一性的逻辑<a title=\"#编写保证唯一性的逻辑\" href=\"#编写保证唯一性的逻辑\"></a></h4>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">create</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">    ctx.<span class=\"title function_\">verifyParams</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">        <span class=\"attr\">password</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; name &#125; = ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> repeatedUser = <span class=\"keyword\">await</span> <span class=\"title class_\">User</span>.<span class=\"title function_\">findOne</span>(&#123; name &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (repeatedUser) &#123; ctx.<span class=\"keyword\">throw</span>(<span class=\"number\">409</span>, <span class=\"string\">&#x27;用户名已被占用&#x27;</span>); &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> user = <span class=\"keyword\">await</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>).<span class=\"title function_\">save</span>();</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = user;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-6-实现登录并获取-token\">8-6 实现登录并获取 Token<a title=\"#8-6-实现登录并获取-token\" href=\"#8-6-实现登录并获取-token\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>登录接口设计</li>\n<li>用jsonwebtoken生成token</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><figcaption><span>/app/routes/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; find, findById, create,</span><br><span class=\"line\">    update, <span class=\"attr\">delete</span>: del, login</span><br><span class=\"line\">&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../controllers/users&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/login&#x27;</span>, login);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = router;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/config.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">secret</span>: <span class=\"string\">&#x27;zhihu-jwt-secert&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">connectionStr</span>: <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> jsonwebtoken = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;jsonwebtoken&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">login</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">    ctx.<span class=\"title function_\">verifyParams</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">        <span class=\"attr\">password</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> user = <span class=\"keyword\">await</span> <span class=\"title class_\">User</span>.<span class=\"title function_\">findOne</span>(ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!user) &#123; ctx.<span class=\"keyword\">throw</span>(<span class=\"number\">401</span>, <span class=\"string\">&#x27;用户名或密码不正确&#x27;</span>); &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; _id, name &#125; = user;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> token = jsonwebtoken.<span class=\"title function_\">sign</span>(&#123; _id, name &#125;, secret, &#123; <span class=\"attr\">expriseIn</span>: <span class=\"string\">&#x27;1d&#x27;</span> &#125;);</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = &#123; token &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-7-自己编写-koa-中间件实现用户认证与授权\">8-7 自己编写 Koa 中间件实现用户认证与授权<a title=\"#8-7-自己编写-koa-中间件实现用户认证与授权\" href=\"#8-7-自己编写-koa-中间件实现用户认证与授权\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>认证：验证token ，并获取用户信息</li>\n<li>授权：使用中间件保护接口</li>\n</ul>\n</blockquote>\n<h4 id=\"认证\">认证<a title=\"#认证\" href=\"#认证\"></a></h4>\n<figure class=\"highlight js\"><figcaption><span>/app/routes/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> jsonwebtoken = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;jsonwebtoken&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; secret &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../config&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">auth</span> = <span class=\"keyword\">async</span> (<span class=\"params\">ctx, next</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; authorization = <span class=\"string\">&#x27;&#x27;</span> &#125; = ctx.<span class=\"property\">request</span>.<span class=\"property\">header</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> token = authorization.<span class=\"title function_\">replace</span>(<span class=\"string\">&#x27;Bearer &#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> user = jsonwebtoken.<span class=\"title function_\">verify</span>(token, secret);</span><br><span class=\"line\">        ctx.<span class=\"property\">state</span>.<span class=\"property\">user</span> = user;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">        ctx.<span class=\"keyword\">throw</span>(<span class=\"number\">401</span>, err.<span class=\"property\">message</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">next</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, find);</span><br><span class=\"line\">router.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/&#x27;</span>, create);</span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, findById);</span><br><span class=\"line\">router.<span class=\"title function_\">patch</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, auth, update);</span><br><span class=\"line\">router.<span class=\"title function_\">delete</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, auth, del);</span><br><span class=\"line\">router.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/login&#x27;</span>, login);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = router;</span><br></pre></td></tr></table></figure>\n<h4 id=\"授权\">授权<a title=\"#授权\" href=\"#授权\"></a></h4>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">checkOwner</span>(<span class=\"params\">ctx, next</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span> !== ctx.<span class=\"property\">state</span>.<span class=\"property\">user</span>.<span class=\"property\">_id</span>) &#123; ctx.<span class=\"keyword\">throw</span>(<span class=\"number\">403</span>, <span class=\"string\">&#x27;没有权限&#x27;</span>); &#125;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">next</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/routes/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; find, findById, create, update,</span><br><span class=\"line\">    <span class=\"attr\">delete</span>: del, login, checkOwner</span><br><span class=\"line\">&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../controllers/users&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">patch</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, auth, checkOwner, update);</span><br><span class=\"line\">router.<span class=\"title function_\">delete</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, auth, checkOwner, del);</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-8-用-koa-jwt-中间件实现用户认证与授权\">8-8 用 koa-jwt 中间件实现用户认证与授权<a title=\"#8-8-用-koa-jwt-中间件实现用户认证与授权\" href=\"#8-8-用-koa-jwt-中间件实现用户认证与授权\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>安装 koa-jwt</li>\n<li>使用中间件保护接口</li>\n<li>使用中间件获取用户信息</li>\n</ul>\n</blockquote>\n<p><code>npm i koa-jwt --save</code></p>\n<figure class=\"highlight js\"><figcaption><span>/app/routes/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> jwt = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-jwt&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; secret &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../config&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> auth = <span class=\"title function_\">jwt</span>(&#123; secret &#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"第9章-项目实战之上传图片模块\">第9章 项目实战之上传图片模块<a title=\"#第9章-项目实战之上传图片模块\" href=\"#第9章-项目实战之上传图片模块\"></a></h2>\n<blockquote>\n<p>本章主要讲解 Koa 框架如何实现上传。凡事从需求分析入手，通过使用 Koa 框架的中间件实现获取上传的文件以及生成图片的链接。</p>\n</blockquote>\n<h3 id=\"9-1-上传图片需求分析\">9-1 上传图片需求分析<a title=\"#9-1-上传图片需求分析\" href=\"#9-1-上传图片需求分析\"></a></h3>\n<ul>\n<li>上传图片的需求场景\n<ul>\n<li>用户头像</li>\n<li>封面图片</li>\n<li>问题和回答中的图片</li>\n<li>话题图片</li>\n</ul>\n</li>\n<li>上传图片的功能点\n<ul>\n<li>基础功能：上传图片、生成图片链接</li>\n<li>附加功能：限制上传图片的大小与类型、生成高中低三种分辨率的图片链接、生成CDN</li>\n</ul>\n</li>\n<li>上传图片的技术方案\n<ul>\n<li>阿里云OSS等云服务，推荐在生产环境下使用</li>\n<li>直接上传到服务器，不推荐在生产环境下中使用</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"9-2-使用-koa-body-中间件获取上传的文件\">9-2 使用 koa-body 中间件获取上传的文件<a title=\"#9-2-使用-koa-body-中间件获取上传的文件\" href=\"#9-2-使用-koa-body-中间件获取上传的文件\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>安装koa-body ，替换koa-bodyparser</li>\n<li>设置图片上传目录</li>\n<li>使用Postman上传文件</li>\n</ul>\n</blockquote>\n<p><code>npm i koa-body --save</code></p>\n<p><code>npm uninstall koa-bodyparser</code></p>\n<figure class=\"highlight js\"><figcaption><span>/app/index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Koa</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> koaBody = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-body&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> error = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-json-error&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> parameter = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-parameter&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mongoose&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Koa</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> routing = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./routes&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; connectionStr &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./config&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">mongoose.<span class=\"title function_\">connect</span>(connectionStr, &#123; <span class=\"attr\">useNewUrlParser</span>: <span class=\"literal\">true</span> &#125;, <span class=\"function\">() =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;MongoDB 连接成功&#x27;</span>));</span><br><span class=\"line\">mongoose.<span class=\"property\">connection</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;error&#x27;</span>, <span class=\"variable language_\">console</span>.<span class=\"property\">error</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">error</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">postFormat</span>: <span class=\"function\">(<span class=\"params\">e, &#123; stack, ...rest &#125;</span>) =&gt;</span> process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> === <span class=\"string\">&#x27;production&#x27;</span> ? rest : &#123; stack , ...rest &#125;</span><br><span class=\"line\">&#125;));</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">koaBody</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">multipart</span>: <span class=\"literal\">true</span>,    <span class=\"comment\">// 允许传输文件</span></span><br><span class=\"line\">    <span class=\"attr\">formidable</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">uploadDir</span>: path.<span class=\"title function_\">join</span>(__dirname, <span class=\"string\">&#x27;/public/uploads&#x27;</span>),</span><br><span class=\"line\">        <span class=\"attr\">keepExtensions</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;));</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">parameter</span>(app));</span><br><span class=\"line\"><span class=\"title function_\">routing</span>(app);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">3000</span>, <span class=\"function\">() =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;program running at localhost:3000&#x27;</span>)); </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/home.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">HomeCtl</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">index</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">        ctx.<span class=\"property\">body</span> = <span class=\"string\">&#x27;&lt;h1&gt;This is home page.&lt;/h1&gt;&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">upload</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> file = ctx.<span class=\"property\">request</span>.<span class=\"property\">files</span>.<span class=\"property\">file</span>;</span><br><span class=\"line\">        ctx.<span class=\"property\">body</span> = &#123; <span class=\"attr\">path</span>: file.<span class=\"property\">path</span> &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">HomeCtl</span>(); </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/routes/home.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Router</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-router&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> <span class=\"title class_\">Router</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; index &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../controllers/home&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, index);</span><br><span class=\"line\">router.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/upload&#x27;</span>, upload);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = router;</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-3-使用-koa-static-中间件生成图片链接\">9-3 使用 koa-static 中间件生成图片链接<a title=\"#9-3-使用-koa-static-中间件生成图片链接\" href=\"#9-3-使用-koa-static-中间件生成图片链接\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>安装koa-static</li>\n<li>设置静态文件目录</li>\n<li>生成图片链接</li>\n</ul>\n</blockquote>\n<p><code>npm i koa-static --save</code></p>\n<figure class=\"highlight js\"><figcaption><span>/app/index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Koa</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> koaBody = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-body&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> koaStatic = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-static&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> error = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-json-error&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> parameter = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-parameter&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mongoose&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Koa</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> routing = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./routes&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; connectionStr &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./config&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">mongoose.<span class=\"title function_\">connect</span>(connectionStr, &#123; <span class=\"attr\">useNewUrlParser</span>: <span class=\"literal\">true</span> &#125;, <span class=\"function\">() =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;MongoDB 连接成功&#x27;</span>));</span><br><span class=\"line\">mongoose.<span class=\"property\">connection</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;error&#x27;</span>, <span class=\"variable language_\">console</span>.<span class=\"property\">error</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">koaStatic</span>(path.<span class=\"title function_\">join</span>(__dirname, <span class=\"string\">&#x27;public&#x27;</span>)));</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">error</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">postFormat</span>: <span class=\"function\">(<span class=\"params\">e, &#123; stack, ...rest &#125;</span>) =&gt;</span> process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> === <span class=\"string\">&#x27;production&#x27;</span> ? rest : &#123; stack , ...rest &#125;</span><br><span class=\"line\">&#125;));</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">koaBody</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">multipart</span>: <span class=\"literal\">true</span>,    <span class=\"comment\">// 允许传输文件</span></span><br><span class=\"line\">    <span class=\"attr\">formidable</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">uploadDir</span>: path.<span class=\"title function_\">join</span>(__dirname, <span class=\"string\">&#x27;/public/uploads&#x27;</span>),</span><br><span class=\"line\">        <span class=\"attr\">keepExtensions</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;));</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">parameter</span>(app));</span><br><span class=\"line\"><span class=\"title function_\">routing</span>(app);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">3000</span>, <span class=\"function\">() =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;program running at localhost:3000&#x27;</span>)); </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/home.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">HomeCtl</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">index</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">        ctx.<span class=\"property\">body</span> = <span class=\"string\">&#x27;&lt;h1&gt;This is home page.&lt;/h1&gt;&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">upload</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> file = ctx.<span class=\"property\">request</span>.<span class=\"property\">files</span>.<span class=\"property\">file</span>;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> basename = path.<span class=\"title function_\">basename</span>(file.<span class=\"property\">path</span>);</span><br><span class=\"line\">        ctx.<span class=\"property\">body</span> = &#123; <span class=\"attr\">url</span>: <span class=\"string\">`<span class=\"subst\">$&#123;ctx.origin&#125;</span>/uploads/<span class=\"subst\">$&#123;basename&#125;</span>`</span> &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">HomeCtl</span>(); </span><br></pre></td></tr></table></figure>\n<h3 id=\"9-4-编写前端页面上传文件\">9-4 编写前端页面上传文件<a title=\"#9-4-编写前端页面上传文件\" href=\"#9-4-编写前端页面上传文件\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>编写上传文件的前端页面</li>\n<li>与后端接口联调测试</li>\n</ul>\n</blockquote>\n<figure class=\"highlight html\"><figcaption><span>/app/public/upload.html</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;/upload&quot;</span> <span class=\"attr\">entype</span>=<span class=\"string\">&quot;mutipart/form-data&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;POST&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">accept</span>=<span class=\"string\">&quot;.png, image/jpg&quot;</span>/&gt;</span>   // 接受jpg/png，image/*表示所有图片类型</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span>&gt;</span>上传<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"第10章-项目实战之个人资料模块-——-学习处理复杂数据类型\">第10章 项目实战之个人资料模块 —— 学习处理复杂数据类型<a title=\"#第10章-项目实战之个人资料模块-——-学习处理复杂数据类型\" href=\"#第10章-项目实战之个人资料模块-——-学习处理复杂数据类型\"></a></h2>\n<blockquote>\n<p>本章主要讲解如何设计复杂的 MongoDB 数据类型。从需求分析开始，到 schema 的设计，再到参数的校验。最后，还要实现 RESTful API 的最佳实践。</p>\n</blockquote>\n<h3 id=\"10-1-个人资料需求分析\">10-1 个人资料需求分析<a title=\"#10-1-个人资料需求分析\" href=\"#10-1-个人资料需求分析\"></a></h3>\n<p>个人资料功能点：</p>\n<ul>\n<li>不同类型（如字符串、数组）的属性</li>\n<li>字段过滤</li>\n</ul>\n<h3 id=\"10-2-个人资料的-schema-设计\">10-2 个人资料的 schema 设计<a title=\"#10-2-个人资料的-schema-设计\" href=\"#10-2-个人资料的-schema-设计\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>分析个人资料的数据结构</li>\n<li>设计个人资料的schema</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><figcaption><span>/app/models/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mongoose&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"title class_\">Schema</span>, model &#125; = mongoose;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> userSchema = <span class=\"keyword\">new</span> <span class=\"title class_\">Schema</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">__v</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">password</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">avatar_url</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">gender</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">enum</span>: [<span class=\"string\">&#x27;male&#x27;</span>, <span class=\"string\">&#x27;female&#x27;</span>], <span class=\"attr\">default</span>: <span class=\"string\">&#x27;male&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">headline</span>:  &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">locations</span>: &#123; <span class=\"attr\">type</span>: [&#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span> &#125;] &#125;,</span><br><span class=\"line\">    <span class=\"attr\">business</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">employments</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: [&#123;</span><br><span class=\"line\">            <span class=\"attr\">company</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span> &#125;,</span><br><span class=\"line\">            <span class=\"attr\">job</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span> &#125;</span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">educations</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: [&#123;</span><br><span class=\"line\">            <span class=\"attr\">school</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span> &#125;,</span><br><span class=\"line\">            <span class=\"attr\">major</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span> &#125;,</span><br><span class=\"line\">            <span class=\"attr\">diploma</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span>, <span class=\"attr\">enum</span>: [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>] &#125;,</span><br><span class=\"line\">            <span class=\"attr\">entrance_year</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span> &#125;,</span><br><span class=\"line\">            <span class=\"attr\">graduation_year</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span> &#125;</span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title function_\">model</span>(<span class=\"string\">&#x27;User&#x27;</span>, userSchema);</span><br></pre></td></tr></table></figure>\n<h3 id=\"10-3-个人资料的参数校验\">10-3 个人资料的参数校验<a title=\"#10-3-个人资料的参数校验\" href=\"#10-3-个人资料的参数校验\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>分析个 人资料的数据结构</li>\n<li>编写代码校验个人资料参数</li>\n<li>使用Postman测试</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">update</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">    ctx.<span class=\"title function_\">verifyParams</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">        <span class=\"attr\">password</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">        <span class=\"attr\">avatar_url</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">        <span class=\"attr\">gender</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">        <span class=\"attr\">headline</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">        <span class=\"attr\">locations</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;array&#x27;</span>, <span class=\"attr\">itemType</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">        <span class=\"attr\">business</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">        <span class=\"attr\">employments</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;array&#x27;</span>, <span class=\"attr\">itemType</span>: <span class=\"string\">&#x27;object&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">        <span class=\"attr\">educations</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;array&#x27;</span>, <span class=\"attr\">itemType</span>: <span class=\"string\">&#x27;object&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> user = <span class=\"keyword\">await</span> <span class=\"title class_\">User</span>.<span class=\"title function_\">findByIdAndUpdate</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>, ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!user) &#123; ctx.<span class=\"keyword\">throw</span>(<span class=\"number\">404</span>, <span class=\"string\">&#x27;用户不存在&#x27;</span>); &#125;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = user;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"10-4-restful-api-最佳实践——字段过滤\">10-4 RESTful API 最佳实践——字段过滤<a title=\"#10-4-restful-api-最佳实践——字段过滤\" href=\"#10-4-restful-api-最佳实践——字段过滤\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>设计schema默认隐藏部分字段</li>\n<li>通过查询字符串 显示隐藏字段</li>\n<li>使用Postman测试</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><figcaption><span>/app/models/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mongoose&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"title class_\">Schema</span>, model &#125; = mongoose;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> userSchema = <span class=\"keyword\">new</span> <span class=\"title class_\">Schema</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">__v</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">password</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">avatar_url</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">gender</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">enum</span>: [<span class=\"string\">&#x27;male&#x27;</span>, <span class=\"string\">&#x27;female&#x27;</span>], <span class=\"attr\">default</span>: <span class=\"string\">&#x27;male&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">headline</span>:  &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">locations</span>: &#123; <span class=\"attr\">type</span>: [&#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span> &#125;], <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">business</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">employments</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: [&#123;</span><br><span class=\"line\">            <span class=\"attr\">company</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span> &#125;,</span><br><span class=\"line\">            <span class=\"attr\">job</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span> &#125;</span><br><span class=\"line\">        &#125;],</span><br><span class=\"line\">        <span class=\"attr\">select</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">educations</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: [&#123;</span><br><span class=\"line\">            <span class=\"attr\">school</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span> &#125;,</span><br><span class=\"line\">            <span class=\"attr\">major</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span> &#125;,</span><br><span class=\"line\">            <span class=\"attr\">diploma</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span>, <span class=\"attr\">enum</span>: [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>] &#125;,</span><br><span class=\"line\">            <span class=\"attr\">entrance_year</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span> &#125;,</span><br><span class=\"line\">            <span class=\"attr\">graduation_year</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span> &#125;</span><br><span class=\"line\">        &#125;],</span><br><span class=\"line\">        <span class=\"attr\">select</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title function_\">model</span>(<span class=\"string\">&#x27;User&#x27;</span>, userSchema);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">findById</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; fields &#125; = ctx.<span class=\"property\">query</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> selectFields = fields.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;;&#x27;</span>).<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">f</span> =&gt;</span> f).<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">f</span> =&gt;</span> <span class=\"string\">&#x27; +&#x27;</span> + f).<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> user = <span class=\"keyword\">await</span> <span class=\"title class_\">User</span>.<span class=\"title function_\">findById</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>).<span class=\"title function_\">select</span>(selectFields);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!user) &#123; ctx.<span class=\"keyword\">throw</span>(<span class=\"number\">404</span>, <span class=\"string\">&#x27;用户不存在&#x27;</span>); &#125;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = user;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"第11章-项目实战之关注与粉丝模块\">第11章 项目实战之关注与粉丝模块<a title=\"#第11章-项目实战之关注与粉丝模块\" href=\"#第11章-项目实战之关注与粉丝模块\"></a></h2>\n<blockquote>\n<p>本章主要讲解项目中关注与粉丝模块的设计与实现。覆盖了数据库中的经典多对多关系的设计，以及 RESTful 风格的接口设计与实现。最后，还编写了用来校验用户存在与否的 Koa 中间件。</p>\n</blockquote>\n<h3 id=\"11-1-关注与粉丝需求分析\">11-1 关注与粉丝需求分析<a title=\"#11-1-关注与粉丝需求分析\" href=\"#11-1-关注与粉丝需求分析\"></a></h3>\n<p>细化关注与粉丝功能点:</p>\n<ul>\n<li>关注、取消关注</li>\n<li>获取关注人、粉丝列表（用户-用户多对多关系）</li>\n</ul>\n<h3 id=\"11-2-关注与粉丝的-schema-设计\">11-2 关注与粉丝的 schema 设计<a title=\"#11-2-关注与粉丝的-schema-设计\" href=\"#11-2-关注与粉丝的-schema-设计\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>分析关注 与粉丝的数据结构</li>\n<li>设计关注与粉丝schema</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><figcaption><span>/app/models/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mongoose&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"title class_\">Schema</span>, model &#125; = mongoose;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> userSchema = <span class=\"keyword\">new</span> <span class=\"title class_\">Schema</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">__v</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">password</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">avatar_url</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">gender</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">enum</span>: [<span class=\"string\">&#x27;male&#x27;</span>, <span class=\"string\">&#x27;female&#x27;</span>], <span class=\"attr\">default</span>: <span class=\"string\">&#x27;male&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">headline</span>:  &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">locations</span>: &#123; <span class=\"attr\">type</span>: [&#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span> &#125;], <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">business</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">employments</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: [&#123;</span><br><span class=\"line\">            <span class=\"attr\">company</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span> &#125;,</span><br><span class=\"line\">            <span class=\"attr\">job</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span> &#125;</span><br><span class=\"line\">        &#125;],</span><br><span class=\"line\">        <span class=\"attr\">select</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">educations</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: [&#123;</span><br><span class=\"line\">            <span class=\"attr\">school</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span> &#125;,</span><br><span class=\"line\">            <span class=\"attr\">major</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span> &#125;,</span><br><span class=\"line\">            <span class=\"attr\">diploma</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span>, <span class=\"attr\">enum</span>: [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>] &#125;,</span><br><span class=\"line\">            <span class=\"attr\">entrance_year</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span> &#125;,</span><br><span class=\"line\">            <span class=\"attr\">graduation_year</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span> &#125;</span><br><span class=\"line\">        &#125;],</span><br><span class=\"line\">        <span class=\"attr\">select</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">following</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: [&#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Schema</span>.<span class=\"property\">Types</span>.<span class=\"property\">ObjectId</span>, <span class=\"attr\">ref</span>: <span class=\"string\">&#x27;User&#x27;</span> &#125;],</span><br><span class=\"line\">        <span class=\"attr\">select</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title function_\">model</span>(<span class=\"string\">&#x27;User&#x27;</span>, userSchema);</span><br></pre></td></tr></table></figure>\n<h3 id=\"11-3-restful-风格的关注与粉丝接口（上）\">11-3 RESTful 风格的关注与粉丝接口（上）<a title=\"#11-3-restful-风格的关注与粉丝接口（上）\" href=\"#11-3-restful-风格的关注与粉丝接口（上）\"></a></h3>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">listFollowing</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> user = <span class=\"keyword\">await</span> <span class=\"title class_\">User</span>.<span class=\"title function_\">findById</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>).<span class=\"title function_\">select</span>(<span class=\"string\">&#x27;+following&#x27;</span>).<span class=\"title function_\">populate</span>(<span class=\"string\">&#x27;following&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!user) &#123; ctx.<span class=\"keyword\">throw</span>(<span class=\"number\">404</span>, <span class=\"string\">&#x27;用户不存在&#x27;</span>); &#125;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = user.<span class=\"property\">following</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">follow</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> me = <span class=\"keyword\">await</span> <span class=\"title class_\">User</span>.<span class=\"title function_\">findById</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>).<span class=\"title function_\">select</span>(<span class=\"string\">&#x27;+following&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!me.<span class=\"property\">following</span>.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">id</span> =&gt;</span> id.<span class=\"title function_\">toString</span>()).<span class=\"title function_\">includes</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>)) &#123;</span><br><span class=\"line\">        me.<span class=\"property\">following</span>.<span class=\"title function_\">push</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>);</span><br><span class=\"line\">        me.<span class=\"title function_\">save</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ctx.<span class=\"property\">status</span> = <span class=\"number\">204</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/routes/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">    find, findById, create, update,</span><br><span class=\"line\">    <span class=\"attr\">delete</span>: del, login, checkOwner,</span><br><span class=\"line\">    listFollowing, follow</span><br><span class=\"line\">&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../controllers/users&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/:id/following&#x27;</span>, listFollowing);</span><br><span class=\"line\">router.<span class=\"title function_\">put</span>(<span class=\"string\">&#x27;/following/:id&#x27;</span>, auth, follow);</span><br></pre></td></tr></table></figure>\n<h3 id=\"11-4-restful-风格的关注与粉丝接口（下）\">11-4 RESTful 风格的关注与粉丝接口（下）<a title=\"#11-4-restful-风格的关注与粉丝接口（下）\" href=\"#11-4-restful-风格的关注与粉丝接口（下）\"></a></h3>\n<p>取消关注</p>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">unfollow</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> me = <span class=\"keyword\">await</span> <span class=\"title class_\">User</span>.<span class=\"title function_\">findById</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>).<span class=\"title function_\">select</span>(<span class=\"string\">&#x27;+following&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> index = me.<span class=\"property\">following</span>.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">id</span> =&gt;</span> id.<span class=\"title function_\">toString</span>()).<span class=\"title function_\">indexOf</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(index &gt; -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        me.<span class=\"property\">following</span>.<span class=\"title function_\">splice</span>(index, <span class=\"number\">1</span>);</span><br><span class=\"line\">        me.<span class=\"title function_\">save</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ctx.<span class=\"property\">status</span> = <span class=\"number\">204</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/routes/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">    find, findById, create, update,</span><br><span class=\"line\">    <span class=\"attr\">delete</span>: del, login, checkOwner,</span><br><span class=\"line\">    listFollowing, follow, unfollow</span><br><span class=\"line\">&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../controllers/users&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">delete</span>(<span class=\"string\">&#x27;/following/:id&#x27;</span>, auth, unfollow);</span><br></pre></td></tr></table></figure>\n<p>获取粉丝</p>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">listFollowers</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> users = <span class=\"keyword\">await</span> <span class=\"title class_\">User</span>.<span class=\"title function_\">find</span>(&#123; <span class=\"attr\">following</span>: ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span> &#125;);</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = users;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/routes/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">    find, findById, create, update,</span><br><span class=\"line\">    <span class=\"attr\">delete</span>: del, login, checkOwner,</span><br><span class=\"line\">    listFollowing, listFollowers,</span><br><span class=\"line\">    follow, unfollow</span><br><span class=\"line\">&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../controllers/users&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/:id/followers&#x27;</span>, listFollowers);</span><br></pre></td></tr></table></figure>\n<h3 id=\"11-5-编写校验用户存在与否的中间件\">11-5 编写校验用户存在与否的中间件<a title=\"#11-5-编写校验用户存在与否的中间件\" href=\"#11-5-编写校验用户存在与否的中间件\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>编写校验用户存在与否的中间件</li>\n<li>使用Postman测试</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">checkUserExist</span>(<span class=\"params\">ctx, next</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> user = <span class=\"keyword\">await</span> <span class=\"title class_\">User</span>.<span class=\"title function_\">findById</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!user) &#123; ctx.<span class=\"keyword\">throw</span>(<span class=\"number\">404</span>, <span class=\"string\">&#x27;用户不存在&#x27;</span>); &#125;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">next</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/routes/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">    find, findById, create, update,</span><br><span class=\"line\">    <span class=\"attr\">delete</span>: del, login, checkOwner,</span><br><span class=\"line\">    listFollowing, listFollowers,</span><br><span class=\"line\">    checkUserExist, follow, unfollow</span><br><span class=\"line\">&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../controllers/users&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">put</span>(<span class=\"string\">&#x27;/following/:id&#x27;</span>, auth, checkUserExist, follow);</span><br><span class=\"line\">router.<span class=\"title function_\">delete</span>(<span class=\"string\">&#x27;/following/:id&#x27;</span>, auth, checkUserExist, unfollow);</span><br></pre></td></tr></table></figure>\n<h2 id=\"第12章-项目实战之话题模块（足够完整！！）\">第12章 项目实战之话题模块（足够完整！！）<a title=\"#第12章-项目实战之话题模块（足够完整！！）\" href=\"#第12章-项目实战之话题模块（足够完整！！）\"></a></h2>\n<blockquote>\n<p>本章主要围绕话题功能模块进行讲解，包括话题模块本身和用户属性中的话题引用。覆盖多个比如分页、模糊搜索等等的 RESTful API最佳实践，还包括了数据库引用的实践哦~</p>\n</blockquote>\n<h3 id=\"12-1-话题模块需求分析\">12-1 话题模块需求分析<a title=\"#12-1-话题模块需求分析\" href=\"#12-1-话题模块需求分析\"></a></h3>\n<p>话题模块功能点</p>\n<ul>\n<li>话题的<strong>增改查</strong></li>\n<li>分页、模糊搜索</li>\n<li>用户属性中的话题引用</li>\n<li>关注/取消关注话题、用户关注的话题列表</li>\n</ul>\n<h3 id=\"12-2-restful-风格的话题增改查接口（上）\">12-2 RESTful 风格的话题增改查接口（上）<a title=\"#12-2-restful-风格的话题增改查接口（上）\" href=\"#12-2-restful-风格的话题增改查接口（上）\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>设计Schema</li>\n<li>实现RESTful风格的增改查接口</li>\n<li>使用Postman测试</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><figcaption><span>/app/models/topics.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mongoose&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"title class_\">Schema</span>, model &#125; = mongoose;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> topicSchema = <span class=\"keyword\">new</span> <span class=\"title class_\">Schema</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">__v</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">avatar_url</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">required</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">introduction</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title function_\">model</span>(<span class=\"string\">&#x27;Topic&#x27;</span>, topicSchema);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/topics.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Topics</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../models/topics&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">TopicCtl</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"title function_\">find</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">        ctx.<span class=\"property\">body</span> = <span class=\"keyword\">await</span> <span class=\"title class_\">Topic</span>.<span class=\"title function_\">find</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"title function_\">findById</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> &#123; fields = <span class=\"string\">&#x27;&#x27;</span> &#125; = ctx.<span class=\"property\">query</span>;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> selectFields = fields.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;;&#x27;</span>).<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">f</span> =&gt;</span> f).<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">f</span> =&gt;</span> <span class=\"string\">&#x27; +&#x27;</span> + f).<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> topic = <span class=\"keyword\">await</span> <span class=\"title class_\">Topic</span>.<span class=\"title function_\">findById</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>).<span class=\"title function_\">select</span>(selectFields);</span><br><span class=\"line\">        <span class=\"comment\">// if (!topic) &#123; ctx.throw(404, &#x27;用户不存在&#x27;); &#125;</span></span><br><span class=\"line\">        ctx.<span class=\"property\">body</span> = topic;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"title function_\">create</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">        ctx.<span class=\"title function_\">verifyParams</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">name</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">            <span class=\"attr\">avatar_url</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">            <span class=\"attr\">introduction</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">false</span> &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> topic = <span class=\"keyword\">await</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Topic</span>(ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>).<span class=\"title function_\">save</span>();</span><br><span class=\"line\">        ctx.<span class=\"property\">body</span> = topic;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"title function_\">update</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">        ctx.<span class=\"title function_\">verifyParams</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">name</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">            <span class=\"attr\">avatar_url</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">            <span class=\"attr\">introduction</span>: &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;string&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">false</span> &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> topic = <span class=\"keyword\">await</span> <span class=\"title class_\">Topic</span>.<span class=\"title function_\">findByIdAndUpdate</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>, ctx.<span class=\"property\">request</span>.<span class=\"property\">body</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!topic) &#123; ctx.<span class=\"keyword\">throw</span>(<span class=\"number\">404</span>, <span class=\"string\">&#x27;用户不存在&#x27;</span>); &#125;</span><br><span class=\"line\">        ctx.<span class=\"property\">body</span> = topic;   <span class=\"comment\">// 这里的topic是更新前的</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">TopicCtl</span>();</span><br></pre></td></tr></table></figure>\n<h3 id=\"12-3-restful-风格的话题增改查接口（下）\">12-3 RESTful 风格的话题增改查接口（下）<a title=\"#12-3-restful-风格的话题增改查接口（下）\" href=\"#12-3-restful-风格的话题增改查接口（下）\"></a></h3>\n<figure class=\"highlight js\"><figcaption><span>/app/routes/topics.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> jwt = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-jwt&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Router</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa-router&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> <span class=\"title class_\">Router</span>(&#123; <span class=\"attr\">prefix</span>: <span class=\"string\">&#x27;/topics&#x27;</span> &#125;);</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">    find, findById, create, update</span><br><span class=\"line\">&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../controllers/topics&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; secret &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../config&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> auth = <span class=\"title function_\">jwt</span>(&#123; secret &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, find);</span><br><span class=\"line\">router.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/&#x27;</span>, auth, create);</span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, findById);</span><br><span class=\"line\">router.<span class=\"title function_\">patch</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, auth, update);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = router;</span><br></pre></td></tr></table></figure>\n<h3 id=\"12-4-restful-api-最佳实践——分页\">12-4 RESTful API 最佳实践——分页<a title=\"#12-4-restful-api-最佳实践——分页\" href=\"#12-4-restful-api-最佳实践——分页\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>实现分页逻辑</li>\n<li>使用Postman测试</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/topics.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">find</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; per_page = <span class=\"number\">10</span> &#125; = ctx.<span class=\"property\">query</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> page = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(ctx.<span class=\"property\">query</span>.<span class=\"property\">page</span> * <span class=\"number\">1</span>, <span class=\"number\">1</span>) - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> perPage = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(per_page * <span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = <span class=\"keyword\">await</span> <span class=\"title class_\">Topic</span>.<span class=\"title function_\">find</span>().<span class=\"title function_\">limit</span>(perPage).<span class=\"title function_\">skip</span>(page * perPage);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>照搬到用户</p>\n<h3 id=\"12-5-restful-api-最佳实践——模糊搜索\">12-5 RESTful API 最佳实践——模糊搜索<a title=\"#12-5-restful-api-最佳实践——模糊搜索\" href=\"#12-5-restful-api-最佳实践——模糊搜索\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>实现模糊搜索逻辑</li>\n<li>使用Postman测试</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/topics.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">find</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; per_page = <span class=\"number\">10</span> &#125; = ctx.<span class=\"property\">query</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> page = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(ctx.<span class=\"property\">query</span>.<span class=\"property\">page</span> * <span class=\"number\">1</span>, <span class=\"number\">1</span>) - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> perPage = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(per_page * <span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = <span class=\"keyword\">await</span> <span class=\"title class_\">Topic</span></span><br><span class=\"line\">        .<span class=\"title function_\">find</span>(&#123; <span class=\"attr\">name</span>: <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(ctx.<span class=\"property\">query</span>.<span class=\"property\">q</span>) &#125;)</span><br><span class=\"line\">        .<span class=\"title function_\">limit</span>(perPage).<span class=\"title function_\">skip</span>(page * perPage);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"12-6-用户属性中的话题引用\">12-6 用户属性中的话题引用<a title=\"#12-6-用户属性中的话题引用\" href=\"#12-6-用户属性中的话题引用\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>使用话题引用替代部分用户属性</li>\n<li>使用Postman测试</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><figcaption><span>/app/models/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mongoose&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"title class_\">Schema</span>, model &#125; = mongoose;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> userSchema = <span class=\"keyword\">new</span> <span class=\"title class_\">Schema</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">__v</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">password</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">avatar_url</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">gender</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">enum</span>: [<span class=\"string\">&#x27;male&#x27;</span>, <span class=\"string\">&#x27;female&#x27;</span>], <span class=\"attr\">default</span>: <span class=\"string\">&#x27;male&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">headline</span>:  &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">locations</span>: &#123; <span class=\"attr\">type</span>: [&#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Schema</span>.<span class=\"property\">Types</span>.<span class=\"property\">ObjectId</span>, <span class=\"attr\">ref</span>: <span class=\"string\">&#x27;Topic&#x27;</span> &#125;], <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">business</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Schema</span>.<span class=\"property\">Types</span>.<span class=\"property\">ObjectId</span>, <span class=\"attr\">ref</span>: <span class=\"string\">&#x27;Topic&#x27;</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">employments</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: [&#123;</span><br><span class=\"line\">            <span class=\"attr\">company</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Schema</span>.<span class=\"property\">Types</span>.<span class=\"property\">ObjectId</span>, <span class=\"attr\">ref</span>: <span class=\"string\">&#x27;Topic&#x27;</span>, &#125;,</span><br><span class=\"line\">            <span class=\"attr\">job</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Schema</span>.<span class=\"property\">Types</span>.<span class=\"property\">ObjectId</span>, <span class=\"attr\">ref</span>: <span class=\"string\">&#x27;Topic&#x27;</span>, &#125;</span><br><span class=\"line\">        &#125;],</span><br><span class=\"line\">        <span class=\"attr\">select</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">educations</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: [&#123;</span><br><span class=\"line\">            <span class=\"attr\">school</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Schema</span>.<span class=\"property\">Types</span>.<span class=\"property\">ObjectId</span>, <span class=\"attr\">ref</span>: <span class=\"string\">&#x27;Topic&#x27;</span>, &#125;,</span><br><span class=\"line\">            <span class=\"attr\">major</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Schema</span>.<span class=\"property\">Types</span>.<span class=\"property\">ObjectId</span>, <span class=\"attr\">ref</span>: <span class=\"string\">&#x27;Topic&#x27;</span>, &#125;,</span><br><span class=\"line\">            <span class=\"attr\">diploma</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span>, <span class=\"attr\">enum</span>: [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>] &#125;,</span><br><span class=\"line\">            <span class=\"attr\">entrance_year</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span> &#125;,</span><br><span class=\"line\">            <span class=\"attr\">graduation_year</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span> &#125;</span><br><span class=\"line\">        &#125;],</span><br><span class=\"line\">        <span class=\"attr\">select</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">following</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: [&#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Schema</span>.<span class=\"property\">Types</span>.<span class=\"property\">ObjectId</span>, <span class=\"attr\">ref</span>: <span class=\"string\">&#x27;User&#x27;</span> &#125;],</span><br><span class=\"line\">        <span class=\"attr\">select</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title function_\">model</span>(<span class=\"string\">&#x27;User&#x27;</span>, userSchema);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">findById</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; fields &#125; = ctx.<span class=\"property\">query</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> selectFields = fields.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;;&#x27;</span>).<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">f</span> =&gt;</span> f).<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">f</span> =&gt;</span> <span class=\"string\">&#x27; +&#x27;</span> + f).<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> populateStr = fields.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;;&#x27;</span>).<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">f</span> =&gt;</span> f).<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">f</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(f === <span class=\"string\">&#x27;employments&#x27;</span>) &#123; <span class=\"keyword\">return</span> <span class=\"string\">&#x27;employments.company employments.job&#x27;</span> &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(f === <span class=\"string\">&#x27;education&#x27;</span>) &#123; <span class=\"keyword\">return</span> <span class=\"string\">&#x27;education.school education.major&#x27;</span> &#125;</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">join</span>(<span class=\"string\">&#x27; &#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> user = <span class=\"keyword\">await</span> <span class=\"title class_\">User</span>.<span class=\"title function_\">findById</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>).<span class=\"title function_\">select</span>(selectFields)</span><br><span class=\"line\">        .<span class=\"title function_\">populate</span>(populateStr);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!user) &#123; ctx.<span class=\"keyword\">throw</span>(<span class=\"number\">404</span>, <span class=\"string\">&#x27;用户不存在&#x27;</span>); &#125;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = user;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"12-7-restful-风格的关注话题接口（上）\">12-7 RESTful 风格的关注话题接口（上）<a title=\"#12-7-restful-风格的关注话题接口（上）\" href=\"#12-7-restful-风格的关注话题接口（上）\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>实现关注话题逻辑（用户-话题多对多关系）</li>\n<li>使用Postman测试</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><figcaption><span>/app/models/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> userSchema = <span class=\"keyword\">new</span> <span class=\"title class_\">Schema</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">followingTopics</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: [&#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Schema</span>.<span class=\"property\">Types</span>.<span class=\"property\">ObjectId</span>, <span class=\"attr\">ref</span>: <span class=\"string\">&#x27;Topic&#x27;</span> &#125;],</span><br><span class=\"line\">        <span class=\"attr\">select</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">checkTopicExist</span>(<span class=\"params\">ctx, next</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> topic = <span class=\"keyword\">await</span> <span class=\"title class_\">Topic</span>.<span class=\"title function_\">findById</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!topic) &#123; ctx.<span class=\"keyword\">throw</span>(<span class=\"number\">404</span>, <span class=\"string\">&#x27;话题不存在&#x27;</span>); &#125;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">next</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">listFollowingTopics</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> user = <span class=\"keyword\">await</span> <span class=\"title class_\">Topic</span>.<span class=\"title function_\">findById</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>).<span class=\"title function_\">select</span>(<span class=\"string\">&#x27;+followingTopics&#x27;</span>).<span class=\"title function_\">populate</span>(<span class=\"string\">&#x27;followingTopics&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!user) &#123; ctx.<span class=\"keyword\">throw</span>(<span class=\"number\">404</span>, <span class=\"string\">&#x27;用户不存在&#x27;</span>); &#125;</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = user.<span class=\"property\">followingTopics</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">followTopic</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> me = <span class=\"keyword\">await</span> <span class=\"title class_\">User</span>.<span class=\"title function_\">findById</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>).<span class=\"title function_\">select</span>(<span class=\"string\">&#x27;+followingTopics&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!me.<span class=\"property\">followingTopics</span>.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">id</span> =&gt;</span> id.<span class=\"title function_\">toString</span>()).<span class=\"title function_\">includes</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>)) &#123;</span><br><span class=\"line\">        me.<span class=\"property\">followingTopics</span>.<span class=\"title function_\">push</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>);</span><br><span class=\"line\">        me.<span class=\"title function_\">save</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ctx.<span class=\"property\">status</span> = <span class=\"number\">204</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">unfollowTopic</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> me = <span class=\"keyword\">await</span> <span class=\"title class_\">User</span>.<span class=\"title function_\">findById</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>).<span class=\"title function_\">select</span>(<span class=\"string\">&#x27;+followingTopics&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> index = me.<span class=\"property\">followingTopics</span>.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">id</span> =&gt;</span> id.<span class=\"title function_\">toString</span>()).<span class=\"title function_\">indexOf</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(index &gt; -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        me.<span class=\"property\">followingTopics</span>.<span class=\"title function_\">splice</span>(index, <span class=\"number\">1</span>);</span><br><span class=\"line\">        me.<span class=\"title function_\">save</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ctx.<span class=\"property\">status</span> = <span class=\"number\">204</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/routes/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">    find, findById, create, update,</span><br><span class=\"line\">    <span class=\"attr\">delete</span>: del, login, checkOwner,</span><br><span class=\"line\">    listFollowing, listFollowers,</span><br><span class=\"line\">    checkUserExist, follow, unfollow,</span><br><span class=\"line\">    followTopic, unfollowTopic</span><br><span class=\"line\">&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../controllers/users&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; checkTopicExist &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../controllers/topics&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/:id/followingTopics&#x27;</span>, followingTopics);</span><br><span class=\"line\">router.<span class=\"title function_\">put</span>(<span class=\"string\">&#x27;/followingTopics/:id&#x27;</span>, auth, checkTopicExist, follow);</span><br><span class=\"line\">router.<span class=\"title function_\">delete</span>(<span class=\"string\">&#x27;/followingTopics/:id&#x27;</span>, auth, checkTopicExist, unfollow);</span><br></pre></td></tr></table></figure>\n<h3 id=\"12-8-restful-风格的关注话题接口（下）\">12-8 RESTful 风格的关注话题接口（下）<a title=\"#12-8-restful-风格的关注话题接口（下）\" href=\"#12-8-restful-风格的关注话题接口（下）\"></a></h3>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/topics.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">listFollowers</span>(<span class=\"params\">ctx</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> users = <span class=\"keyword\">await</span> <span class=\"title class_\">User</span>.<span class=\"title function_\">find</span>(&#123; <span class=\"attr\">followingTopics</span>: ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span> &#125;);</span><br><span class=\"line\">    ctx.<span class=\"property\">body</span> = users;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/routes/topics.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Topics</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../models/topics&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">Users</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../models/users&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">    find, findById, create, update,</span><br><span class=\"line\">    checkTopicExist, listFollowers</span><br><span class=\"line\">&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../controllers/topics&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, find);</span><br><span class=\"line\">router.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/&#x27;</span>, auth, create);</span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, checkTopicExist, findById);</span><br><span class=\"line\">router.<span class=\"title function_\">patch</span>(<span class=\"string\">&#x27;/:id&#x27;</span>, auth, checkTopicExist, update);</span><br><span class=\"line\">router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/:id/followers&#x27;</span>, checkTopicExist, listFollowers);</span><br></pre></td></tr></table></figure>\n<h2 id=\"第13章-项目实战之问题模块-——-复杂的数据库设计\">第13章 项目实战之问题模块 —— 复杂的数据库设计<a title=\"#第13章-项目实战之问题模块-——-复杂的数据库设计\" href=\"#第13章-项目实战之问题模块-——-复杂的数据库设计\"></a></h2>\n<blockquote>\n<p>本章主要围绕问题模块进行展开。通过问题模块的实现，来学习数据库中的一对多和多对多关系的设计与实现，带你逐步深入到数据库的复杂设计中。</p>\n</blockquote>\n<h3 id=\"13-1-问题模块需求分析\">13-1 问题模块需求分析<a title=\"#13-1-问题模块需求分析\" href=\"#13-1-问题模块需求分析\"></a></h3>\n<p>问题模块功能点</p>\n<ul>\n<li>问题的增删改查</li>\n<li>用户的问题列表（用户-问题一对多关系）</li>\n<li>话题的问题列表+问题的话题列表（话题-问题多对多关系）</li>\n<li>关注/取消关注问题</li>\n</ul>\n<h3 id=\"13-2-用户-问题一对多关系设计与实现\">13-2 用户-问题一对多关系设计与实现<a title=\"#13-2-用户-问题一对多关系设计与实现\" href=\"#13-2-用户-问题一对多关系设计与实现\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>实现增删改查接口</li>\n<li>实现用户的问题列表接口</li>\n<li>使用Postman测试</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><figcaption><span>/app/models/topics.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mongoose&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"title class_\">Schema</span>, model &#125; = mongoose;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> questionSchema = <span class=\"keyword\">new</span> <span class=\"title class_\">Schema</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">__v</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">title</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">discription</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span> &#125;,</span><br><span class=\"line\">    <span class=\"attr\">questioner</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Schema</span>.<span class=\"property\">Types</span>.<span class=\"property\">ObjectId</span>, <span class=\"attr\">ref</span>: <span class=\"string\">&#x27;User&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title function_\">model</span>(<span class=\"string\">&#x27;Question&#x27;</span>, questionSchema);</span><br></pre></td></tr></table></figure>\n<h3 id=\"13-3-话题-问题多对多关系设计与实现\">13-3 话题-问题多对多关系设计与实现<a title=\"#13-3-话题-问题多对多关系设计与实现\" href=\"#13-3-话题-问题多对多关系设计与实现\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>实现问题的话题列表接口</li>\n<li>实现话题的问题列表接口</li>\n<li>使用Postman测试</li>\n</ul>\n</blockquote>\n<h2 id=\"第14章-项目实战之答案模块-——-更复杂的数据库设计\">第14章 项目实战之答案模块 —— 更复杂的数据库设计<a title=\"#第14章-项目实战之答案模块-——-更复杂的数据库设计\" href=\"#第14章-项目实战之答案模块-——-更复杂的数据库设计\"></a></h2>\n<blockquote>\n<p>本章主要围绕答案模块进行讲解。覆盖了 RESTful API 最佳实践 —— 嵌套路由、互斥接口的实现等内容，并且讲解了二级嵌套关系中的增删改查接口的实现。</p>\n</blockquote>\n<h3 id=\"14-1-答案模块需求分析\">14-1 答案模块需求分析<a title=\"#14-1-答案模块需求分析\" href=\"#14-1-答案模块需求分析\"></a></h3>\n<p>答案模块功能点</p>\n<ul>\n<li>答案的增删改查</li>\n<li>问题答案/用户-答案一对多</li>\n<li>赞/踩答案</li>\n<li>收藏答案</li>\n</ul>\n<h3 id=\"14-2-问题-答案模块二级嵌套的增删改查接口\">14-2 问题-答案模块二级嵌套的增删改查接口<a title=\"#14-2-问题-答案模块二级嵌套的增删改查接口\" href=\"#14-2-问题-答案模块二级嵌套的增删改查接口\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>设计数据库Schema</li>\n<li>实现增删改查接口</li>\n<li>使用Postman测试</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><figcaption><span>/app/models/answers.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> answerSchema = <span class=\"keyword\">new</span> <span class=\"title class_\">Schema</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">__v</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">  <span class=\"attr\">content</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">  <span class=\"attr\">answerer</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">Schema</span>.<span class=\"property\">Types</span>.<span class=\"property\">ObjectId</span>, <span class=\"attr\">ref</span>: <span class=\"string\">&#x27;User&#x27;</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span>, <span class=\"attr\">select</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">  <span class=\"attr\">questionId</span>: &#123; <span class=\"attr\">type</span>: <span class=\"title class_\">String</span>, <span class=\"attr\">required</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>/app/controllers/answers.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">checkAnswerExist</span>(<span class=\"params\">ctx, next</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> answer = <span class=\"keyword\">await</span> <span class=\"title class_\">Answer</span>.<span class=\"title function_\">findById</span>(ctx.<span class=\"property\">params</span>.<span class=\"property\">id</span>).<span class=\"title function_\">select</span>(<span class=\"string\">&#x27;+answerer&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!answer) &#123; ctx.<span class=\"keyword\">throw</span>(<span class=\"number\">404</span>, <span class=\"string\">&#x27;答案不存在&#x27;</span>); &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ctx.<span class=\"property\">params</span>.<span class=\"property\">questionId</span> !== answer.<span class=\"property\">questionId</span>) &#123;</span><br><span class=\"line\">        ctx.<span class=\"keyword\">throw</span>(<span class=\"number\">404</span>, <span class=\"string\">&#x27;该问题下没有此答案&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ctx.<span class=\"property\">state</span>.<span class=\"property\">answer</span> = answer;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">next</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"14-3-互斥关系的赞踩答案接口设计与实现\">14-3 互斥关系的赞踩答案接口设计与实现<a title=\"#14-3-互斥关系的赞踩答案接口设计与实现\" href=\"#14-3-互斥关系的赞踩答案接口设计与实现\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>设计数据库Schema</li>\n<li>实现接口</li>\n<li>使用Postman测试</li>\n</ul>\n</blockquote>\n<figure class=\"highlight js\"><figcaption><span>/app/routes/users.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.<span class=\"title function_\">put</span>(<span class=\"string\">&#x27;/likingAnswers/:id&#x27;</span>, auth, checkAnswerExist, likeAnswer, undislikeAnswer);</span><br></pre></td></tr></table></figure>\n<h3 id=\"14-4-restful-风格的收藏答案接口\">14-4 RESTful 风格的收藏答案接口<a title=\"#14-4-restful-风格的收藏答案接口\" href=\"#14-4-restful-风格的收藏答案接口\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>设计数据库Schema</li>\n<li>实现接口</li>\n<li>使用Postman测试</li>\n</ul>\n</blockquote>\n<h2 id=\"第15章-项目实战之评论模块-——-最复杂的数据库设计\">第15章 项目实战之评论模块 —— 最复杂的数据库设计<a title=\"#第15章-项目实战之评论模块-——-最复杂的数据库设计\" href=\"#第15章-项目实战之评论模块-——-最复杂的数据库设计\"></a></h2>\n<blockquote>\n<p>本章主要围绕评论模块的设计与实现进行学习。其中，包括了最复杂的三级嵌套接口的设计与实现，还有有关一级评论、二级评论的设计与实现等内容。</p>\n</blockquote>\n<h3 id=\"15-1-评论模块需求分析\">15-1 评论模块需求分析<a title=\"#15-1-评论模块需求分析\" href=\"#15-1-评论模块需求分析\"></a></h3>\n<p>评论模块功能点</p>\n<ul>\n<li>评论的增删改查</li>\n<li>答案/问题/用户-评论一对多</li>\n<li>一级评论与二级评论</li>\n<li>赞/踩评论</li>\n</ul>\n<h3 id=\"15-2-问题-答案-评论模块三级嵌套的增删改查接口\">15-2 问题-答案-评论模块三级嵌套的增删改查接口<a title=\"#15-2-问题-答案-评论模块三级嵌套的增删改查接口\" href=\"#15-2-问题-答案-评论模块三级嵌套的增删改查接口\"></a></h3>\n<h3 id=\"15-3-一级评论与二级评论接口的设计与实现\">15-3 一级评论与二级评论接口的设计与实现<a title=\"#15-3-一级评论与二级评论接口的设计与实现\" href=\"#15-3-一级评论与二级评论接口的设计与实现\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>设计数据库 Schema</li>\n<li>实现接口</li>\n<li>使用Postman测试</li>\n</ul>\n</blockquote>\n<h3 id=\"15-4-添加日期\">15-4 添加日期<a title=\"#15-4-添加日期\" href=\"#15-4-添加日期\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>设计数据库 Schema</li>\n<li>实现接口</li>\n<li>使用Postman测试</li>\n</ul>\n</blockquote>\n<h2 id=\"第16章-丑媳妇终要见公婆：项目上线、部署与配置\">第16章 丑媳妇终要见公婆：项目上线、部署与配置<a title=\"#第16章-丑媳妇终要见公婆：项目上线、部署与配置\" href=\"#第16章-丑媳妇终要见公婆：项目上线、部署与配置\"></a></h2>\n<blockquote>\n<p>本章主要讲解如何将开发完成的项目部署到服务器上。其中，包括了服务器的环境搭建、用 Nginx 实现服务器端口的转发、PM2 管理服务进程等等这些内容。</p>\n</blockquote>\n<h3 id=\"16-1-在服务器上安装-git-与-node.js\">16-1 在服务器上安装 Git 与 Node.js<a title=\"#16-1-在服务器上安装-git-与-node.js\" href=\"#16-1-在服务器上安装-git-与-node.js\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>SSH 登录服务器</li>\n<li>安装Git，下载代码到服务器</li>\n<li>安装Node.js，运行程序</li>\n</ul>\n</blockquote>\n<h3 id=\"16-2-用-nginx-实现端口转发\">16-2 用 Nginx 实现端口转发<a title=\"#16-2-用-nginx-实现端口转发\" href=\"#16-2-用-nginx-实现端口转发\"></a></h3>\n<blockquote>\n<p>操作步骤</p>\n<ul>\n<li>安装Nginx</li>\n<li>配置Nginx，把外网80端口转到内网3000端口</li>\n<li>使用Postman测试外网接口</li>\n</ul>\n</blockquote>\n<p><code>nginx -t</code>显示配置文件位置并检查语法</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># include /etc/nginx/sites-enabled/*;</span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    server_name localhost;</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        proxy_pass http://127.0.0.1:3000;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>nginx -t</code></p>\n<p><code>service nginx restart</code> / <code>service nginx reload</code></p>\n<h3 id=\"16-3-使用-pm2-管理进程\">16-3 使用 PM2 管理进程<a title=\"#16-3-使用-pm2-管理进程\" href=\"#16-3-使用-pm2-管理进程\"></a></h3>\n<p><code>npm i pm2 -g</code></p>\n<p><code>pm2 start/restart/reload/stop app</code></p>\n<p><code>NODE_ENV=production pm2 start app --update-env</code></p>\n<h2 id=\"第17章-使人进步的基石：回顾与总结\">第17章 使人进步的基石：回顾与总结<a title=\"#第17章-使人进步的基石：回顾与总结\" href=\"#第17章-使人进步的基石：回顾与总结\"></a></h2>\n<blockquote>\n<p>最后一章带着大家把整个课程回顾一遍，尤其是重难点，技术点。最后总结经验、心得以及扩展建议等等。</p>\n</blockquote>\n<h3 id=\"17-1-回顾与总结\">17-1 回顾与总结<a title=\"#17-1-回顾与总结\" href=\"#17-1-回顾与总结\"></a></h3>\n<ul>\n<li>课程回顾\n<ul>\n<li>REST理论与最佳实践</li>\n<li>Koa2、MongoDB、JWT 简介与实践</li>\n<li>仿知乎RESTAPI实战</li>\n</ul>\n</li>\n<li>重点难点\n<ul>\n<li>REST理论与实践</li>\n<li>JWT原理及Node.js实现</li>\n<li>MongoDB Schema设计</li>\n</ul>\n</li>\n<li>经验心得\n<ul>\n<li>RESTful API设计参考GitHub API v3</li>\n<li>使用GitHub搜索Koa2资源</li>\n<li>使用Stack Overflow搜索问题</li>\n</ul>\n</li>\n<li>拓展建议\n<ul>\n<li>使用企业级Node.js框架一Egg.js</li>\n<li>掌握多进程编程知识</li>\n<li>学习使用日志和性能监控</li>\n</ul>\n</li>\n</ul>\n","prev":{"title":"“平安报”自动化 - win篇","link":"2020/09/19/ustb_checkIn_win"},"next":{"title":"Getting Things Done","link":"2020/06/09/share_GTD"},"plink":"https://vincenteliang.com/2020/06/28/imooc_354/","toc":[{"id":"第1章-学习之前要告诉你的","title":"第1章 学习之前要告诉你的","index":"1","children":[{"id":"1-1-关于这门课程你想知道的都在这一节里面了","title":"1-1 关于这门课程你想知道的都在这一节里面了","index":"1.1"}]},{"id":"第2章-跟着-github-认识-restful-api","title":"第2章 跟着 GitHub 认识 RESTful API","index":"2","children":[{"id":"2-1-rest-是什么以及它的-6-个限制","title":"2-1 REST 是什么以及它的 6 个限制","index":"2.1"},{"id":"2-2-统一接口的限制","title":"2-2 统一接口的限制","index":"2.2"},{"id":"2-3-restful-api-简介","title":"2-3 RESTful API 简介","index":"2.3"},{"id":"2-4-restful-api-设计最佳实践","title":"2-4 RESTful API 设计最佳实践","index":"2.4"}]},{"id":"第3章-用-koa-说-hello-world","title":"第3章 用 Koa 说 Hello World","index":"3","children":[{"id":"3-1-koa-简介","title":"3-1 Koa 简介","index":"3.1"},{"id":"3-2-安装搭建第一个-koa-程序","title":"3-2 安装搭建第一个 Koa 程序","index":"3.2"},{"id":"3-3-koa-中间件与洋葱模型","title":"3-3 Koa 中间件与洋葱模型","index":"3.3"}]},{"id":"第4章-koa-框架的路由与-restful-api-最佳实践","title":"第4章 Koa 框架的路由与 RESTful API 最佳实践","index":"4","children":[{"id":"4-1-路由简介","title":"4-1 路由简介","index":"4.1"},{"id":"4-2-自己编写-koa-路由中间件","title":"4-2 自己编写 Koa 路由中间件","index":"4.2"},{"id":"4-3-使用-koa-router-实现路由","title":"4-3 使用 koa-router 实现路由","index":"4.3"},{"id":"4-4-http-options-方法的作用是什么","title":"4-4 HTTP options 方法的作用是什么","index":"4.4"},{"id":"4-5-restful-api-最佳实践——增删改查应该返回什么响应","title":"4-5 RESTful API 最佳实践——增删改查应该返回什么响应","index":"4.5"}]},{"id":"第5章-koa-框架的控制器以及设计更合理的目录结构","title":"第5章 Koa 框架的控制器以及设计更合理的目录结构","index":"5","children":[{"id":"5-1-控制器简介","title":"5-1 控制器简介","index":"5.1"},{"id":"5-2-获取-http-请求参数","title":"5-2 获取 HTTP 请求参数","index":"5.2"},{"id":"5-3-发送-http-响应","title":"5-3 发送 HTTP 响应","index":"5.3"},{"id":"5-4-更合理的目录结构","title":"5-4 更合理的目录结构","index":"5.4"}]},{"id":"第6章-多种方案实现错误处理机制","title":"第6章 多种方案实现错误处理机制","index":"6","children":[{"id":"6-1-错误处理简介","title":"6-1 错误处理简介","index":"6.1"},{"id":"6-2-koa-自带的错误处理","title":"6-2 Koa 自带的错误处理","index":"6.2"},{"id":"6-3-自己编写错误处理中间件","title":"6-3 自己编写错误处理中间件","index":"6.3"},{"id":"6-4-使用-koa-json-error-进行错误处理","title":"6-4 使用 koa-json-error 进行错误处理","index":"6.4"},{"id":"6-5-使用-koa-parameter-校验参数","title":"6-5 使用 koa-parameter 校验参数","index":"6.5"}]},{"id":"第7章-第一批用户入库啦~~","title":"第7章 第一批用户入库啦~~","index":"7","children":[{"id":"7-1-nosql-简介","title":"7-1 NoSQL 简介","index":"7.1"},{"id":"7-2-mongodb-简介","title":"7-2 MongoDB 简介","index":"7.2"},{"id":"7-3-云数据库——mongodb-atlas","title":"7-3 云数据库——MongoDB Atlas","index":"7.3"},{"id":"7-4-使用-mongoose-连接-mongodb","title":"7-4 使用 Mongoose 连接 MongoDB","index":"7.4"},{"id":"7-5-设计用户模块的-schema","title":"7-5 设计用户模块的 Schema","index":"7.5"},{"id":"7-6-用-mongodb-实现用户的增删改查","title":"7-6 用 MongoDB 实现用户的增删改查","index":"7.6"}]},{"id":"第8章-jwt-在-koa-框架中实现用户的认证与授权","title":"第8章 JWT 在 Koa 框架中实现用户的认证与授权","index":"8","children":[{"id":"8-1-session-简介","title":"8-1 Session 简介","index":"8.1"},{"id":"8-2-jwt-简介","title":"8-2 JWT 简介","index":"8.2"},{"id":"8-3-jwt-vs.-session","title":"8-3 JWT vs. Session","index":"8.3"},{"id":"8-4-在-node.js-中使用-jwt","title":"8-4 在 Node.js 中使用 JWT","index":"8.4"},{"id":"8-5-实现用户注册","title":"8-5 实现用户注册","index":"8.5"},{"id":"8-6-实现登录并获取-token","title":"8-6 实现登录并获取 Token","index":"8.6"},{"id":"8-7-自己编写-koa-中间件实现用户认证与授权","title":"8-7 自己编写 Koa 中间件实现用户认证与授权","index":"8.7"},{"id":"8-8-用-koa-jwt-中间件实现用户认证与授权","title":"8-8 用 koa-jwt 中间件实现用户认证与授权","index":"8.8"}]},{"id":"第9章-项目实战之上传图片模块","title":"第9章 项目实战之上传图片模块","index":"9","children":[{"id":"9-1-上传图片需求分析","title":"9-1 上传图片需求分析","index":"9.1"},{"id":"9-2-使用-koa-body-中间件获取上传的文件","title":"9-2 使用 koa-body 中间件获取上传的文件","index":"9.2"},{"id":"9-3-使用-koa-static-中间件生成图片链接","title":"9-3 使用 koa-static 中间件生成图片链接","index":"9.3"},{"id":"9-4-编写前端页面上传文件","title":"9-4 编写前端页面上传文件","index":"9.4"}]},{"id":"第10章-项目实战之个人资料模块-——-学习处理复杂数据类型","title":"第10章 项目实战之个人资料模块 —— 学习处理复杂数据类型","index":"10","children":[{"id":"10-1-个人资料需求分析","title":"10-1 个人资料需求分析","index":"10.1"},{"id":"10-2-个人资料的-schema-设计","title":"10-2 个人资料的 schema 设计","index":"10.2"},{"id":"10-3-个人资料的参数校验","title":"10-3 个人资料的参数校验","index":"10.3"},{"id":"10-4-restful-api-最佳实践——字段过滤","title":"10-4 RESTful API 最佳实践——字段过滤","index":"10.4"}]},{"id":"第11章-项目实战之关注与粉丝模块","title":"第11章 项目实战之关注与粉丝模块","index":"11","children":[{"id":"11-1-关注与粉丝需求分析","title":"11-1 关注与粉丝需求分析","index":"11.1"},{"id":"11-2-关注与粉丝的-schema-设计","title":"11-2 关注与粉丝的 schema 设计","index":"11.2"},{"id":"11-3-restful-风格的关注与粉丝接口（上）","title":"11-3 RESTful 风格的关注与粉丝接口（上）","index":"11.3"},{"id":"11-4-restful-风格的关注与粉丝接口（下）","title":"11-4 RESTful 风格的关注与粉丝接口（下）","index":"11.4"},{"id":"11-5-编写校验用户存在与否的中间件","title":"11-5 编写校验用户存在与否的中间件","index":"11.5"}]},{"id":"第12章-项目实战之话题模块（足够完整！！）","title":"第12章 项目实战之话题模块（足够完整！！）","index":"12","children":[{"id":"12-1-话题模块需求分析","title":"12-1 话题模块需求分析","index":"12.1"},{"id":"12-2-restful-风格的话题增改查接口（上）","title":"12-2 RESTful 风格的话题增改查接口（上）","index":"12.2"},{"id":"12-3-restful-风格的话题增改查接口（下）","title":"12-3 RESTful 风格的话题增改查接口（下）","index":"12.3"},{"id":"12-4-restful-api-最佳实践——分页","title":"12-4 RESTful API 最佳实践——分页","index":"12.4"},{"id":"12-5-restful-api-最佳实践——模糊搜索","title":"12-5 RESTful API 最佳实践——模糊搜索","index":"12.5"},{"id":"12-6-用户属性中的话题引用","title":"12-6 用户属性中的话题引用","index":"12.6"},{"id":"12-7-restful-风格的关注话题接口（上）","title":"12-7 RESTful 风格的关注话题接口（上）","index":"12.7"},{"id":"12-8-restful-风格的关注话题接口（下）","title":"12-8 RESTful 风格的关注话题接口（下）","index":"12.8"}]},{"id":"第13章-项目实战之问题模块-——-复杂的数据库设计","title":"第13章 项目实战之问题模块 —— 复杂的数据库设计","index":"13","children":[{"id":"13-1-问题模块需求分析","title":"13-1 问题模块需求分析","index":"13.1"},{"id":"13-2-用户-问题一对多关系设计与实现","title":"13-2 用户-问题一对多关系设计与实现","index":"13.2"},{"id":"13-3-话题-问题多对多关系设计与实现","title":"13-3 话题-问题多对多关系设计与实现","index":"13.3"}]},{"id":"第14章-项目实战之答案模块-——-更复杂的数据库设计","title":"第14章 项目实战之答案模块 —— 更复杂的数据库设计","index":"14","children":[{"id":"14-1-答案模块需求分析","title":"14-1 答案模块需求分析","index":"14.1"},{"id":"14-2-问题-答案模块二级嵌套的增删改查接口","title":"14-2 问题-答案模块二级嵌套的增删改查接口","index":"14.2"},{"id":"14-3-互斥关系的赞踩答案接口设计与实现","title":"14-3 互斥关系的赞踩答案接口设计与实现","index":"14.3"},{"id":"14-4-restful-风格的收藏答案接口","title":"14-4 RESTful 风格的收藏答案接口","index":"14.4"}]},{"id":"第15章-项目实战之评论模块-——-最复杂的数据库设计","title":"第15章 项目实战之评论模块 —— 最复杂的数据库设计","index":"15","children":[{"id":"15-1-评论模块需求分析","title":"15-1 评论模块需求分析","index":"15.1"},{"id":"15-2-问题-答案-评论模块三级嵌套的增删改查接口","title":"15-2 问题-答案-评论模块三级嵌套的增删改查接口","index":"15.2"},{"id":"15-3-一级评论与二级评论接口的设计与实现","title":"15-3 一级评论与二级评论接口的设计与实现","index":"15.3"},{"id":"15-4-添加日期","title":"15-4 添加日期","index":"15.4"}]},{"id":"第16章-丑媳妇终要见公婆：项目上线、部署与配置","title":"第16章 丑媳妇终要见公婆：项目上线、部署与配置","index":"16","children":[{"id":"16-1-在服务器上安装-git-与-node.js","title":"16-1 在服务器上安装 Git 与 Node.js","index":"16.1"},{"id":"16-2-用-nginx-实现端口转发","title":"16-2 用 Nginx 实现端口转发","index":"16.2"},{"id":"16-3-使用-pm2-管理进程","title":"16-3 使用 PM2 管理进程","index":"16.3"}]},{"id":"第17章-使人进步的基石：回顾与总结","title":"第17章 使人进步的基石：回顾与总结","index":"17","children":[{"id":"17-1-回顾与总结","title":"17-1 回顾与总结","index":"17.1"}]}],"reward":true,"copyright":{"author":"Vincente Liang","link":"<a href=\"https://vincenteliang.com/2020/06/28/imooc_354/\" title=\"Node.js仿知乎服务端-深入理解RESTful API\">https://vincenteliang.com/2020/06/28/imooc_354/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"June 29, 2020","updated":"July 1, 2024"},"reading_time":"11678 words in 78 min"}