{"title":"从零开始搭建自己的大模型服务器","date":"2024-06-07T00:00:00.000Z","date_formatted":{"ll":"Jun 7, 2024","L":"06/07/2024","MM-DD":"06-07"},"thumbnail":"https://blog-1251959181.cos.accelerate.myqcloud.com/ricecake_girl.jpg","link":"2024/06/06/DIY_A6000","comments":true,"tags":["Note","Original Content"],"categories":["LLM"],"updated":"2024-07-01T17:57:02.534Z","content":"<p>⚠️ <strong>经常装机的朋友都知道, 装机容易配环境难</strong></p>\n<hr>\n<h2 id=\"概述\">概述<a title=\"#概述\" href=\"#概述\"></a></h2>\n<h3 id=\"系统环境\">系统环境<a title=\"#系统环境\" href=\"#系统环境\"></a></h3>\n<ul>\n<li>Dell T7920</li>\n<li>centOS 7.6</li>\n</ul>\n<h3 id=\"整体流程\">整体流程<a title=\"#整体流程\" href=\"#整体流程\"></a></h3>\n<ul>\n<li>远程访问</li>\n<li>环境配置</li>\n<li>软件安装</li>\n</ul>\n<h2 id=\"远程访问\">远程访问<a title=\"#远程访问\" href=\"#远程访问\"></a></h2>\n<h3 id=\"ssh基础配置\">ssh基础配置<a title=\"#ssh基础配置\" href=\"#ssh基础配置\"></a></h3>\n<p>首先确定服务器的 ip 地址: <code>192.168.xxx.xxx</code></p>\n<p>使用账号密码登录服务器</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh root@192.168.xxx.xxx</span><br></pre></td></tr></table></figure>\n<p>然而再强的密码也存在风险,所以配置好密钥登录后就将密码登录关闭</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 生成一个用于登录远程服务器的密钥</span></span><br><span class=\"line\">ssh-keygen -t rsa -b 2048 -f ~/.ssh/id_rsa</span><br><span class=\"line\"><span class=\"comment\"># 将公钥拷贝到服务器</span></span><br><span class=\"line\">ssh-copy-id -i ~/.ssh/id_rsa.pub -p XXXX root@&lt;server_ip&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>-i ~/.ssh/id_rsa.pub</code>：指定要复制的公钥文件。</li>\n<li><code>-p XXXX</code>：指定云服务器的SSH端口号, 如果未修改端口号则不用配置。</li>\n<li><code>root@&lt;server_ip&gt;</code>：云服务器的用户名和IP地址。</li>\n</ul>\n<p>确认公钥已正确添加到~/.ssh/authorized_keys文件中：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>\n<p>接下来对 ssh 的配置进行一些必要修改, 使用随意什么趁手的编辑器打开<code>/etc/ssh/sshd_config</code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure>\n<p>并修改以下内容:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Port XXXX</span><br><span class=\"line\">ListenAddress 0.0.0.0</span><br><span class=\"line\">PubkeyAuthentication yes</span><br><span class=\"line\">PasswordAuthentication no</span><br><span class=\"line\">AllowAgentForwarding yes</span><br><span class=\"line\">AllowTcpForwarding yes</span><br></pre></td></tr></table></figure>\n<p>之后配置SELinux和防火墙开放端口并重启SSH服务</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使用semanage命令将1202端口添加到SELinux中的SSH端口列表</span></span><br><span class=\"line\">sudo semanage port -a -t ssh_port_t -p tcp xxxx</span><br><span class=\"line\"><span class=\"comment\"># 确保防火墙也允许1202端口的连接</span></span><br><span class=\"line\">sudo firewall-cmd --permanent --add-port=xxxx/tcp</span><br><span class=\"line\">sudo firewall-cmd --reload</span><br><span class=\"line\"><span class=\"comment\"># 重启SSH服务以应用更改</span></span><br><span class=\"line\">sudo systemctl restart sshd</span><br></pre></td></tr></table></figure>\n<p>此时断开连接,我们就不能再用密码登录了</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 按原命令使用密码登录的错误提示</span></span><br><span class=\"line\">root@192.168.xxx.xxx: Permission denied (publickey,gssapi-keyex,gssapi-with-mic).</span><br></pre></td></tr></table></figure>\n<p>需要在命令中指定使用密钥登录并注明端口号</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -i ~/.ssh/id_rsa -p xxxx root@&lt;server_ip&gt;</span><br></pre></td></tr></table></figure>\n<p>每次都输这么一串命令太麻烦了, 也可以配置在 ssh 配置文件中</p>\n<figure class=\"highlight plaintext\"><figcaption><span>~/.ssh/config</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host &lt;server_name&gt;</span><br><span class=\"line\">  HostName 192.168.xxx.xxx</span><br><span class=\"line\">  User root</span><br><span class=\"line\">  Port xxxx</span><br><span class=\"line\">  ForwardAgent yes</span><br><span class=\"line\">  IdentityFile ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure>\n<p>这样就可以使用名称登录到服务器了</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh &lt;server_name&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"ssh远程连接\">ssh远程连接<a title=\"#ssh远程连接\" href=\"#ssh远程连接\"></a></h3>\n<p>如果你恰好有一台具有公网 ip 的云服务器, 还可以配置 ssh 端口转发,从而实现公网访问内网服务器</p>\n<p>使用以下命令可以将本机的 ssh 端口转发到云服务器上,就可以实现通过云服务器的端口登录内网服务器</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -fNTR 1234:localhost:5678 &lt;server_name&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>-f</code>: 使SSH在后台运行。</li>\n<li><code>-N</code>: 不执行远程命令，只进行端口转发。</li>\n<li><code>-T</code>: 禁用伪终端分配。</li>\n<li><code>-R 1234:localhost:5678</code>: 将本地机器的5678端口转发到远程服务器的1234端口。</li>\n<li><code>&lt;server_name&gt;</code>: 指定要登录的远程服务器。</li>\n</ul>\n<p>这个命令会在本地机器的5678端口和远程服务器的1234端口之间创建一个隧道，所有发送到本地5678端口的数据将通过SSH隧道转发到远程服务器的1234端口。</p>\n<p>为避免端口转发在服务器重启后失效, 以root用户或具有sudo权限的用户身份创建新的Systemd服务文件。例如，创建一个名为<code>ssh-tunnel.service</code>的文件：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/systemd/system/ssh-tunnel.service</span><br></pre></td></tr></table></figure>\n<p>在<code>ssh-tunnel.service</code>文件中添加以下内容：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[Unit]</span></span><br><span class=\"line\"><span class=\"attr\">Description</span>=SSH Tunnel Service</span><br><span class=\"line\"><span class=\"attr\">After</span>=network.target</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[Service]</span></span><br><span class=\"line\"><span class=\"attr\">User</span>=root</span><br><span class=\"line\"><span class=\"attr\">ExecStart</span>=/usr/bin/ssh -NTR <span class=\"number\">1234</span>:localhost:<span class=\"number\">5678</span> &lt;server_name&gt;</span><br><span class=\"line\"><span class=\"attr\">Restart</span>=always</span><br><span class=\"line\"><span class=\"attr\">RestartSec</span>=<span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[Install]</span></span><br><span class=\"line\"><span class=\"attr\">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure>\n<p>解释：</p>\n<ul>\n<li><code>User=root</code>：指定运行该服务的用户。</li>\n<li><code>ExecStart</code>：指定要运行的命令。<strong>(这里不需要<code>-f</code>指定后台运行, 否则服务会立即终止)</strong></li>\n<li><code>Restart=always</code>：确保服务在失败后重新启动。</li>\n<li><code>RestartSec=10</code>：确保服务在重启前等待10s,防止频繁启动。</li>\n<li><code>WantedBy=multi-user.target</code>：指定服务在系统启动的多用户模式下运行。</li>\n</ul>\n<p>接下来重载守护进程并启动服务</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 保存并关闭文件后，重新加载Systemd守护进程以应用新的服务配置</span></span><br><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\"><span class=\"comment\"># 启用服务以便在系统启动时自动运行</span></span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> ssh-tunnel</span><br><span class=\"line\"><span class=\"comment\"># 启动服务</span></span><br><span class=\"line\">sudo systemctl start ssh-tunnel</span><br><span class=\"line\"><span class=\"comment\"># 检查服务状态以确保其正确运行</span></span><br><span class=\"line\">sudo systemctl status ssh-tunnel</span><br></pre></td></tr></table></figure>\n<h3 id=\"gui远程桌面\">GUI远程桌面<a title=\"#gui远程桌面\" href=\"#gui远程桌面\"></a></h3>\n<!-- 是的，您可以远程访问CentOS的GUI桌面。以下是几种常见的方法：\n\n#### 方法一：使用 VNC (Virtual Network Computing)\n\nVNC 是一种常见的远程桌面解决方案。以下是如何设置 VNC 服务器并进行远程访问：\n\n##### 1. 安装 VNC 服务器\n\n在 CentOS 上安装 TigerVNC 服务器：\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install tigervnc-server</span><br></pre></td></tr></table></figure>\n<h5 id=\"2.-配置-vnc-服务器\">2. 配置 VNC 服务器<a title=\"#2.-配置-vnc-服务器\" href=\"#2.-配置-vnc-服务器\"></a></h5>\n<p>复制默认的 VNC 配置文件并进行编辑：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> /lib/systemd/system/vncserver@.service /etc/systemd/system/vncserver@:1.service</span><br></pre></td></tr></table></figure>\n<p>编辑 <code>/etc/systemd/system/vncserver@:1.service</code> 文件，找到以下行并修改为适合您的用户名：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Service]</span><br><span class=\"line\">User=&lt;your_username&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"3.-设置-vnc-密码\">3. 设置 VNC 密码<a title=\"#3.-设置-vnc-密码\" href=\"#3.-设置-vnc-密码\"></a></h5>\n<p>以您的用户身份设置 VNC 密码：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su - &lt;your_username&gt;</span><br><span class=\"line\">vncpasswd</span><br></pre></td></tr></table></figure>\n<h5 id=\"4.-启动-vnc-服务器\">4. 启动 VNC 服务器<a title=\"#4.-启动-vnc-服务器\" href=\"#4.-启动-vnc-服务器\"></a></h5>\n<p>启动并启用 VNC 服务：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\">sudo systemctl start vncserver@:1</span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> vncserver@:1</span><br></pre></td></tr></table></figure>\n<h5 id=\"5.-通过-vnc-客户端连接\">5. 通过 VNC 客户端连接<a title=\"#5.-通过-vnc-客户端连接\" href=\"#5.-通过-vnc-客户端连接\"></a></h5>\n<p>使用 VNC 客户端（如 RealVNC 或 TigerVNC）连接到 <code>your_server_ip:1</code>。</p>\n<h4 id=\"方法二：使用-xrdp---&gt;\">方法二：使用 XRDP --&gt;<a title=\"#方法二：使用-xrdp---&gt;\" href=\"#方法二：使用-xrdp---&gt;\"></a></h4>\n<p>XRDP 是一种将 RDP 协议引入到 Linux 环境中的工具。</p>\n<h4 id=\"1.-安装-xrdp\">1. 安装 XRDP<a title=\"#1.-安装-xrdp\" href=\"#1.-安装-xrdp\"></a></h4>\n<p>安装 EPEL 存储库，然后安装 XRDP：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install epel-release</span><br><span class=\"line\">sudo yum install xrdp</span><br></pre></td></tr></table></figure>\n<h4 id=\"2.-启动-xrdp-服务\">2. 启动 XRDP 服务<a title=\"#2.-启动-xrdp-服务\" href=\"#2.-启动-xrdp-服务\"></a></h4>\n<p>启动并启用 XRDP 服务：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl start xrdp</span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> xrdp</span><br></pre></td></tr></table></figure>\n<h4 id=\"3.-配置防火墙\">3. 配置防火墙<a title=\"#3.-配置防火墙\" href=\"#3.-配置防火墙\"></a></h4>\n<p>确保防火墙允许 RDP 连接：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo firewall-cmd --permanent --add-port=3389/tcp</span><br><span class=\"line\">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure>\n<h4 id=\"4.-使用-rdp-客户端连接\">4. 使用 RDP 客户端连接<a title=\"#4.-使用-rdp-客户端连接\" href=\"#4.-使用-rdp-客户端连接\"></a></h4>\n<p>使用 Windows 自带的远程桌面连接工具或其他 RDP 客户端连接到 <code>your_server_ip:3389</code>。</p>\n<!-- #### 方法三：使用 NoMachine\n\nNoMachine 是一种高性能的远程桌面解决方案。\n\n##### 1. 下载并安装 NoMachine\n\n从 NoMachine 官方网站下载 NoMachine RPM 包，然后安装：\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rpm -i nomachine_*.rpm</span><br></pre></td></tr></table></figure>\n<h5 id=\"2.-配置防火墙\">2. 配置防火墙<a title=\"#2.-配置防火墙\" href=\"#2.-配置防火墙\"></a></h5>\n<p>确保防火墙允许 NoMachine 连接（默认端口为4000）：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo firewall-cmd --permanent --add-port=4000/tcp</span><br><span class=\"line\">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure>\n<h5 id=\"3.-使用-nomachine-客户端连接\">3. 使用 NoMachine 客户端连接<a title=\"#3.-使用-nomachine-客户端连接\" href=\"#3.-使用-nomachine-客户端连接\"></a></h5>\n<p>从 NoMachine 客户端连接到 <code>your_server_ip:4000</code>。</p>\n<h4 id=\"总结\">总结<a title=\"#总结\" href=\"#总结\"></a></h4>\n<p>以上是三种常见的远程访问 CentOS GUI 桌面的方法。根据您的需求和环境，选择合适的工具进行配置和使用。如果您有更多问题或需要进一步的帮助，请告诉我。 --&gt;</p>\n<h2 id=\"环境配置\">环境配置<a title=\"#环境配置\" href=\"#环境配置\"></a></h2>\n<p>首先确保系统正确安装, 并更新软件源, 第一次更新可能时间会比较久</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum update</span><br></pre></td></tr></table></figure>\n<p>理想情况下,只需要按以下命令添加官方源并安装CUDA,脚本会自动下载CUDA和NVIDIA驱动程序,这样可以避免驱动和 CUDA 版本不兼容的情况.</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加 NVIDIA CUDA 和驱动程序的官方存储库</span></span><br><span class=\"line\">sudo yum install -y epel-release</span><br><span class=\"line\">sudo yum-config-manager --add-repo=https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/cuda-rhel7.repo</span><br><span class=\"line\"><span class=\"comment\"># 安装  CUDA</span></span><br><span class=\"line\">sudo yum install cuda</span><br><span class=\"line\"><span class=\"comment\"># 设置 CUDA 的环境变量</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;export PATH=/usr/local/cuda/bin:$PATH&#x27;</span> &gt;&gt; ~/.bashrc</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH&#x27;</span> &gt;&gt; ~/.bashrc</span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br><span class=\"line\">sudo reboot</span><br><span class=\"line\"><span class=\"comment\"># 验证 NVIDIA 驱动程序和 CUDA 是否正确安装</span></span><br><span class=\"line\">nvidia-smi</span><br><span class=\"line\">nvcc -V</span><br></pre></td></tr></table></figure>\n<hr>\n<p>以下是官方推荐步骤</p>\n<p>如果遇到问题，可以参考<a href=\"https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html\" target=\"_blank\">NVIDIA官方CUDA安装指南</a>获取更多详细信息。</p>\n<h3 id=\"安装nvidia驱动程序\">安装NVIDIA驱动程序<a title=\"#安装nvidia驱动程序\" href=\"#安装nvidia驱动程序\"></a></h3>\n<p>检查PCI设备</p>\n<p>尝试使用 <code>lspci</code> 列出所有PCI设备，确认是否有显示任何NVIDIA设备。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lspci | grep -i nvidia</span><br></pre></td></tr></table></figure>\n<p>使用NVIDIA提供的官方存储库来安装NVIDIA驱动程序。以下是详细步骤：</p>\n<h4 id=\"0.-禁用默认nouveau驱动程序\">0. 禁用默认nouveau驱动程序<a title=\"#0.-禁用默认nouveau驱动程序\" href=\"#0.-禁用默认nouveau驱动程序\"></a></h4>\n<p>在安装NVIDIA驱动程序之前，编辑<code>/etc/modprobe.d/blacklist.conf</code>文件并添加以下行：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">blacklist nouveau</span><br><span class=\"line\">options nouveau modeset=0</span><br></pre></td></tr></table></figure>\n<p>然后重新生成initramfs文件：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dracut --force</span><br><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure>\n<!-- sudo bash -c \"echo 'blacklist nouveau' > /etc/modprobe.d/blacklist-nouveau.conf\"\nsudo bash -c \"echo 'options nouveau modeset=0' >> /etc/modprobe.d/blacklist-nouveau.conf\"\nsudo dracut --force -->\n<h4 id=\"1.-添加nvidia存储库\">1. 添加NVIDIA存储库<a title=\"#1.-添加nvidia存储库\" href=\"#1.-添加nvidia存储库\"></a></h4>\n<p>首先，添加NVIDIA的官方存储库。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install epel-release</span><br><span class=\"line\">sudo yum-config-manager --add-repo=https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/cuda-rhel7.repo</span><br></pre></td></tr></table></figure>\n<h4 id=\"2.-安装驱动程序\">2. 安装驱动程序<a title=\"#2.-安装驱动程序\" href=\"#2.-安装驱动程序\"></a></h4>\n<p>然后，安装NVIDIA驱动程序。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum clean all</span><br><span class=\"line\">sudo yum install nvidia-driver kernel-devel</span><br></pre></td></tr></table></figure>\n<h4 id=\"3.-重启系统\">3. 重启系统<a title=\"#3.-重启系统\" href=\"#3.-重启系统\"></a></h4>\n<p>安装完成后，重启系统以加载新的驱动程序。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure>\n<h4 id=\"4.-验证安装\">4. 验证安装<a title=\"#4.-验证安装\" href=\"#4.-验证安装\"></a></h4>\n<p>重启后，使用<code>nvidia-smi</code>命令验证驱动程序是否正确安装并识别显卡。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvidia-smi</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Fri Jun  7 03:10:15 2024       </span><br><span class=\"line\">+-----------------------------------------------------------------------------------------+</span><br><span class=\"line\">| NVIDIA-SMI 550.90.07              Driver Version: 550.90.07      CUDA Version: 12.4     |</span><br><span class=\"line\">|-----------------------------------------+------------------------+----------------------+</span><br><span class=\"line\">| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |</span><br><span class=\"line\">| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |</span><br><span class=\"line\">|                                         |                        |               MIG M. |</span><br><span class=\"line\">|=========================================+========================+======================|</span><br><span class=\"line\">|   0  NVIDIA RTX A6000               Off |   00000000:17:00.0 Off |                  Off |</span><br><span class=\"line\">| 30%   53C    P0             76W /  300W |       1MiB /  49140MiB |      3%      Default |</span><br><span class=\"line\">|                                         |                        |                  N/A |</span><br><span class=\"line\">+-----------------------------------------+------------------------+----------------------+</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装cuda\">安装CUDA<a title=\"#安装cuda\" href=\"#安装cuda\"></a></h3>\n<p>在CentOS上安装CUDA需要按照NVIDIA提供的官方指南进行。以下是详细步骤：</p>\n<h4 id=\"1.-检查并卸载旧版本\">1. 检查并卸载旧版本<a title=\"#1.-检查并卸载旧版本\" href=\"#1.-检查并卸载旧版本\"></a></h4>\n<p>如果之前已经安装过CUDA，最好先卸载旧版本：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum remove cuda</span><br><span class=\"line\">sudo yum remove <span class=\"string\">&quot;xorg-x11-drv-nvidia*&quot;</span></span><br><span class=\"line\">sudo yum clean all</span><br></pre></td></tr></table></figure>\n<h4 id=\"2.-添加nvidia的cuda存储库\">2. 添加NVIDIA的CUDA存储库<a title=\"#2.-添加nvidia的cuda存储库\" href=\"#2.-添加nvidia的cuda存储库\"></a></h4>\n<p>首先，添加NVIDIA的CUDA存储库。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install -y epel-release</span><br><span class=\"line\">sudo yum-config-manager --add-repo=https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/cuda-rhel7.repo</span><br></pre></td></tr></table></figure>\n<!-- 对于CentOS 8，使用以下命令：\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dnf config-manager --add-repo=https://developer.download.nvidia.com/compute/cuda/repos/rhel8/x86_64/cuda-rhel8.repo</span><br><span class=\"line\">``` --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#### 3. 安装CUDA</span></span><br><span class=\"line\"></span><br><span class=\"line\">安装CUDA：</span><br><span class=\"line\"></span><br><span class=\"line\">```sh</span><br><span class=\"line\">sudo yum install cuda</span><br></pre></td></tr></table></figure>\n<!-- 在CentOS 8上，使用以下命令：\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dnf install cuda</span><br><span class=\"line\">``` --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#### 4. 设置环境变量</span></span><br><span class=\"line\"></span><br><span class=\"line\">安装完成后，需要设置环境变量。可以通过修改`~/.bashrc`文件来实现：</span><br><span class=\"line\"></span><br><span class=\"line\">```sh</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;export PATH=/usr/local/cuda/bin:$PATH&#x27;</span> &gt;&gt; ~/.bashrc</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH&#x27;</span> &gt;&gt; ~/.bashrc</span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>\n<h4 id=\"5.-验证安装\">5. 验证安装<a title=\"#5.-验证安装\" href=\"#5.-验证安装\"></a></h4>\n<p>验证CUDA是否正确安装，可以运行以下命令检查CUDA版本：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvcc -V</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvcc: NVIDIA (R) Cuda compiler driver</span><br><span class=\"line\">Copyright (c) 2005-2024 NVIDIA Corporation</span><br><span class=\"line\">Built on Thu_Mar_28_02:18:24_PDT_2024</span><br><span class=\"line\">Cuda compilation tools, release 12.4, V12.4.131</span><br><span class=\"line\">Build cuda_12.4.r12.4/compiler.34097967_0</span><br></pre></td></tr></table></figure>\n<p>此外，可以运行NVIDIA提供的示例程序来验证安装：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cuda-install-samples-&lt;version&gt;.sh ~/</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~/NVIDIA_CUDA-&lt;version&gt;_Samples/1_Utilities/deviceQuery</span><br><span class=\"line\">make</span><br><span class=\"line\">./deviceQuery</span><br></pre></td></tr></table></figure>\n<p>以上命令会生成并运行设备查询示例程序，输出有关NVIDIA GPU的信息。</p>\n<h2 id=\"软件安装\">软件安装<a title=\"#软件安装\" href=\"#软件安装\"></a></h2>\n<!-- #### 安装ollama\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -fsSL https://ollama.com/install.sh | sh</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; Downloading ollama...</span><br><span class=\"line\"><span class=\"comment\">######################################################################## 100.0%</span></span><br><span class=\"line\">&gt;&gt;&gt; Installing ollama to /usr/local/bin...</span><br><span class=\"line\">&gt;&gt;&gt; Creating ollama user...</span><br><span class=\"line\">&gt;&gt;&gt; Adding ollama user to video group...</span><br><span class=\"line\">&gt;&gt;&gt; Adding current user to ollama group...</span><br><span class=\"line\">&gt;&gt;&gt; Creating ollama systemd service...</span><br><span class=\"line\">&gt;&gt;&gt; Enabling and starting ollama service...</span><br><span class=\"line\">Created symlink from /etc/systemd/system/default.target.wants/ollama.service to /etc/systemd/system/ollama.service.</span><br><span class=\"line\">&gt;&gt;&gt; NVIDIA GPU installed.</span><br><span class=\"line\">``` --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 安装docker</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- ```sh</span><br><span class=\"line\">sudo yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine</span><br><span class=\"line\">sudo yum install -y yum-utils</span><br><span class=\"line\">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class=\"line\">sudo yum install docker-ce docker-ce-cli containerd.io</span><br><span class=\"line\">sudo systemctl start docker</span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> docker</span><br><span class=\"line\">``` --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">要在CentOS 7上安装NVIDIA Docker运行时，请按照以下步骤操作：</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#### 1. 安装基本依赖</span></span><br><span class=\"line\"></span><br><span class=\"line\">首先，确保系统已经更新，并安装必要的依赖项。</span><br><span class=\"line\"></span><br><span class=\"line\">```sh</span><br><span class=\"line\">sudo yum update -y</span><br><span class=\"line\">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure>\n<h4 id=\"2.-添加docker存储库\">2. 添加Docker存储库<a title=\"#2.-添加docker存储库\" href=\"#2.-添加docker存储库\"></a></h4>\n<p>添加Docker的官方存储库并安装Docker CE。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class=\"line\">sudo yum install -y docker-ce docker-ce-cli containerd.io</span><br><span class=\"line\">sudo systemctl start docker</span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> docker</span><br></pre></td></tr></table></figure>\n<h4 id=\"3.-添加nvidia-docker存储库\">3. 添加NVIDIA Docker存储库<a title=\"#3.-添加nvidia-docker存储库\" href=\"#3.-添加nvidia-docker存储库\"></a></h4>\n<p>添加NVIDIA Docker的存储库。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">distribution=$(. /etc/os-release;<span class=\"built_in\">echo</span> $ID<span class=\"variable\">$VERSION_ID</span>) \\</span><br><span class=\"line\">    &amp;&amp; sudo yum-config-manager --add-repo https://nvidia.github.io/nvidia-docker/<span class=\"variable\">$distribution</span>/nvidia-docker.repo</span><br></pre></td></tr></table></figure>\n<h4 id=\"4.-安装nvidia-docker运行时\">4. 安装NVIDIA Docker运行时<a title=\"#4.-安装nvidia-docker运行时\" href=\"#4.-安装nvidia-docker运行时\"></a></h4>\n<p>安装NVIDIA Docker 2和相关组件。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install -y nvidia-docker2</span><br><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n<h4 id=\"5.-配置docker守护程序\">5. 配置Docker守护程序<a title=\"#5.-配置docker守护程序\" href=\"#5.-配置docker守护程序\"></a></h4>\n<p>确保Docker使用NVIDIA的容器运行时。编辑或创建<code>/etc/docker/daemon.json</code>文件，添加以下内容：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;default-runtime&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;nvidia&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;runtimes&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;nvidia&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;path&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;nvidia-container-runtime&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;runtimeArgs&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>重启Docker服务以应用更改：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n<h4 id=\"6.-验证安装\">6. 验证安装<a title=\"#6.-验证安装\" href=\"#6.-验证安装\"></a></h4>\n<p>验证NVIDIA Docker运行时是否正确安装并运行：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --<span class=\"built_in\">rm</span> --gpus all nvidia/cuda:11.0-base nvidia-smi</span><br></pre></td></tr></table></figure>\n<p>如果输出显示您的GPU信息，则安装成功。</p>\n<h4 id=\"详细步骤总结\">详细步骤总结<a title=\"#详细步骤总结\" href=\"#详细步骤总结\"></a></h4>\n<ol>\n<li>\n<p><strong>更新系统和安装依赖：</strong></p>\n <figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum update -y</span><br><span class=\"line\">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>添加Docker存储库并安装Docker CE：</strong></p>\n <figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class=\"line\">sudo yum install -y docker-ce docker-ce-cli containerd.io</span><br><span class=\"line\">sudo systemctl start docker</span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> docker</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>添加NVIDIA Docker存储库并安装NVIDIA Docker 2：</strong></p>\n <figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">distribution=$(. /etc/os-release;<span class=\"built_in\">echo</span> $ID<span class=\"variable\">$VERSION_ID</span>) \\</span><br><span class=\"line\">    &amp;&amp; sudo yum-config-manager --add-repo https://nvidia.github.io/nvidia-docker/<span class=\"variable\">$distribution</span>/nvidia-docker.repo</span><br><span class=\"line\">sudo yum install -y nvidia-docker2</span><br><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>配置Docker守护程序：</strong></p>\n <figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"built_in\">tee</span> /etc/docker/daemon.json &lt;&lt;<span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">&#123;</span></span><br><span class=\"line\"><span class=\"string\">    &quot;default-runtime&quot;: &quot;nvidia&quot;,</span></span><br><span class=\"line\"><span class=\"string\">    &quot;runtimes&quot;: &#123;</span></span><br><span class=\"line\"><span class=\"string\">        &quot;nvidia&quot;: &#123;</span></span><br><span class=\"line\"><span class=\"string\">            &quot;path&quot;: &quot;nvidia-container-runtime&quot;,</span></span><br><span class=\"line\"><span class=\"string\">            &quot;runtimeArgs&quot;: []</span></span><br><span class=\"line\"><span class=\"string\">        &#125;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>验证安装：</strong></p>\n <figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --<span class=\"built_in\">rm</span> --gpus all nvidia/cuda:11.0-base nvidia-smi</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>通过这些步骤，您可以在CentOS 7上成功安装和配置NVIDIA Docker运行时。如果遇到任何问题或需要进一步的帮助，请告诉我。</p>\n<h3 id=\"安装ollama\">安装ollama<a title=\"#安装ollama\" href=\"#安装ollama\"></a></h3>\n<p>官方给出的</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --gpus=all -v ollama:/root/.ollama -p 11434:11434 --name ollama ollama/ollama</span><br></pre></td></tr></table></figure>\n<p>如果磁盘空间不够,可以指定挂载路径,比如我已经下载过一些模型,并将他们放在了<code>/home/ollama/models</code>目录下,则可以在运行时指定将<code>/home/ollama/</code>挂载到容器:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --gpus=all -v /home/ollama:/root/.ollama -p 11434:11434 --name ollama --restart always ollama/ollama</span><br></pre></td></tr></table></figure>\n<p>此时可以使用<code>ollama list</code>命令检查本地的模型文件是否已被读取</p>\n<h3 id=\"安装open-webui\">安装open-webui<a title=\"#安装open-webui\" href=\"#安装open-webui\"></a></h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda</span><br></pre></td></tr></table></figure>\n<p>现在就可以访问 3000 端口开始和大模型愉快的玩耍了.</p>\n<p>如果出现 ollama 连接不上的情况,可以在<code>设置</code> -&gt; <code>外部链接</code> -&gt; <code>Ollama API</code> 将地址修改为 <code>http://host.docker.internal:11434</code>/<code>http://localhost:11434</code></p>\n","next":{"title":"效率提高3倍的论文阅读方法","link":"2023/11/28/bilibili_paper_reading"},"plink":"https://vincenteliang.com/2024/06/06/DIY_A6000/","toc":[{"id":"概述","title":"概述","index":"1","children":[{"id":"系统环境","title":"系统环境","index":"1.1"},{"id":"整体流程","title":"整体流程","index":"1.2"}]},{"id":"远程访问","title":"远程访问","index":"2","children":[{"id":"ssh基础配置","title":"ssh基础配置","index":"2.1"},{"id":"ssh远程连接","title":"ssh远程连接","index":"2.2"},{"id":"gui远程桌面","title":"GUI远程桌面","index":"2.3"},{"id":"安装cuda","title":"安装CUDA","index":"2.4"}]}],"reward":true,"copyright":{"author":"Vincente Liang","link":"<a href=\"https://vincenteliang.com/2024/06/06/DIY_A6000/\" title=\"从零开始搭建自己的大模型服务器\">https://vincenteliang.com/2024/06/06/DIY_A6000/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"June 7, 2024","updated":"July 1, 2024"},"reading_time":"1430 words in 10 min"}